WEBVTT

1
00:00:06.470 --> 00:00:07.730
Hello.

2
00:00:13.750 --> 00:00:14.583
<v 0>Okay,</v>

3
00:00:15.410 --> 00:00:16.243
<v 1>let's see.</v>

4
00:00:28.160 --> 00:00:31.520
Hello world.
It's the Raj,
welcome to this live stream.

5
00:00:32.240 --> 00:00:37.240
Today I'm going to be a visualizing data with d three dot.

6
00:00:38.361 --> 00:00:41.210
Js,
which is a data visualization library.

7
00:00:41.660 --> 00:00:43.430
I don't normally do,

8
00:00:44.100 --> 00:00:44.933
<v 2>uh,</v>

9
00:00:45.600 --> 00:00:47.910
<v 1>anything with javascript for this channel,</v>

10
00:00:47.911 --> 00:00:51.210
but I've done a lot of javascript in the past.
When I worked at Twilio,

11
00:00:51.330 --> 00:00:53.400
when I worked on my own side projects,

12
00:00:53.490 --> 00:00:58.490
javascript is a great language for hackathons or hacking up anything really

13
00:01:00.991 --> 00:01:05.250
quickly to,
to show off.
And data visualization is really important,

14
00:01:05.900 --> 00:01:07.380
uh,
for Demo and what you've done.

15
00:01:07.590 --> 00:01:09.390
So that's what we're going to be talking about that.

16
00:01:09.810 --> 00:01:12.180
So I'm going to start off this,
uh,

17
00:01:12.210 --> 00:01:17.130
livestream with a five minute Q and a and then we'll get right to the code.

18
00:01:17.160 --> 00:01:21.450
And what we're going to be doing is visualizing the survivor Dataset,

19
00:01:21.960 --> 00:01:23.550
uh,
for the titanic.

20
00:01:24.590 --> 00:01:25.410
<v 2>MMM.</v>

21
00:01:25.410 --> 00:01:29.400
<v 1>Kaggle Dataset.
All right,
so let's start off with the Q and.
A.
Hi everybody.</v>

22
00:01:29.460 --> 00:01:32.340
How's it going?
Good to see you guys.

23
00:01:35.740 --> 00:01:40.430
Um,
what are my thoughts on neural networks for F PGA?
Um,

24
00:01:41.400 --> 00:01:45.760
FPG A's operate on a completely different,
uh,
architecture,

25
00:01:45.790 --> 00:01:47.050
like a computing architecture.

26
00:01:47.200 --> 00:01:50.920
And I think that there's a lot of space for experimentation with that.

27
00:01:51.160 --> 00:01:56.160
I've only seen one tutorial on f F PGS in neural networks on the machine

28
00:01:57.131 --> 00:02:00.730
learning sub reddit and that was like a few months ago.
Um,
but I,

29
00:02:00.910 --> 00:02:02.830
I definitely think there's a lot of work to do there.

30
00:02:04.980 --> 00:02:09.980
A data visualization with the unity and d three I would pick one or the other.

31
00:02:10.061 --> 00:02:11.650
I don't see how both of them would work together.

32
00:02:11.651 --> 00:02:13.840
Unity is like something entirely different.

33
00:02:13.841 --> 00:02:18.070
It's for three d graphics and in d three is more for two d a neural net for

34
00:02:18.071 --> 00:02:20.920
Pokemon would be awesome.
That's actually been done before.

35
00:02:21.040 --> 00:02:23.830
Actually if you look today on the machine learning sub Reddit,
there is a,

36
00:02:23.831 --> 00:02:28.150
there's a guy who di just colorized Pokemon blue for uh,

37
00:02:29.560 --> 00:02:31.570
using a convolutional neural network.

38
00:02:32.950 --> 00:02:37.810
How should I prepare for a thesis interview on autonomous driving?
Uh,

39
00:02:39.040 --> 00:02:42.490
you should take the self driving car nanodegree that I'm working on with you,

40
00:02:42.491 --> 00:02:44.920
Udacity.
It's totally worth it.

41
00:02:44.921 --> 00:02:48.490
A bunch of car companies are going to look at this as a valid thing.

42
00:02:48.491 --> 00:02:52.450
So you should totally look at that
for an amateur.

43
00:02:52.451 --> 00:02:55.570
I would say start with d three,
not okay.

44
00:02:55.600 --> 00:02:58.930
If you want to get into data visualization using javascript

45
00:03:00.520 --> 00:03:05.520
and any code pat podcast or youtube channels that I recommend,

46
00:03:06.040 --> 00:03:10.960
I would say,
um,
my own,

47
00:03:12.030 --> 00:03:16.930
uh,
let's see.
I really like,
um,
let's see there,
there are a couple,

48
00:03:16.931 --> 00:03:21.340
but I think one that comes to mind is,
um,
one for Ios.
Uh,

49
00:03:21.470 --> 00:03:26.100
it's uh,
the guy who made a half networking,
so search Ahab networking,
uh,

50
00:03:26.200 --> 00:03:30.250
blog.
His name's Matt.
Any book from machine learning?

51
00:03:30.280 --> 00:03:34.240
I'm really excited for Andrew [inaudible] machine learning yearning a,

52
00:03:34.580 --> 00:03:37.240
that's coming out in like a month.
I think that's going to be super cool.

53
00:03:38.080 --> 00:03:41.980
Where do I work?
I do this youtube channel fulltime.
I don't that,
that's,

54
00:03:42.020 --> 00:03:44.920
that's all I do.
A,
I'm not going to work for anybody.

55
00:03:47.410 --> 00:03:51.550
Do I classify d three.
Dot.
JS is a low level graphics library.
Um,

56
00:03:51.580 --> 00:03:55.570
I classify it as lower level than a lot of javascript libraries because it works

57
00:03:55.600 --> 00:03:57.700
in,
manipulates the dom directly,

58
00:03:58.210 --> 00:04:02.620
which is the elements that you see on the page.
The document object model.

59
00:04:02.621 --> 00:04:05.920
The dom is just an,
is a fancy way of saying what you see on a page.

60
00:04:08.020 --> 00:04:12.430
Are you using d three Pi Library?
No,
I'm just working directly with d three

61
00:04:14.440 --> 00:04:17.260
and,
uh,
also I just want it to say,
uh,

62
00:04:17.270 --> 00:04:22.270
about the whole Trump election.
Everything's gonna be okay.

63
00:04:22.810 --> 00:04:27.340
Don't worry about it.
If you look at the data,
the majority of people,
18 to 25,

64
00:04:27.341 --> 00:04:30.580
like nine,
96% of millennial voters voted for Hillary.

65
00:04:30.820 --> 00:04:34.390
So the future is still bright and,
uh,
you know,

66
00:04:34.391 --> 00:04:35.980
if we just keep going in this bad direction,

67
00:04:35.981 --> 00:04:40.180
I'll just run for president and like 20 years.
So.
Well,
you know what I'm saying?

68
00:04:40.181 --> 00:04:44.470
So anyway,
what data,
uh,
just,
it's,
it's all over Twitter.
I mean,
just like,

69
00:04:46.630 --> 00:04:48.610
yeah.
Anyway.
All right,

70
00:04:49.270 --> 00:04:53.590
two more questions and then we're going to get started this.
Let's see.

71
00:04:55.270 --> 00:04:56.103
Um,

72
00:04:58.560 --> 00:05:01.830
what will the schedule for today be?
It's going to be

73
00:05:03.510 --> 00:05:06.960
a schedule for today will be,
uh,

74
00:05:07.320 --> 00:05:10.080
using d three dot js to visualize,

75
00:05:10.140 --> 00:05:15.140
to visualize data for the titanic survivor Dataset off of Kaggle.

76
00:05:15.750 --> 00:05:19.590
And I'm going to show you guys that.
Okay,
last question.
How old are you?

77
00:05:19.591 --> 00:05:23.700
I am 25 years old,
25 years old.
All right,

78
00:05:24.270 --> 00:05:28.170
that's all for um,
okay,
one more,
uh,

79
00:05:28.200 --> 00:05:30.510
thoughts on self driving cars.
They're coming really,
really fast.

80
00:05:30.511 --> 00:05:33.590
Like next year I've actually saw a lot of self driving cars,
uh,

81
00:05:33.930 --> 00:05:35.130
just here in San Francisco.

82
00:05:35.131 --> 00:05:39.060
Just like all around like they're like Uber is testing them.

83
00:05:40.020 --> 00:05:42.360
So anyway.
Okay,
so here we go.
We're going to get started.

84
00:05:42.660 --> 00:05:45.570
I'm going to go ahead and screen cast.
So,
um,

85
00:05:46.710 --> 00:05:50.160
go ahead and I want you guys to work with me on this.
Okay.
If you have,

86
00:05:50.610 --> 00:05:55.020
all you need to do is have node installed node dot js.
All right,

87
00:05:55.800 --> 00:06:00.410
so let's,
I'm going to screen and we're going to get started.
Here we go.

88
00:06:00.411 --> 00:06:04.340
Here we go.
One more time.
Everybody feel advanced screen share.

89
00:06:05.320 --> 00:06:08.300
All right.
Okay.
To

90
00:06:10.110 --> 00:06:14.660
share blah,
blah,
blah.
Okay,

91
00:06:15.230 --> 00:06:18.260
so now you guys see a bunch of stuff here.

92
00:06:19.870 --> 00:06:20.703
<v 0>All right,</v>

93
00:06:22.710 --> 00:06:24.540
<v 1>I'm going to put this in the corner</v>

94
00:06:27.560 --> 00:06:31.490
that,
that,
that uh,
I thought about being a rapper,
but you know,

95
00:06:31.491 --> 00:06:35.660
computer science is just my calling and I'm sure I can combine both.

96
00:06:35.661 --> 00:06:38.030
I'm actually going to La.
Youtube is,

97
00:06:38.060 --> 00:06:41.720
I just wanted this youtube thing called next up for creators,
like 20 creators.

98
00:06:42.110 --> 00:06:45.380
And I'm going to go to,
they're paying for the flight and the hotel and

99
00:06:46.940 --> 00:06:49.550
it's going to be really cool.
I'm going to try to make a,

100
00:06:49.610 --> 00:06:53.720
not try and wait to make a machine learning music video.
So,
oh,

101
00:06:53.721 --> 00:06:54.650
I just admitted that.

102
00:06:54.651 --> 00:06:58.210
Say you guys get to know the details because you're watching me live and then

103
00:06:58.220 --> 00:07:00.950
really tell anybody this,
but okay,
so here we go.

104
00:07:01.640 --> 00:07:04.370
Let me explain what I have here on the screen.
Let me maximize this.

105
00:07:06.680 --> 00:07:10.490
Let me maximize this.
Blah,
blah,
blah,
blah,
blah.
Make it really big

106
00:07:12.670 --> 00:07:15.920
corner here.
Uh,
there I am.
Really small,

107
00:07:17.000 --> 00:07:21.830
just like my
brain.

108
00:07:21.860 --> 00:07:25.700
Just kidding.
Okay.
So,
all right,

109
00:07:25.940 --> 00:07:28.130
what do I have here?
What do I have here?

110
00:07:28.790 --> 00:07:31.940
I have a node APP.
Okay.

111
00:07:32.270 --> 00:07:35.720
And let me explain what's happening here.

112
00:07:35.900 --> 00:07:39.200
I have a few things pre coded so that we don't have to code that.

113
00:07:39.230 --> 00:07:42.600
I just have a few things pre coded right now.
Uh,
so we just kept right to the,

114
00:07:42.800 --> 00:07:46.490
the good stuff.
So let's talk about what we have here.
So in your,

115
00:07:46.491 --> 00:07:51.350
so what you want to do is you want to start off by creating a package dot Jason

116
00:07:51.650 --> 00:07:55.740
and in node.
Well,
actually let me just,
let me start off with explaining,
uh,

117
00:07:56.300 --> 00:07:57.170
what we're doing here.

118
00:07:57.440 --> 00:08:01.730
So we're going to visualize our data in the browser with d three.
Okay.

119
00:08:02.060 --> 00:08:05.450
The data set we're using is the titanic survivor Dataset off of Kaggle.

120
00:08:05.660 --> 00:08:08.510
And let me just show you guys an example of that.

121
00:08:08.840 --> 00:08:12.440
So the Kaggle Titanic Dataset,
uh,

122
00:08:12.650 --> 00:08:17.490
is really popular.
It's been in use in machine learning for quite a while.

123
00:08:17.900 --> 00:08:22.310
Um,
let me have that show up on the screen right here.
Okay.

124
00:08:22.580 --> 00:08:26.960
Where did that go?
Where'd it go?
Boom.
Is it behind this?
Where'd it go?

125
00:08:27.860 --> 00:08:32.660
Fuck,
hold on.
There it is.
Okay.
So yeah,

126
00:08:32.661 --> 00:08:37.030
this is,
it is.
You can find it on Kaggle.
There's a,
there's a bunch of great,
um,

127
00:08:37.730 --> 00:08:41.500
data sets off of Kaggle on always using cake.
All data sets.

128
00:08:41.501 --> 00:08:44.410
They're well documented and have a lot of people that are using them.

129
00:08:44.650 --> 00:08:45.760
And so with this one is,

130
00:08:45.761 --> 00:08:50.761
is it shows all the passengers off of titanic and it shows whether or not they

131
00:08:50.981 --> 00:08:53.110
survived and a bunch of features about them.

132
00:08:53.230 --> 00:08:57.810
So it's going to show things like their age,
gender,
uh,
where they embarked from,

133
00:08:58.010 --> 00:09:02.310
uh,
where they're from in general.
Um,
and whether or not they survived,

134
00:09:02.311 --> 00:09:05.280
which is a Boolean,
like yes,
they survived or no,
they didn't survive.

135
00:09:05.640 --> 00:09:07.500
And we can do a lot of things with this data.

136
00:09:07.501 --> 00:09:11.040
We can predict if somebody survived based on what their gender is.

137
00:09:11.280 --> 00:09:13.740
While we can predict whether it's not somebody survived based on where they're

138
00:09:13.741 --> 00:09:14.370
from.

139
00:09:14.370 --> 00:09:18.240
And so it's a really great data set to get started with learning about machine

140
00:09:18.241 --> 00:09:20.160
learning and predictive analytics.
Okay.

141
00:09:20.161 --> 00:09:22.740
So that's the data set we're going to using.
You were going to be using,

142
00:09:22.741 --> 00:09:26.940
you can get it from right here,
right at this link.
All right.
Uh,

143
00:09:27.020 --> 00:09:31.590
so that's the Dataset.
And uh,
we're going to be using,

144
00:09:31.770 --> 00:09:35.670
uh,
the node.
We're going to be using Java script,
by the way.

145
00:09:35.671 --> 00:09:36.960
And the reason we're using javascript,

146
00:09:37.110 --> 00:09:42.060
because javascript is the programming language of the web.
Javascript is messy.

147
00:09:42.120 --> 00:09:42.953
It's ugly,

148
00:09:42.990 --> 00:09:47.190
it's been stretched and pulled to do things that no one ever intended for it to

149
00:09:47.191 --> 00:09:51.480
do.
Yet it is the language of the web.
It is pervasive.
It is everywhere.

150
00:09:51.481 --> 00:09:55.170
It is behind every single website you visit on the Internet,
okay.

151
00:09:55.171 --> 00:09:56.640
And so javascript is a really,

152
00:09:56.641 --> 00:10:00.180
really important language and everybody should know at least a little bit of

153
00:10:00.181 --> 00:10:03.800
javascript.
Okay.
And uh,

154
00:10:03.920 --> 00:10:08.580
the data set is not formatted in Jason.
It's formatted in CSV,
okay.

155
00:10:08.730 --> 00:10:10.770
And I'm going to talk about that in a second,
but we're,

156
00:10:10.771 --> 00:10:12.990
we're going to be using is the d three.
Dot.

157
00:10:12.991 --> 00:10:17.991
JS Javascript Library d three is a javascript library that you can add to the

158
00:10:18.091 --> 00:10:20.250
front end of your web application.
Okay?

159
00:10:20.490 --> 00:10:24.670
So d three stands for data driven documents.
Let me show you God.

160
00:10:24.730 --> 00:10:27.630
And [inaudible] stands for data driven documents.

161
00:10:27.631 --> 00:10:31.210
It was a library that was created.
Basically you showcase,
uh,

162
00:10:31.290 --> 00:10:34.920
all the data that people have and it's,
it's got this huge open source community.

163
00:10:34.921 --> 00:10:38.580
There's like 9,000 forks on get hub for the d three library.

164
00:10:38.790 --> 00:10:41.160
It is the biggest data vis library in the world.

165
00:10:41.370 --> 00:10:44.460
And let me show you guys what I mean when I say that.
Okay?

166
00:10:44.850 --> 00:10:48.690
If you just look on the Internet at a couple of examples of B3,

167
00:10:49.770 --> 00:10:53.160
you have literally thousands of examples,
okay?

168
00:10:53.190 --> 00:10:56.910
Thousands of examples of all the different types of data visualization,

169
00:10:56.911 --> 00:11:01.740
things you can do with d three.
It is extremely powerful,
okay?
You've,

170
00:11:01.760 --> 00:11:06.090
you can do pie charts,
you can do Matrix sees,
there's a lot of animations,
uh,

171
00:11:07.170 --> 00:11:11.640
all sorts of things,
bar charts,
pie charts,
court diagrams,
lollipops,
tables,

172
00:11:11.641 --> 00:11:13.260
bubbles,
they're all over the place.

173
00:11:13.261 --> 00:11:17.490
And d three is a really great library for visualizing these things.
All right?

174
00:11:17.491 --> 00:11:20.430
So that's why that's what we're going to be using or we going to be using a d

175
00:11:20.431 --> 00:11:23.700
three.
And um,

176
00:11:24.570 --> 00:11:26.550
and what [inaudible] does.
And the reason I chose it,

177
00:11:26.551 --> 00:11:28.440
besides it's huge open source community,
uh,

178
00:11:28.470 --> 00:11:33.000
is it directly manipulates elements in the document object model,
the Dawn,

179
00:11:33.001 --> 00:11:36.350
which is a fancy term for saying whatever you're showing on the current webpage,

180
00:11:36.360 --> 00:11:38.490
like the table,
the head,
things like that.

181
00:11:38.700 --> 00:11:41.700
So if you're ever presenting at a conference or a hackathon class,

182
00:11:41.880 --> 00:11:45.000
you are going to get extra credit for knowing d three.
Okay.

183
00:11:45.001 --> 00:11:47.600
Because it doesn't matter how good your workforce,

184
00:11:47.700 --> 00:11:52.500
you have to present it really well.
And that's all about visualization.
Okay,

185
00:11:52.620 --> 00:11:55.030
so let's get started.
We're going to be using node to show this.

186
00:11:55.031 --> 00:11:58.860
It's going to be a web APP.
And note is a javascript runtime.
Uh,

187
00:11:58.870 --> 00:12:02.260
traditionally before node you would have to,
when you create a Web App,

188
00:12:02.320 --> 00:12:06.190
you create your backend and your backend is going to be in some weird language

189
00:12:06.191 --> 00:12:09.280
like you know,
Scala or something else.

190
00:12:09.430 --> 00:12:11.110
And then your front end's going to be in javascript.

191
00:12:11.170 --> 00:12:12.610
So you have to know two languages.

192
00:12:12.790 --> 00:12:15.790
But with node you can do the backend and the front end.

193
00:12:15.791 --> 00:12:18.430
In javascript you could do the entire stack in javascript.

194
00:12:18.820 --> 00:12:21.100
So the backend means things that are happening in the background,

195
00:12:21.130 --> 00:12:25.470
data manipulation,
data storage,
uh,
you know,
machine learning,

196
00:12:25.480 --> 00:12:28.470
you have to do all that in a different language.
But with Javascript,
well,

197
00:12:28.510 --> 00:12:31.480
I mean with no,
you could do it all in javascript.
So we're going to be using no,

198
00:12:31.750 --> 00:12:35.590
go ahead and install node a and you can do that as a binary for any system

199
00:12:35.591 --> 00:12:38.740
you're on a and once you have note,
it comes with NPM,

200
00:12:38.741 --> 00:12:40.540
which is the node package manager.

201
00:12:40.810 --> 00:12:44.230
You can install a bunch of javascript libraries just like you'd do with pythons

202
00:12:44.231 --> 00:12:47.800
package manager.
Okay.
Pip,
NPM install.
Okay,

203
00:12:48.160 --> 00:12:52.510
so this is our package dot Jason and it shows,

204
00:12:53.030 --> 00:12:56.260
uh,
it shows what our dependencies are going to be.
In this case,

205
00:12:56.261 --> 00:12:59.740
our dependency is just going to be expressed,
which is key,
which is uh,

206
00:12:59.950 --> 00:13:04.690
which is a dependency that allows you to create a skeleton for your note app

207
00:13:04.840 --> 00:13:07.390
automatically.
All right.
Uh,
and,

208
00:13:09.400 --> 00:13:14.140
and uh,
we also have our,
uh,
APP dot js.
Okay.

209
00:13:14.141 --> 00:13:17.440
Which I've already coded a skeleton for us here.

210
00:13:17.440 --> 00:13:20.680
I'm just going to quickly explain this so we can get to the biologic that we're

211
00:13:20.681 --> 00:13:21.820
going to be doing in this code.

212
00:13:22.360 --> 00:13:26.890
In the APP dot js we have three variables that we're going to start off with for

213
00:13:26.891 --> 00:13:30.970
express importer express module that we already installed as it dependencies.

214
00:13:31.540 --> 00:13:34.720
And then we're going to create our APP using the express.

215
00:13:36.050 --> 00:13:40.270
And then we have a path variable that uses,
uh,
the path dependencies,

216
00:13:40.540 --> 00:13:43.020
which is going to,
we're going to have,

217
00:13:43.160 --> 00:13:44.650
I'll show you guys what we're going to do with that.

218
00:13:44.890 --> 00:13:49.090
The first line is going to be app dot use express static path joined public.

219
00:13:49.330 --> 00:13:50.350
What does that mean?
It's,

220
00:13:50.351 --> 00:13:54.730
it says take whatever is in the public folder and use it in this app.

221
00:13:54.910 --> 00:13:58.750
So what do we have in our public folder?
Let's check.
And our public folder,

222
00:13:58.960 --> 00:14:01.420
I've got four items.
Okay.

223
00:14:01.421 --> 00:14:05.830
I've got d three dot B3 Dot Min dot.
Js.
What is this?

224
00:14:06.040 --> 00:14:10.000
This is a bunch of code,
but what it is is the d three library.

225
00:14:10.270 --> 00:14:12.240
You can download this and we're going to,

226
00:14:12.310 --> 00:14:15.970
we're going to link to it in our index file.
Index dot html.

227
00:14:16.300 --> 00:14:19.440
So we can use d three.
This is all of the three.
It,
it's,

228
00:14:19.570 --> 00:14:21.670
it looks like it's not a lot,
but it's a lot of code.

229
00:14:21.730 --> 00:14:25.420
You just can't see it because it's all happening horizontally.
Okay.

230
00:14:26.320 --> 00:14:30.040
And then the next thing we're going to use is dimple.

231
00:14:30.310 --> 00:14:34.210
Dimple is a wrapper around d three that makes it easier to use.

232
00:14:34.540 --> 00:14:36.970
So let me show you guys what Timple looks like.
Okay.

233
00:14:37.470 --> 00:14:41.830
We imple is an API there.
Visualize me three and an easy way.

234
00:14:42.040 --> 00:14:46.060
So B three k,
the learning curve for d three can be kind of intense.

235
00:14:46.450 --> 00:14:50.980
So,
uh,
we're going to just use dimple to have an easy wrapper around it.

236
00:14:51.170 --> 00:14:54.620
So we're going to be able to use d three elements with an easy to use API.

237
00:14:54.650 --> 00:14:58.250
It's a great way to get started for data visualization.
Alright,

238
00:14:58.310 --> 00:15:02.480
so dimple js.org check that out.
So that's it.
Those are,

239
00:15:02.690 --> 00:15:07.630
those are the things we're going to be using.
And the last two,
the last two call,

240
00:15:07.740 --> 00:15:12.050
uh,
items are the titanic Dataset.
The first one shows,
uh,
the passengers,

241
00:15:12.110 --> 00:15:15.170
their status,
you know,
whether or not they survived and the features about them,

242
00:15:15.171 --> 00:15:17.090
class sex and whether where they embarked from.

243
00:15:17.450 --> 00:15:20.900
And the next one shows a more information about them,

244
00:15:21.170 --> 00:15:25.460
like their ticket,
the fair,
the cabin,
things like that,
and their passenger id.

245
00:15:25.970 --> 00:15:30.230
These are,
these are our two.
Um,
these are our two dependencies.

246
00:15:30.740 --> 00:15:35.000
Okay.
Sorry,
our two data datasets.
The tank Dataset.
All right.
Um,

247
00:15:35.210 --> 00:15:37.670
so that's what we're going to be using in our app and that's where we're saying

248
00:15:37.780 --> 00:15:41.630
let's use whatever it is in the public folder.
Then we create our first route.

249
00:15:42.530 --> 00:15:47.270
All right.
And in our first route,
we're going to say,
uh,
debt,

250
00:15:47.271 --> 00:15:50.750
whatever it is,
in the index one dot.
Html file and show it on the page.

251
00:15:50.870 --> 00:15:53.300
So whenever we hit this,
which is the main page,

252
00:15:53.480 --> 00:15:55.760
we're going to go to local host and we're going to hit it.

253
00:15:56.030 --> 00:15:59.600
It's going to show us whatever is in our index dot.
Html.
All right,

254
00:16:00.890 --> 00:16:05.510
so what is this last code?
This last code is going to start our server.

255
00:16:05.540 --> 00:16:06.050
Okay.

256
00:16:06.050 --> 00:16:10.850
It's going to say start it at port 5,000 using the address and port and then,

257
00:16:11.350 --> 00:16:14.090
and then print it.
The terminal.
That's it.
Okay.
So let's,

258
00:16:14.120 --> 00:16:16.580
let's see what that looks like.
I already ran it.

259
00:16:16.640 --> 00:16:19.850
So I already typed in node app dot js.
That's all you have to type in.

260
00:16:20.510 --> 00:16:24.770
Node App node,
APP dot js.
Okay.
And once you do that,

261
00:16:24.771 --> 00:16:28.400
it's going to see right here.
Node App dot js.
It's gonna Start,

262
00:16:28.460 --> 00:16:31.240
it's gonna start the APP at the,
at port by thousands.

263
00:16:31.250 --> 00:16:33.590
So let's see what that looks like.

264
00:16:34.160 --> 00:16:39.160
Local host 5,000 I'm going to show this to you guys right here.

265
00:16:39.920 --> 00:16:43.220
Okay.
All it says is data visualization.
Why is that?

266
00:16:43.250 --> 00:16:47.630
Because in my index dot html,
the page is showing.

267
00:16:47.750 --> 00:16:51.680
That's the only thing that I have show up.
So what do we,
what do we have here?

268
00:16:52.700 --> 00:16:53.430
<v 0>Okay,</v>

269
00:16:53.430 --> 00:16:57.170
<v 1>so what do we have here?
What we're starting off with,
uh,</v>

270
00:16:58.470 --> 00:17:02.220
our script.
So we import d three and dimple,
and we do that.

271
00:17:02.221 --> 00:17:05.310
You think the script keyword.
All right,
this is all html.

272
00:17:05.490 --> 00:17:09.360
What we're going to be writing javascript inside of html.

273
00:17:09.630 --> 00:17:14.430
And we can tell html to use javascript by pointing,
by using the script keywords.

274
00:17:16.190 --> 00:17:19.830
All right?
So we've important d three and dimple,

275
00:17:19.890 --> 00:17:24.570
and now we're going to actually perform our data visualization.

276
00:17:24.571 --> 00:17:27.810
Okay?
And so I've written out html here of what we're going to be doing.

277
00:17:28.280 --> 00:17:28.591
All right?

278
00:17:28.591 --> 00:17:33.591
So let's start off with cre by creating a bar chart or who plot survivors by,

279
00:17:35.550 --> 00:17:39.110
uh,
their class.
So whatever class they were in.
All right,

280
00:17:39.270 --> 00:17:43.170
so let's do it.
Okay,
here we go.
All right,

281
00:17:43.171 --> 00:17:45.720
so let's,
let's type that out.

282
00:17:45.721 --> 00:17:49.050
So in html we're going to say we're going to create an h two tag,

283
00:17:49.200 --> 00:17:53.550
which is a header and say survivors.
Uh,
bye

284
00:17:55.300 --> 00:18:00.010
passenger class
and it's going to be a bar chart.

285
00:18:00.070 --> 00:18:04.750
So we'll say bar.
All right,
this is just text.
This is just plain text.

286
00:18:04.840 --> 00:18:05.673
All right?

287
00:18:05.800 --> 00:18:09.850
Now we need to tell our html that we're about to write some javascript.

288
00:18:10.060 --> 00:18:12.430
Shit's about to get real.
We're about threat.
Some javascript.

289
00:18:12.460 --> 00:18:14.890
This isn't no html anymore.
All right?

290
00:18:15.040 --> 00:18:19.990
So we'll start off by writing Java script by the script tag and then we'll close

291
00:18:19.991 --> 00:18:20.711
it.
Okay.

292
00:18:20.711 --> 00:18:25.060
That means that we're ready to write our javascript.

293
00:18:25.180 --> 00:18:26.740
And what are we going to do?
Well,

294
00:18:26.741 --> 00:18:30.610
we're going to put this inside of what we call a div.
Div is an element

295
00:18:32.110 --> 00:18:33.880
that we group things,
ads.

296
00:18:33.910 --> 00:18:38.320
And we're going to call this this the charts container too,

297
00:18:38.470 --> 00:18:42.340
because we're going to have another one later and we'll close the grip in html.

298
00:18:42.341 --> 00:18:44.980
You open and close everything just like this.
All right.

299
00:18:47.420 --> 00:18:51.410
Open and closed.
All right,
so let's start off by,

300
00:18:52.040 --> 00:18:56.000
um,
oh,
you guys are hilarious.
Okay,

301
00:18:56.030 --> 00:18:58.610
so let's start off by doing this.
All right,

302
00:18:58.670 --> 00:19:02.650
so let's go ahead and say we're going to create our first Sgt.
Oh,
closing.

303
00:19:02.670 --> 00:19:07.010
Because my age too,
it's my age too.
Oh yeah.
Thank you.

304
00:19:07.470 --> 00:19:11.110
Appreciate it.
So now let's do this.
So we're going to,

305
00:19:11.111 --> 00:19:13.850
the first thing we're going to do is we want to say bar and we're going to call

306
00:19:13.851 --> 00:19:16.640
this SVG too.
All right,

307
00:19:17.230 --> 00:19:20.900
our SPD to equals pimple dot.
New SVG.

308
00:19:21.200 --> 00:19:24.440
And we're gonna call it an element that we want to use for this.

309
00:19:26.390 --> 00:19:29.930
And,
um,
let's see,

310
00:19:31.200 --> 00:19:34.060
uh,
and then close it here in the printing.

311
00:19:34.550 --> 00:19:38.060
And then 600 400.

312
00:19:38.300 --> 00:19:41.990
So what did I just do here?
Well,
I'm creating an SP.
SPG.

313
00:19:42.050 --> 00:19:46.940
SPG is a language for describing two d graphics in Xml.
All right.

314
00:19:46.970 --> 00:19:51.200
So we're going to create one here so that the arguments here are the parents.

315
00:19:51.201 --> 00:19:55.830
Elector,
um,
are the parents elector,
which is doctor,

316
00:19:55.831 --> 00:19:57.480
which is what the element in the dom.

317
00:19:57.481 --> 00:20:01.920
We want to write this bar chart in and then,
uh,
the size and width of it.
Okay,

318
00:20:01.921 --> 00:20:06.360
so it's an SVG element and it's going to be a chart.
All right,

319
00:20:07.200 --> 00:20:10.410
so let's go ahead and do this.
We're going to say we're going to,

320
00:20:10.440 --> 00:20:13.020
now we're going to use d three [inaudible] three dot CSV.

321
00:20:13.080 --> 00:20:17.340
So we're going to call our data data from our CSV file and then we're going to

322
00:20:17.341 --> 00:20:21.660
say,
uh,
we're going to say,
hey,
function,

323
00:20:22.190 --> 00:20:23.760
uh,
data,
what is this doing?

324
00:20:24.120 --> 00:20:26.880
Me Three has a bunch of file types it can support when loading data.

325
00:20:26.910 --> 00:20:29.610
And one of the most common ones is just plain old CSV,

326
00:20:29.640 --> 00:20:30.900
which is what we have our data in.

327
00:20:31.260 --> 00:20:35.250
So we're going to use the CSE function of d three to convert our data into an

328
00:20:35.251 --> 00:20:36.480
array of objects.

329
00:20:36.660 --> 00:20:40.110
And that array is going to be that data variable that's going to be stored in

330
00:20:40.111 --> 00:20:44.640
the data variable.
All right?
Uh,

331
00:20:44.730 --> 00:20:49.340
so,
okay,
so here we go.
Uh,
we're going to,

332
00:20:49.520 --> 00:20:53.030
I have not seen Dr strange yet.
I want to watch black mirror.

333
00:20:53.450 --> 00:20:55.430
So now we're going to create a chart

334
00:20:56.990 --> 00:21:00.620
by combining our SVG and our data variable and data variable.

335
00:21:01.250 --> 00:21:05.390
What am I doing with this?
Uh,
that's not,
that was true.
There we go.

336
00:21:06.170 --> 00:21:09.650
Now.
All right,
here we go.
Here we go.
So now we're going to create our chart.

337
00:21:09.651 --> 00:21:11.690
Am I going to say bar chart instance?

338
00:21:13.730 --> 00:21:15.810
Tart instance.
Thank you,

339
00:21:15.811 --> 00:21:20.170
alon instance in equals new impulse.

340
00:21:20.310 --> 00:21:24.350
That chart.
Okay,
we're going to create a chart and we're going to use the SPD.

341
00:21:24.351 --> 00:21:29.351
We just created an Svg to variable and our Beta and we just created with that

342
00:21:31.791 --> 00:21:32.990
function that they're charging.

343
00:21:33.000 --> 00:21:36.280
Since now we're going to set our bounds set bounce.

344
00:21:37.870 --> 00:21:41.830
I'm definitely gonna close this function in second.
Yup.
Uh,
let's see.

345
00:21:41.831 --> 00:21:46.020
Set downs and so far balance we're going to say,
um,

346
00:21:47.380 --> 00:21:48.190
we're going to say,

347
00:21:48.190 --> 00:21:51.070
we're going to take that chart instance and we're going to call this set bounds

348
00:21:51.071 --> 00:21:54.220
variable.
And we're going to say the length,
width,

349
00:21:54.250 --> 00:21:58.210
height and size and,
and where,
sorry,
the length,

350
00:21:58.211 --> 00:22:01.660
width and the location on the screen.
And we want this to be okay.

351
00:22:01.661 --> 00:22:04.890
So that's going to be the balance.
And then we're going to say,
uh,

352
00:22:04.990 --> 00:22:07.810
we want to add our accuracy's right to our variable.

353
00:22:08.080 --> 00:22:11.860
So we're going to say chart instance and we're going to add our category
accents.

354
00:22:14.330 --> 00:22:18.890
We're going to add our category access cause that's going to be our x axis.
Okay.

355
00:22:18.950 --> 00:22:22.310
And that's going to be our passenger class.
So this is a bar chart.

356
00:22:23.240 --> 00:22:25.640
It's a bar chart.
I'm going to call it passenger class.

357
00:22:27.560 --> 00:22:31.370
And uh,
that's our x variable.
And we want to order it.

358
00:22:31.670 --> 00:22:34.310
We're going to add order rule when to order it by type.

359
00:22:34.370 --> 00:22:37.760
So the type of data that it is,
we could order it by number by value.

360
00:22:37.790 --> 00:22:41.150
We're going to order it by type.
So now we did the x.
Now let's do why.

361
00:22:41.160 --> 00:22:45.740
So for our y access,
we're going to say chart instance,

362
00:22:50.490 --> 00:22:54.000
uh,
instance.
Dot Add PCT access,

363
00:22:54.090 --> 00:22:56.730
which is going to create our y axis will label why.

364
00:22:56.880 --> 00:23:00.430
And that's going to be a count.
Okay?
So that's a number of people.
So kept,

365
00:23:00.440 --> 00:23:04.260
so the passenger class and then the count,
those are the are x and y variables.

366
00:23:04.560 --> 00:23:08.700
So,
uh,
now we're going to have one,
one more variable,

367
00:23:08.790 --> 00:23:10.170
which is going to be status.

368
00:23:10.380 --> 00:23:13.710
And that's going to show up whenever we hover over one of the bars.
Still,

369
00:23:13.711 --> 00:23:15.930
we're going to add a series and that's going to show up whenever we,

370
00:23:16.020 --> 00:23:19.770
I'll show you guys in a second.
We're going to call it status.
Um,

371
00:23:20.650 --> 00:23:21.190
<v 0>okay.</v>

372
00:23:21.190 --> 00:23:22.490
<v 1>And then we're going to say,</v>

373
00:23:23.960 --> 00:23:24.650
<v 0>okay,</v>

374
00:23:24.650 --> 00:23:29.520
<v 1>a green ball dot plot got bar.
So we're going to call that.
Lastly,</v>

375
00:23:29.521 --> 00:23:32.790
we're going to add a legend.
So like we can see like what's happening here.

376
00:23:32.850 --> 00:23:36.510
We're going to add a legend,
uh,
and we're going to say,

377
00:23:36.511 --> 00:23:40.140
where do we want this legend to be?
So let's say chart instance,
uh,

378
00:23:40.440 --> 00:23:45.150
and then add a legend so that x,
location,
x and y,

379
00:23:45.880 --> 00:23:50.040
uh,
the size of it,
and then what part of the screen,
uh,

380
00:23:50.041 --> 00:23:52.550
it's going to be the right side.
Okay.
So,
right.

381
00:23:55.350 --> 00:24:00.230
Okay.
So that's that.
And now that's it.
And now I think that's it.
Oh No,
no.

382
00:24:00.240 --> 00:24:03.060
One more thing.
We have to dry it.
So let's say tart instance,

383
00:24:03.960 --> 00:24:06.780
you are the legend answer to file.
You are the legend chart.

384
00:24:06.850 --> 00:24:11.700
And since dot draw 1000,
so the size,
oh,

385
00:24:11.820 --> 00:24:16.380
okay.
Now let's compile this shit and see what happens.

386
00:24:17.950 --> 00:24:18.570
<v 2>MMM.</v>

387
00:24:18.570 --> 00:24:22.980
<v 1>Okay.
Hold on.
Something's wrong here.
Let's see.
Uh,</v>

388
00:24:22.981 --> 00:24:26.190
I have to close this,
right?
I think somebody told me that.

389
00:24:26.820 --> 00:24:31.680
Now let's see what happens.
Uh,
nope.
Not yet.
Not yet.

390
00:24:32.100 --> 00:24:36.900
Okay.
So now line 18,
age too close,
right?
Exactly.

391
00:24:36.930 --> 00:24:41.830
Thank you.
Yes.
Right.
Okay.

392
00:24:41.831 --> 00:24:46.240
So there is a problem here.
Let's see.
Let's figure this out.
We can do this.
Oh,

393
00:24:46.300 --> 00:24:48.520
I see.
I closed the script tag.

394
00:24:50.510 --> 00:24:54.060
I am 43 is right a capitol here.

395
00:24:54.690 --> 00:24:57.210
Let's see what we got here.
Nope.

396
00:24:57.570 --> 00:25:01.380
What else is going to line 41?
Uh,
I've got this,

397
00:25:02.010 --> 00:25:04.950
uh,
camel casing.

398
00:25:05.510 --> 00:25:07.110
<v 2>MMM.
[inaudible].</v>

399
00:25:07.690 --> 00:25:11.170
<v 1>Let's see.
Let's see.
Let's see.
Line 23.</v>

400
00:25:12.330 --> 00:25:13.163
<v 2>MMM.</v>

401
00:25:13.350 --> 00:25:17.820
<v 1>Svg to
charred container</v>

402
00:25:19.400 --> 00:25:21.330
too,
I think.
Right?

403
00:25:22.190 --> 00:25:23.023
<v 0>Okay.</v>

404
00:25:24.710 --> 00:25:27.620
<v 1>Um,
and Oh,</v>

405
00:25:27.621 --> 00:25:31.820
and then I need to go ahead and add a bunch of these,

406
00:25:32.630 --> 00:25:37.310
uh,
semi colons.
At the end of everything,
right?
So one,
two,

407
00:25:37.311 --> 00:25:42.020
three,
four,
five.
I forgot about that.
I'm still an iPhone mode,
guys.
Okay.

408
00:25:42.021 --> 00:25:46.830
So I'll add that everywhere.
And boom,
boom,
boom,
boom,

409
00:25:46.840 --> 00:25:49.250
boom,
boom,
boom,
boom,
boom,
boom.
All right.

410
00:25:51.700 --> 00:25:56.650
It's not needed,
but like,
okay,
uh,
where are we here?
Okay,

411
00:25:56.651 --> 00:25:58.240
let's see.
There's something we can,

412
00:25:58.930 --> 00:26:03.250
let's just inspect this using our chromate specter.
What's the deal here?

413
00:26:03.610 --> 00:26:07.060
Where are we?
Okay,
hold on.
All right.
Whatever.

414
00:26:07.480 --> 00:26:09.130
Let's just x out of that.

415
00:26:10.060 --> 00:26:10.893
<v 2>MMM.</v>

416
00:26:12.400 --> 00:26:15.280
<v 1>So let me remove these just so we could see what's happening here.</v>

417
00:26:15.550 --> 00:26:18.250
We remove these comments were at second pop up,
up,
up,
up,
up.

418
00:26:19.300 --> 00:26:20.260
<v 2>MMM.</v>

419
00:26:22.640 --> 00:26:26.460
<v 1>And all right,
so what's the O'Hare?
Okay,</v>

420
00:26:26.730 --> 00:26:31.260
so line 24 I need to remove one of these.
There we go.

421
00:26:32.970 --> 00:26:37.110
Um,
let's see.
And then in console,

422
00:26:37.170 --> 00:26:38.760
line 23 we've got,

423
00:26:39.970 --> 00:26:40.803
<v 2>MMM,</v>

424
00:26:41.520 --> 00:26:45.980
<v 1>we've got dimple new and uh,</v>

425
00:26:46.050 --> 00:26:49.080
I'm closing it.
Oh,
I need to add that.

426
00:26:53.070 --> 00:26:56.310
Oh,
24.
And so in line 24,
I've got,

427
00:26:57.380 --> 00:26:58.213
<v 2>mmm.</v>

428
00:27:00.090 --> 00:27:04.080
<v 1>Titanic.
Dot.
CSV.
And then,
um,</v>

429
00:27:06.160 --> 00:27:09.640
we got this,
we got this,
uh,
this is how,
what,
what is happening here?

430
00:27:10.150 --> 00:27:14.060
I've got d three.
Dot.
CSV.

431
00:27:15.330 --> 00:27:18.540
And then,
let's see,
let's see,
in console.

432
00:27:18.541 --> 00:27:23.541
So if we go to inspect and then we go to console type hair chart instance,

433
00:27:24.570 --> 00:27:26.750
I've add category is not a function,

434
00:27:27.620 --> 00:27:28.453
<v 2>uh,</v>

435
00:27:29.840 --> 00:27:33.200
<v 1>add category axis.
There it is.</v>

436
00:27:34.530 --> 00:27:35.280
<v 0>Okay.</v>

437
00:27:35.280 --> 00:27:39.060
<v 1>Oh,
oh,
boom,
boom,
boom,
boom.
Yes.
Okay,
cool.</v>

438
00:27:39.210 --> 00:27:41.880
So let's see what that looks like.
All right.
Boom.

439
00:27:42.600 --> 00:27:47.030
So that's a nice little animation,
right?
Let me refresh that.
So I go to the loo.

440
00:27:47.800 --> 00:27:52.140
So yeah,
it goes up like that.
And uh,
let's see.
So what happened here?

441
00:27:52.170 --> 00:27:56.160
So this is our,
this is our,
uh,
access.

442
00:27:56.220 --> 00:27:58.650
I do need a linter,
but like I don't have time for that.

443
00:27:58.710 --> 00:28:02.550
So these are our three classes,
right?
And we visualize these three classes.

444
00:28:02.551 --> 00:28:05.820
Let's look at our code and what fit,
what specializing.

445
00:28:07.370 --> 00:28:09.770
Okay.
And,
uh,

446
00:28:10.130 --> 00:28:13.150
these are our three classes and then we're ordering them by the type.

447
00:28:13.220 --> 00:28:16.310
We have a legend survived and died.
And,
uh,

448
00:28:16.340 --> 00:28:21.140
we have ordered it by percentage.
Uh,
and we have our legend here surviving died.

449
00:28:21.220 --> 00:28:25.640
I remember that third thing that I added at the end of the,
uh,
what was it?

450
00:28:25.790 --> 00:28:29.300
The ad series,
the status that's just survived or not.
Okay.

451
00:28:31.540 --> 00:28:35.410
So that's that.
Okay,
so that was a bar chart.

452
00:28:35.530 --> 00:28:40.510
And now we want to do a pie chart and this is going to be easier,
right?

453
00:28:40.540 --> 00:28:44.530
Okay.
So let's go ahead and do that.
We'll add a pie chart now.

454
00:28:45.900 --> 00:28:46.450
<v 0>Okay,</v>

455
00:28:46.450 --> 00:28:50.950
<v 1>let's do that.
Okay.
So this is going to be the same thing.
So,</v>

456
00:28:51.400 --> 00:28:53.650
okay.
Except we're going to do now a,

457
00:28:54.130 --> 00:28:57.370
we're going to show the share passengers has a pie chart.

458
00:28:57.730 --> 00:29:00.820
And so what's happening here?
Okay,
so for this,

459
00:29:02.630 --> 00:29:07.010
um,
we're going to,
uh,
just create a different,

460
00:29:07.100 --> 00:29:10.310
so that's the first step.
Well created this and for the stiff,

461
00:29:12.270 --> 00:29:15.900
uh,
we're calling to,
Oh man,
you guys are so funny.
Okay,

462
00:29:16.590 --> 00:29:18.770
let's see what people are saying here.
Uh,

463
00:29:19.650 --> 00:29:24.300
I am a pro because I use lives.
I,
yeah.

464
00:29:25.710 --> 00:29:30.530
Okay,
so now give,
I did vote.

465
00:29:30.560 --> 00:29:34.190
I did vote for Hillary.
I did.
I did,

466
00:29:35.160 --> 00:29:36.520
but it's okay.
It'll be fine.

467
00:29:37.180 --> 00:29:42.180
So now we're going to do the same thing for the passenger of pie charts.

468
00:29:42.520 --> 00:29:44.350
So let's go,
let's go.
Let's go ahead and do this.

469
00:29:44.470 --> 00:29:49.120
So the idea of bit of this is going to be called high chart container

470
00:29:51.400 --> 00:29:55.780
12.
Let's just call it 12,
uh,
for no reason.
Okay,

471
00:29:55.781 --> 00:29:59.200
so now we're going to say we're going to create our header for it.

472
00:29:59.380 --> 00:30:04.150
I wouldn't say passenger share,
uh,
fi class wine.

473
00:30:04.180 --> 00:30:06.160
These are,
there are three classes,
class one,
class two,

474
00:30:06.161 --> 00:30:11.160
and class three and class three.
And we'll close our bit.

475
00:30:15.890 --> 00:30:20.300
All right,
so we had that.
And now,

476
00:30:21.410 --> 00:30:25.400
uh,
okay,
so now we're going to say,

477
00:30:27.130 --> 00:30:28.560
uh,
let's write our script.

478
00:30:28.650 --> 00:30:33.650
So George script tag again stripped and then type equals what is the type a

479
00:30:34.020 --> 00:30:37.760
javascript type,
right?
Text slash javascript.
Um,

480
00:30:39.530 --> 00:30:44.300
and now,
uh,

481
00:30:44.750 --> 00:30:47.420
there we go.
So now we have arts script type

482
00:30:49.070 --> 00:30:52.250
and I need to close that.

483
00:30:52.490 --> 00:30:55.860
And so that is,
uh,

484
00:30:59.310 --> 00:31:02.100
okay,
we,
so we did that.
So now let's do that.
So we'll do the same thing.

485
00:31:02.101 --> 00:31:06.330
We're going to create our SVG.
So let's say SVG 12,
because it's the container 12,

486
00:31:06.331 --> 00:31:09.120
right?
And we're going to say simple.
That's the library.

487
00:31:09.370 --> 00:31:13.020
We're using the as a wrapper around B3 to create a new SVG title.

488
00:31:13.230 --> 00:31:16.200
We're going to get our element for the dom,
which we're going to call pie charts.

489
00:31:16.590 --> 00:31:20.820
We're going to call it high.
It's not peace charts,
pie charts,
pie charts,

490
00:31:21.370 --> 00:31:24.060
all right?
Container 12,

491
00:31:26.880 --> 00:31:28.830
okay.
And okay,

492
00:31:28.831 --> 00:31:33.540
some of you guys are like Javascript crows and that's awesome.

493
00:31:33.570 --> 00:31:37.620
And you have very opinionated views on,
uh,

494
00:31:37.650 --> 00:31:40.650
syntax to use and that's fine and keep doing it.

495
00:31:40.680 --> 00:31:45.680
But I'm just going to keep going because this is about data visualization.

496
00:31:46.180 --> 00:31:49.980
Alright?
So tank line,
38,

497
00:31:50.750 --> 00:31:53.040
line 38,
uh,

498
00:31:53.640 --> 00:31:58.020
change it because I don't see a reason to change it.
Okay?

499
00:31:58.580 --> 00:32:03.450
If I need to now build a wall in python,
that might be a future video,

500
00:32:03.940 --> 00:32:08.610
a big wall for python.
So now we're going to say,
ah,
this is the data set.

501
00:32:08.611 --> 00:32:12.120
We're using the titanic train about CSV.
So this is a different bid,

502
00:32:12.210 --> 00:32:16.380
other Dataset,
right?
And we're going to say,
uh,
or our function,

503
00:32:17.850 --> 00:32:18.480
uh,

504
00:32:18.480 --> 00:32:21.420
thank you for our function that we're going to use and we're going to turn our

505
00:32:21.421 --> 00:32:23.940
data into an array.
So we're going to take that whole,

506
00:32:24.120 --> 00:32:26.100
that whole thing and we're going to turn it into an array.

507
00:32:26.640 --> 00:32:30.020
And we're going to say,
um,
or close the well what?
This,

508
00:32:30.030 --> 00:32:32.670
go ahead and start off with it close,
right?
So we don't have to deal with that.

509
00:32:32.970 --> 00:32:35.550
And we're going to say,
let's create our target instance.
Just like last time,

510
00:32:35.551 --> 00:32:37.800
we'll create a chart instance.
Uh,

511
00:32:37.950 --> 00:32:41.150
and actually I only need to get these two examples.

512
00:32:41.151 --> 00:32:43.490
I'm not going to do the other two.
These are two,
these two examples.

513
00:32:43.610 --> 00:32:46.100
Examples are good enough for this,
for this video.
Okay?

514
00:32:46.101 --> 00:32:49.010
So you're going to see a bar chart and a pie chart,
okay?

515
00:32:49.011 --> 00:32:52.820
And you see how we're working with two different datasets.
So dimple dot chart,

516
00:32:54.520 --> 00:32:57.780
uh,
I'm going to say FEG 12th,
right?
So that,

517
00:32:58.040 --> 00:33:02.330
that variable we just declared,
uh,
and uh,

518
00:33:04.770 --> 00:33:07.840
and now we're going to,
uh,

519
00:33:08.250 --> 00:33:12.570
set the bounds for this chart instance.
So set bounds,

520
00:33:16.780 --> 00:33:18.520
set bounds just like we did last time.

521
00:33:18.521 --> 00:33:23.521
So where's it going to be on the screen or at 60 and three 60.

522
00:33:24.610 --> 00:33:27.940
And then we're going to say,
what else do we want to do this?

523
00:33:28.030 --> 00:33:31.120
So this is a part pie chart,
right?
So when you can make sure that,
uh,

524
00:33:31.900 --> 00:33:35.170
we add our accuracies,
I mean,
there,
there were still accesses in a,

525
00:33:35.171 --> 00:33:39.560
in a pie chart,
but we,
they're just,
they're not like a horizontal axis.
So,

526
00:33:39.810 --> 00:33:43.960
so someone said something about 44 pies.
A Capitol P.
Thank you.

527
00:33:44.890 --> 00:33:47.410
All right,
so now Parkinson's dot add.

528
00:33:50.690 --> 00:33:53.630
Thank you John.
I appreciate it.
Uh,

529
00:33:53.990 --> 00:33:57.470
add measure access.
Okay.

530
00:33:57.680 --> 00:33:59.090
So for our measure access,

531
00:33:59.091 --> 00:34:03.320
we're going to call it p and p stands for passenger class.
And we're going to,

532
00:34:03.950 --> 00:34:07.460
we're going to see what that looks like in a second.
Um,
so now

533
00:34:09.650 --> 00:34:13.310
we're going to add a series.
So that's going to be the passenger class.

534
00:34:15.900 --> 00:34:18.900
Thanks.
Leandro,
uh,
passenger class.

535
00:34:19.830 --> 00:34:24.030
And that's going to be a,
what we call all of it.

536
00:34:24.090 --> 00:34:26.040
They'll the whole series of that pie chart.

537
00:34:26.280 --> 00:34:30.610
So we're almost done with this and it's going to be that pie chart pulled up,

538
00:34:30.611 --> 00:34:35.010
plot up pie.
Uh,
so now we have two more things,
two more lines for this.

539
00:34:35.011 --> 00:34:36.840
And then we're done.
So that's going to be,

540
00:34:36.870 --> 00:34:40.950
we're going to add a legend just like we did last time.
Add legend.
Uh,

541
00:34:40.980 --> 00:34:42.350
and it's going to be,
let's see,

542
00:34:42.351 --> 00:34:47.100
the election's going to be 520 where on the screen,
9,300.

543
00:34:47.310 --> 00:34:50.950
And he's our absolute values and we want it to be on the left side of the
street.

544
00:34:52.220 --> 00:34:55.230
Uh,
and

545
00:34:57.830 --> 00:35:01.430
um,
well now we can drive.
That was,
that's it.

546
00:35:01.700 --> 00:35:05.300
Now we'll go ahead and draw it.
Boom.

547
00:35:05.780 --> 00:35:10.000
Now let's see what happens when we visualize.

548
00:35:10.820 --> 00:35:15.500
Okay.
All right.
Let's see it and our browser.

549
00:35:19.630 --> 00:35:23.020
Okay.
So something went wrong.
Let's go ahead and inspect the console.

550
00:35:23.890 --> 00:35:26.200
As you guys have suggested,
very,

551
00:35:27.010 --> 00:35:31.830
the pie chart container 12 selector did not match any elements.
Oh,

552
00:35:32.190 --> 00:35:34.270
oh,
that's a piece chart.
Oh,
I think someone said that.

553
00:35:34.271 --> 00:35:37.380
I was just like not listening.
Okay.
Boom.

554
00:35:38.820 --> 00:35:41.600
I charred container 12 does not match any insight though.

555
00:35:41.610 --> 00:35:45.990
It started high chart container 12.
There we go.
There we go.

556
00:35:46.440 --> 00:35:47.273
Okay.

557
00:35:48.790 --> 00:35:49.620
<v 0>Yeah.</v>

558
00:35:49.620 --> 00:35:53.670
<v 1>38.
Let's see,</v>

559
00:35:53.671 --> 00:35:58.260
what did someone say about 38.
There we go.
Thank you.
Thank you.
Okay,
so,

560
00:35:58.320 --> 00:36:02.400
um,
right,
so what do we have here?

561
00:36:02.490 --> 00:36:04.410
I feel like this needs to be more descriptive,

562
00:36:04.411 --> 00:36:07.440
but we have three classes and they're,
they're all displayed here.
Right?

563
00:36:07.590 --> 00:36:10.260
So that's,
that's kind of the same of what we have here,
but it's a pie chart.

564
00:36:10.410 --> 00:36:13.620
Right?
And if we reload it,
we can see that animation for the bar chart,

565
00:36:13.830 --> 00:36:16.590
but the pie chart doesn't really have that.
We could add that if we want it to,

566
00:36:16.591 --> 00:36:17.910
but we're not going to,
okay.

567
00:36:18.150 --> 00:36:21.750
So those are our two uh,

568
00:36:21.810 --> 00:36:24.150
sorry variables that we've done.

569
00:36:25.170 --> 00:36:28.290
Those are our two charts and,

570
00:36:30.000 --> 00:36:33.780
and yeah,
so that was my short video,

571
00:36:33.810 --> 00:36:36.720
my short little video on data visualization.
Um,

572
00:36:37.560 --> 00:36:39.510
I want to do more on this stuff.

573
00:36:40.080 --> 00:36:44.150
Let me know what you guys think in the comments later.
Uh,
so now,
so that,

574
00:36:44.160 --> 00:36:47.610
that was it.
That was,
I know this was a shorter video then the past two times,

575
00:36:47.611 --> 00:36:51.110
but I just wanted to show you guys what this looks like a,

576
00:36:51.150 --> 00:36:55.980
and now I'll do a closing five minute Q and a and then yeah,

577
00:36:55.981 --> 00:36:59.910
that'll be the end.
So,
okay.

578
00:36:59.911 --> 00:37:01.470
So let me show you guys the code as well.

579
00:37:01.740 --> 00:37:04.380
Let me make sure you guys get a full overview of what's happening here.

580
00:37:06.790 --> 00:37:07.090
<v 0>Okay.</v>

581
00:37:07.090 --> 00:37:07.923
<v 1>Right.
So we did,</v>

582
00:37:08.170 --> 00:37:12.340
I did it in a bar chart and a pie chart and it showed up just like this.

583
00:37:13.030 --> 00:37:16.960
All right.
All right.
And Yeah,

584
00:37:16.961 --> 00:37:19.720
so definitely check out dimple a and d three.

585
00:37:19.721 --> 00:37:24.350
There's a lot of great visualizations that people have done with d three.
Um,

586
00:37:25.150 --> 00:37:28.420
I'll take three questions.
So what was my first machine learning project?

587
00:37:28.660 --> 00:37:32.260
My first machine learning project was,
uh,

588
00:37:33.280 --> 00:37:37.270
I worked at the robotics lab at Columbia and they needed someone who was going

589
00:37:37.271 --> 00:37:38.580
to,
uh,

590
00:37:39.160 --> 00:37:43.210
take the code date already written in c plus plus and convert it to Kuda so it

591
00:37:43.211 --> 00:37:46.510
could run on a Gpu.
And that was like way in over my head,
but I was just like,

592
00:37:46.511 --> 00:37:49.390
yeah,
yeah,
I can do that.
I was like,
inside,
like,
no,

593
00:37:49.391 --> 00:37:52.680
but I just really wanted to be in the robotics club.
So I was just like,
yeah,

594
00:37:52.681 --> 00:37:54.850
yeah,
I can do this.
I said,
that was really hard,

595
00:37:54.851 --> 00:37:58.990
but basically I took c plus plus and I converted it to Kuta and that was a huge

596
00:37:58.991 --> 00:38:01.000
learning experience.
Um,

597
00:38:01.090 --> 00:38:04.000
so that was my first machine learning project and what the code did was it just,

598
00:38:04.060 --> 00:38:07.690
it was a classifier and then this was before any machine learning libraries
were,

599
00:38:07.700 --> 00:38:09.160
was out there.
So it was like,

600
00:38:10.120 --> 00:38:10.830
<v 0>okay.</v>

601
00:38:10.830 --> 00:38:13.440
<v 1>It was just like raw,
um,
uh,</v>

602
00:38:13.470 --> 00:38:17.360
co it was just like raw c plus plus no libraries.
Um,

603
00:38:17.400 --> 00:38:18.570
so that was my first project,

604
00:38:18.870 --> 00:38:22.560
but I wouldn't ever recommend that as a first machine learning project for you.

605
00:38:22.740 --> 00:38:23.820
If I were to start today,

606
00:38:23.821 --> 00:38:28.440
I would start with probably like psychic learn just to like,

607
00:38:28.470 --> 00:38:33.050
like before even neural networks,
just like a linear regression.
Okay.
Um,

608
00:38:33.150 --> 00:38:36.610
how to connect d three.
Dot.
Js.
Okay.
Second of three questions before we're done.

609
00:38:37.060 --> 00:38:41.800
Can you explain how to connect d three dot js with python?
Sure.
So,

610
00:38:42.220 --> 00:38:45.640
okay,
so there's a front end and a backend in a web app.
Okay.

611
00:38:45.700 --> 00:38:50.700
So in the backend you want to use a language that will be able to store data and

612
00:38:51.551 --> 00:38:56.380
manipulate it.
So Python has a framework for this called Django.

613
00:38:57.160 --> 00:39:00.250
Okay.
Uh,

614
00:39:00.251 --> 00:39:04.210
so Django is a great framework for this python and Django.
Look up Django.
Okay.

615
00:39:04.211 --> 00:39:07.630
Dj A.
N.
G.
O.
Okay.
So with Django,

616
00:39:07.631 --> 00:39:12.310
you could create all of this backend manipulation.
So entry,

617
00:39:12.340 --> 00:39:12.730
right?

618
00:39:12.730 --> 00:39:16.100
So maybe you just just start off with a Django web app that just shows up a

619
00:39:16.210 --> 00:39:20.740
little text entry form where you type in a name and then it shows the name.
Okay,

620
00:39:20.741 --> 00:39:25.410
that's it.
And so python would let you do that and you add d three to that,
uh,

621
00:39:25.510 --> 00:39:30.460
Django repository,
like the,
you know,
via npm and,
or not the NPM,

622
00:39:30.461 --> 00:39:31.660
but just like pop pop,

623
00:39:31.720 --> 00:39:36.010
pop in that Minda JSD three file that I showed you here in this public folder

624
00:39:36.130 --> 00:39:41.020
right here.
And then you can just manipulate,
uh,
elements directly,
uh,

625
00:39:41.050 --> 00:39:41.883
using d three.

626
00:39:41.950 --> 00:39:46.420
So anything that you send back to you could send forward from the Django web
APP.

627
00:39:47.020 --> 00:39:50.230
You can manipulate with d three and show in any way you want.
Uh,

628
00:39:50.231 --> 00:39:52.270
so the last question is,

629
00:39:53.090 --> 00:39:53.923
<v 2>mmm,</v>

630
00:39:55.210 --> 00:39:59.920
<v 1>is it possible to generate this chart directly in python language using a Django</v>

631
00:39:59.921 --> 00:40:00.940
PLO plugin,

632
00:40:01.640 --> 00:40:02.473
<v 2>uh,</v>

633
00:40:03.470 --> 00:40:06.680
<v 1>to generate this tried directly in the pipe?
Yeah,
it actually,
there's,
there's a,</v>

634
00:40:06.720 --> 00:40:10.110
there's a library call,
I think it's called Pi d three or d three Pi,

635
00:40:10.350 --> 00:40:11.700
which basically lets you do that.

636
00:40:12.640 --> 00:40:13.473
<v 2>MMM.</v>

637
00:40:13.500 --> 00:40:15.420
<v 1>So yeah,
you can totally do that.</v>

638
00:40:16.080 --> 00:40:16.913
<v 2>MMM.</v>

639
00:40:17.830 --> 00:40:21.430
<v 1>And I can definitely prepare description of what to code along with me next
time.</v>

640
00:40:21.940 --> 00:40:24.430
All right,
so cool.

641
00:40:24.431 --> 00:40:27.970
So that's all for this livestream.
Uh,

642
00:40:27.990 --> 00:40:30.970
I want to do these once a week,
um,

643
00:40:31.030 --> 00:40:36.030
and we'll see how it goes because this is definitely like fun,

644
00:40:36.281 --> 00:40:39.430
but it's also like really intense.

645
00:40:39.520 --> 00:40:43.960
So the goal is to do it every week.
I'm definitely gonna Release My,
you know,

646
00:40:44.020 --> 00:40:48.610
main videos once a week as well.
So,
all right guys,
so that's all.

647
00:40:48.700 --> 00:40:49.880
So,
uh,

648
00:40:50.200 --> 00:40:54.610
for now I've got to learn more about javascript.

649
00:40:55.150 --> 00:40:57.430
Uh,
so thanks for watching.

650
00:41:00.980 --> 00:41:01.813
<v 0>Okay.</v>

651
00:41:06.160 --> 00:41:07.010
<v 2>MMM.</v>

652
00:41:08.220 --> 00:41:10.170
<v 1>Right.
And this,
here it is.</v>

