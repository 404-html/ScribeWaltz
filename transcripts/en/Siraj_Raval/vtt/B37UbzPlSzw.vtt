WEBVTT

1
00:00:00.300 --> 00:00:00.961
Hello world,

2
00:00:00.961 --> 00:00:05.961
it's the Raj and blockchains are so 2017 2018 is going to be the year of block

3
00:00:07.380 --> 00:00:11.610
daggers directed a cyclic graphs.
You might be thinking,

4
00:00:11.670 --> 00:00:12.810
what did you just say?

5
00:00:12.840 --> 00:00:15.540
And that's okay because I'm going to explain what I just said.

6
00:00:16.290 --> 00:00:20.310
This video is about a crypto system called iota.
Okay?

7
00:00:20.311 --> 00:00:24.570
So it's called iota and it uses a distributed ledger similar to bitcoin's

8
00:00:24.571 --> 00:00:29.190
blockchain except it solves a lot of the issues or aims to solve a lot of its

9
00:00:29.191 --> 00:00:33.180
issues and it's getting really popular and it's about number seven or number

10
00:00:33.181 --> 00:00:35.730
eight on the coin market cap website.

11
00:00:36.030 --> 00:00:39.330
And it's getting really popular and I've gotten a lot of requests for this
video.

12
00:00:39.331 --> 00:00:41.940
So I'm going to do a video on this.
I've been studying it all day and yesterday,

13
00:00:41.941 --> 00:00:45.480
so,
and I'm,
and I'm pretty excited about what I've,
what I've studied so far.

14
00:00:45.480 --> 00:00:48.810
So I'm going to share with you what I've learned about this system today.
Okay?

15
00:00:48.811 --> 00:00:52.020
So before we go into why I is awesome,

16
00:00:52.021 --> 00:00:55.680
I want to start off with the problem with blockchains because blockchains are

17
00:00:55.681 --> 00:01:00.270
awesome.
However,
they've got their problems.
99 of them,
but uh,
no,

18
00:01:00.300 --> 00:01:04.530
not 99 problems.
Just some problems.
Okay.
I just wanted to slip that in there.

19
00:01:04.531 --> 00:01:06.120
Okay,
so here we go with the problems.

20
00:01:07.230 --> 00:01:11.370
The first problem with blockchains are scalability issues,
right?

21
00:01:12.030 --> 00:01:17.010
There are endless debates on Twitter,
on slack,
on Bitcoin,
forums on scalability,

22
00:01:17.011 --> 00:01:20.490
and there's 1,000,001 solutions to scalability,
right?

23
00:01:20.670 --> 00:01:24.810
So bitcoin's blockchain takes about 10 minutes to confirm a transaction.

24
00:01:25.230 --> 00:01:26.790
That's a long time,
right?

25
00:01:26.910 --> 00:01:30.990
10 minutes to confirm a transaction is a very long time per system.

26
00:01:30.991 --> 00:01:35.010
That's meant for micro payments,
right?
Micropayments from machines,

27
00:01:35.220 --> 00:01:36.960
the machine to machine transfer.

28
00:01:37.200 --> 00:01:40.500
We want machines to be transferring millions of transactions per second.

29
00:01:40.500 --> 00:01:42.750
Ideally just giant Mesh networks.

30
00:01:42.960 --> 00:01:46.110
A machine just transmitting value faster than any human could,

31
00:01:46.380 --> 00:01:50.520
but for 10 minutes,
that's way too long,
right?
And that's what it's become.

32
00:01:50.670 --> 00:01:55.620
There are currently 200,000 unconfirmed transactions on the Bitcoin blockchain.

33
00:01:55.860 --> 00:01:59.700
So if we open this list,
this real time list of transactions,
okay,

34
00:01:59.701 --> 00:02:00.534
this is real time.

35
00:02:01.020 --> 00:02:04.770
We'll see that there are about 183,000 unconfirmed transactions and they're just

36
00:02:04.771 --> 00:02:06.210
flowing in right now.
Just like that.

37
00:02:06.570 --> 00:02:10.410
That's a lot of unconfirmed transactions and at 10 minutes per transaction,

38
00:02:10.830 --> 00:02:12.060
that's just way too long.
Okay,

39
00:02:12.061 --> 00:02:15.900
so that's a lot of unconfirmed transactions because it's taking so long to

40
00:02:15.901 --> 00:02:18.150
confirm them.
And this is annoying,
right?

41
00:02:18.390 --> 00:02:22.350
Why would you want to wait or pay a higher fee for a faster transaction

42
00:02:22.351 --> 00:02:24.870
validation or deal with transaction uncertainty?

43
00:02:25.050 --> 00:02:28.370
Let's say you're a multinational corporation like IBM or you know,

44
00:02:28.410 --> 00:02:33.330
Chase Bank and you want to use blockchain technology to sync up your different

45
00:02:33.331 --> 00:02:35.760
branches across the world.
You know,
use it to ledger,

46
00:02:35.850 --> 00:02:39.870
to sync up the data and in a,
in a permissionless trustless way.

47
00:02:40.260 --> 00:02:43.410
But if you're having to wait 10 minutes per transaction,
that's way too long.

48
00:02:43.710 --> 00:02:47.850
So check this out.
These,
uh,
has 2000 transactions per second.

49
00:02:47.990 --> 00:02:52.590
The Isa is the network globally.
It is the network for transmitting value.

50
00:02:52.591 --> 00:02:57.510
Currently bitcoin is nothing compared to visa.
Okay?
Look at that.

51
00:02:57.511 --> 00:03:01.210
Five to seven transactions a second.
That is nothing.

52
00:03:01.360 --> 00:03:05.710
We way more than that.
So in,
in,
in comparison,
paypal is way more.

53
00:03:05.830 --> 00:03:08.980
So how are we going to get up to that cell level?
You know what I'm saying?

54
00:03:08.981 --> 00:03:10.630
How do we get up to that Vesa level?

55
00:03:10.900 --> 00:03:14.530
And there's been so many different suggestions.
There's segway,

56
00:03:14.650 --> 00:03:17.260
there's a lightening network,
there's all these solutions.

57
00:03:17.261 --> 00:03:18.670
So I'm going to go into those a bit.

58
00:03:18.700 --> 00:03:22.060
But that's the first issue with blockchain's scalability.

59
00:03:22.120 --> 00:03:24.400
It's hard to scale a blockchain,
right?

60
00:03:24.640 --> 00:03:26.620
You've got massive amounts of computing power.

61
00:03:26.621 --> 00:03:31.240
You've got the speed of transactions decreases as a network increases in size,

62
00:03:31.840 --> 00:03:34.900
and you don't want to store data on the blockchain,
right?
There's this,

63
00:03:34.901 --> 00:03:36.580
there's this thing called blockchain bloat,

64
00:03:36.850 --> 00:03:39.080
where you don't want to store data directly on a blockchain.

65
00:03:39.100 --> 00:03:42.820
You want to have a pointer to data that's living somewhere like in a distributed

66
00:03:42.821 --> 00:03:47.770
hash table,
right?
So scalability is one.
There's number two,
our fees,

67
00:03:47.771 --> 00:03:50.590
right?
So the main transaction fee,

68
00:03:50.591 --> 00:03:55.300
that is the average transaction fee for a transaction in the bitcoin network is

69
00:03:55.301 --> 00:03:58.090
a dollar.
That might not seem like a lot of money,

70
00:03:58.150 --> 00:04:02.410
but that's a lot of money for networks meant for micropayments,
right?
That's,

71
00:04:02.411 --> 00:04:06.420
that's the whole point.
Visa has that 2% what is it 2% charge for?

72
00:04:06.540 --> 00:04:10.120
For each transaction?
The coin was all about,
okay,
we don't need that anymore,

73
00:04:10.121 --> 00:04:14.140
right?
We have,
we have,
uh,
feel as transactions or the very minimal fee.

74
00:04:14.500 --> 00:04:18.400
Well now it's a dollar.
So anything under that is worthless,
right?

75
00:04:18.401 --> 00:04:21.070
Because the fee is going to be greater than the transaction amount.

76
00:04:21.220 --> 00:04:25.630
So micro payments under a dollar are virtually useless or impossible.
Now,

77
00:04:25.810 --> 00:04:28.060
and this can be more than the transaction amount itself,
right?

78
00:04:28.061 --> 00:04:32.110
So solutions include increasing the block size,
using lightening network,

79
00:04:32.170 --> 00:04:36.730
central servers for off chain transactions,
like using Coinbase for example,

80
00:04:36.820 --> 00:04:38.620
side chains,
tree chains.

81
00:04:38.621 --> 00:04:42.250
There's a lot of proposals and there's a lot of ways that the core developers

82
00:04:42.370 --> 00:04:45.490
and just the,
the bitcoin community is doing to fix that.

83
00:04:45.491 --> 00:04:48.640
I'm not saying that they are not trying to fix it.
They are,

84
00:04:49.340 --> 00:04:52.690
but it's still,
it's still,
um,

85
00:04:53.230 --> 00:04:56.350
it's not fixed right there.
There are still,
the fee still exists.

86
00:04:56.620 --> 00:04:59.620
So if we look at the fee over time,
it just going straight up.

87
00:04:59.650 --> 00:05:04.210
It just exponentially over time for transmitting even 0.01 BTC,

88
00:05:04.211 --> 00:05:06.970
which is what this graph is.
So

89
00:05:09.160 --> 00:05:13.060
there's a lot of computing power required to maintain the bitcoin blockchain as

90
00:05:13.061 --> 00:05:13.361
well.

91
00:05:13.361 --> 00:05:17.980
As you probably know and mining has become somewhat centralized by these giant

92
00:05:17.981 --> 00:05:21.150
mining pools,
right?
In China mostly.
But that's,

93
00:05:21.151 --> 00:05:23.440
that's a lot like check and take a look at this chart right here of the

94
00:05:23.441 --> 00:05:26.050
distribution of bitcoin mining power,
right?

95
00:05:26.051 --> 00:05:28.960
If you look at g Hash and BTC guild,

96
00:05:29.110 --> 00:05:34.110
together they make up 55% of the network to pools make up the majority of the

97
00:05:35.201 --> 00:05:39.850
networks mining power.
Now that is centralization.
Okay?

98
00:05:39.851 --> 00:05:44.590
That is a lot of centralization for supposedly decentralized network and

99
00:05:44.620 --> 00:05:49.360
transaction speed declines as a network increases in size as more transactions

100
00:05:49.361 --> 00:05:51.730
compete for the limited per block spaces.

101
00:05:52.030 --> 00:05:55.510
So it's going to take more and more computing power to mine the same amount of

102
00:05:55.511 --> 00:05:58.550
big coin.
You've got to buy these six.
If you want to be a miner,

103
00:05:58.730 --> 00:06:02.450
you got to put the money in.
Okay,
you got to buy some giant a six.

104
00:06:02.451 --> 00:06:05.210
Ideally if you want to make some profit and then you know,

105
00:06:05.240 --> 00:06:08.420
meet or your electricity costs,
et cetera.
But I mean just look at this.

106
00:06:08.421 --> 00:06:09.770
This is the hash rate,
you know,

107
00:06:09.780 --> 00:06:13.130
the cost it takes to mine a block just going straight up,

108
00:06:13.370 --> 00:06:16.340
which means you need way more computing power to mind,

109
00:06:16.341 --> 00:06:21.290
the same amount of bitcoin that you would otherwise.
Okay.

110
00:06:21.440 --> 00:06:25.940
And lastly,
one more problem.
They're vulnerable to quantum attacks,
right?

111
00:06:25.941 --> 00:06:30.941
So bitcoin and other proof of work based blockchains are susceptible to being

112
00:06:31.881 --> 00:06:36.740
broken by a powerful quantum computer.
So here's why.
The proof of work algorithm,

113
00:06:36.800 --> 00:06:38.750
and I talked about this in previous videos,

114
00:06:39.140 --> 00:06:42.950
but the proof of work algorithm is trying to solve random mathematical problems,

115
00:06:42.951 --> 00:06:45.380
right?
It takes a certain amount of time to solve these problems.

116
00:06:45.680 --> 00:06:49.910
So for a minor to generate a suitable hash to generate a block,

117
00:06:50.150 --> 00:06:53.390
they've got to check around two to the 68th nonces.

118
00:06:53.391 --> 00:06:56.930
That means numbers only used once to find that suitable hash.

119
00:06:57.410 --> 00:07:02.240
So a quantum computer would need the square root of n operations to solve a

120
00:07:02.241 --> 00:07:06.980
problem that would normally need an operations on a classical computer.
That's,

121
00:07:06.981 --> 00:07:07.310
uh,
that's,

122
00:07:07.310 --> 00:07:11.390
that's just an order of a magnet or of an order of magnitude difference.

123
00:07:11.600 --> 00:07:14.870
So a quantum computer would need,
if we calculated it out,

124
00:07:14.871 --> 00:07:16.760
which I did it right here,
it's a quantum computer,

125
00:07:16.761 --> 00:07:21.590
will be 17 billion times more efficient in bitcoin mining and then the classical

126
00:07:21.591 --> 00:07:23.540
computer,
right?
So right.

127
00:07:23.541 --> 00:07:28.370
So the network requires lots of computing power to maintain its security.

128
00:07:28.690 --> 00:07:29.121
And if a,

129
00:07:29.121 --> 00:07:33.710
if a bad actor gained control of more than 51% of nodes,

130
00:07:33.890 --> 00:07:37.460
that means they have more than 51% of computing power than they would be able to

131
00:07:37.461 --> 00:07:38.294
double spend.

132
00:07:38.450 --> 00:07:42.170
That means change a transaction history and spend money that they don't actually

133
00:07:42.200 --> 00:07:44.270
have.
And that would break the entire network.

134
00:07:44.420 --> 00:07:46.730
And everything is based off of classical computing,
right?

135
00:07:46.760 --> 00:07:49.220
The laws of classical computers.
However,

136
00:07:49.221 --> 00:07:52.190
quantum computers could do this 17 billion times faster.

137
00:07:52.340 --> 00:07:55.730
So with just one very powerful quantum computer,

138
00:07:55.970 --> 00:07:59.840
an attacker could break the entire network and this is very dangerous.

139
00:07:59.841 --> 00:08:04.040
And we don't have a quantum computer like that right now.
It's all theoretical,

140
00:08:04.490 --> 00:08:08.840
but their advances being made in this space and it's,
it's going to happen.

141
00:08:08.841 --> 00:08:12.080
So we need some sort of quantum attack resistance mechanism.

142
00:08:13.070 --> 00:08:17.570
And I've got this little infographic here on how a quantum computer works.
Uh,

143
00:08:17.600 --> 00:08:20.280
but the most basic Eli five,
uh,

144
00:08:20.750 --> 00:08:24.510
explanation I can give right now is that a classical computer,
uh,

145
00:08:24.530 --> 00:08:28.280
only computes ones and Zeros.
So are binary,
uh,
operators,

146
00:08:28.510 --> 00:08:31.670
whereas a quantum computer uses instead of a bit a cubit,

147
00:08:31.880 --> 00:08:36.080
which can be both a one a zero and a one and zero at the same time.

148
00:08:36.080 --> 00:08:38.480
So it's a super position of two different bits.

149
00:08:38.780 --> 00:08:42.830
And this allows for types of computation that would not be possible on a

150
00:08:42.831 --> 00:08:43.664
classical computer.

151
00:08:43.700 --> 00:08:47.270
I just have a great video on this and a part of my math of intelligence series,

152
00:08:47.510 --> 00:08:49.710
it's called quantum computation.
So check that out.

153
00:08:49.720 --> 00:08:53.300
Just search Saroj quantum computation.
Let's keep going here.
Okay.

154
00:08:53.301 --> 00:08:55.740
So those are all the problems with the blockchain.

155
00:08:56.700 --> 00:09:01.700
So let's talk about why I oda as a crypto system is different from a blockchain.

156
00:09:02.820 --> 00:09:06.540
So the first big difference is the structure.
So like I said,
blockchains are,

157
00:09:06.541 --> 00:09:10.710
so 2017 iota uses what's called a block Dag.
Okay.

158
00:09:10.711 --> 00:09:12.270
A directed a cyclic graph.

159
00:09:13.050 --> 00:09:15.870
I just want to talk about the directed [inaudible] graph for a second.
Okay,

160
00:09:15.871 --> 00:09:18.690
so dogs are not new.

161
00:09:18.960 --> 00:09:23.790
A Dag is just a hierarchy of nodes that are connected to each other where no

162
00:09:23.791 --> 00:09:27.570
note is a descendant of itself.
That means there are no cycles.
That's the word.

163
00:09:27.630 --> 00:09:29.520
A cyclical.
There are no cycles,
right?

164
00:09:29.610 --> 00:09:32.640
So it's just a hierarchy of nodes that are connected to each other in one

165
00:09:32.641 --> 00:09:37.230
direction.
So there are a million different ways that you could structure a dag,

166
00:09:37.231 --> 00:09:39.810
but that's the basic idea.
No cycles in this graph.

167
00:09:40.290 --> 00:09:42.540
You could think of a file system as a Dag,
right?

168
00:09:42.541 --> 00:09:46.590
Because it's just a hierarchy of nodes,
right folder within a folder,

169
00:09:46.591 --> 00:09:50.910
within a folder,
get the,
the,
the protocol that get hub uses,
that's a deck.

170
00:09:51.180 --> 00:09:55.740
A IPFS is IPFS the interplanetary file system.
That's a Dag.

171
00:09:55.860 --> 00:09:59.190
In fact,
you can even think of a blockchain as a Dag,
right?

172
00:09:59.191 --> 00:10:01.680
Because a blockchain doesn't have cycles,
but it's,

173
00:10:01.681 --> 00:10:05.010
it's a very specific type of deck and that it's a single he linked to list.

174
00:10:05.160 --> 00:10:08.040
It's a glorified singly linked list that is a,

175
00:10:08.160 --> 00:10:11.070
that is secured by the proof of work algorithm.

176
00:10:11.970 --> 00:10:15.390
A Dag is more general like,
so here's,
here's an image right here.

177
00:10:15.391 --> 00:10:19.350
So blockchains are just blocks that are pointing to each other in one direction

178
00:10:19.620 --> 00:10:23.760
and tangle,
which is what they call,
which is what iota calls.
It's a,

179
00:10:23.761 --> 00:10:26.970
it's another word for it's deck.
I'm just going to call my dad guys,
I know you,

180
00:10:27.000 --> 00:10:30.300
I know the iota guys are watching this right now.
Let's just call it dag please.

181
00:10:30.301 --> 00:10:32.910
Let's not add more terminologies to this just for adoption.

182
00:10:33.000 --> 00:10:37.080
So blockchains are sequential change where blocks are added in regular
intervals,

183
00:10:37.081 --> 00:10:39.690
right?
But,
uh,
I OTAs data structure,

184
00:10:39.691 --> 00:10:44.370
the Dag is able to achieve high transaction throughput by parallel parallelizing

185
00:10:44.371 --> 00:10:49.050
validation and no transaction fees occurs occur for any transaction.
As it grows,

186
00:10:49.051 --> 00:10:53.160
more participants make transactions and the overall system becomes more secure

187
00:10:53.161 --> 00:10:57.780
and faster with confirmation times slash transaction finality going down.

188
00:10:58.560 --> 00:11:01.620
What that means is as more nodes are added to the network,

189
00:11:01.800 --> 00:11:05.790
the network's transactions actually get approved faster.

190
00:11:05.940 --> 00:11:09.660
And that's in direct contrast to the blockchain.
The more nodes there are,

191
00:11:09.690 --> 00:11:11.820
the slower the transactions are approved,
right?

192
00:11:12.150 --> 00:11:14.370
And the longer it takes for a transaction to be approved.

193
00:11:14.940 --> 00:11:18.810
Whereas in the block dag that iota uses,
the more nodes there are,

194
00:11:18.811 --> 00:11:20.850
the faster the transactions are approved,

195
00:11:21.000 --> 00:11:23.070
which is a much more scalable architecture.

196
00:11:23.430 --> 00:11:26.640
And you might be wondering why is this,
but I'll go into that in a second.
Okay,

197
00:11:26.641 --> 00:11:30.360
so it's still a distributed database.
It's still a peer to peer network.

198
00:11:30.480 --> 00:11:33.300
It's still relies on consensus and validation mechanism.

199
00:11:33.450 --> 00:11:37.380
And so those things are all the same.
It's just the structure that is different.

200
00:11:37.620 --> 00:11:42.030
And the type of consensus and validation mechanism that's different too.

201
00:11:42.330 --> 00:11:46.770
Right?
And it scales,
like I said,
it scales as blockchain scale.

202
00:11:46.771 --> 00:11:50.550
The usability goes down as Iotas Dag scales,

203
00:11:50.551 --> 00:11:52.050
the usability goes up.

204
00:11:53.880 --> 00:11:56.200
So here's the big difference here is the big difference.
Number two,

205
00:11:56.201 --> 00:11:59.140
there are two big differences,
right?
So the first one is the structure.

206
00:11:59.290 --> 00:12:03.100
The second one is consensus.
So there are no minors.

207
00:12:03.220 --> 00:12:07.720
So people who want to be miners,
too bad,
you can't be minors.

208
00:12:07.750 --> 00:12:11.200
That's okay.
This is a good thing for the network.
Here's why.
So in,

209
00:12:11.370 --> 00:12:15.190
so blockchain consensus is achieved by requiring multiple parties to race

210
00:12:15.191 --> 00:12:19.330
against each other in an attempt to add the next block to the blockchain and get

211
00:12:19.331 --> 00:12:23.560
the block reward,
right?
So miners are competing to mine the next block,

212
00:12:23.561 --> 00:12:26.980
the fastest using their computing power and whoever's first to do it gets to

213
00:12:26.981 --> 00:12:28.540
mine it,
and then they get the reward.

214
00:12:28.930 --> 00:12:33.070
But because of this consensus is decoupled from transaction generation,

215
00:12:33.310 --> 00:12:37.420
you have this whole separate group of nodes in the bitcoin network that are

216
00:12:37.421 --> 00:12:39.250
dedicated to mining,
right?

217
00:12:39.490 --> 00:12:43.360
And then all the participants in the network that are not minors,

218
00:12:43.630 --> 00:12:46.690
all they do is just generate transactions,
right?
I want to pay for this,

219
00:12:46.691 --> 00:12:48.730
I want to receive this,
I want to pay for this,
I want to receive this.

220
00:12:49.150 --> 00:12:52.690
And because it's the coupled that leads to further centralization,
right?

221
00:12:52.691 --> 00:12:54.970
Because the,
these mining pools can occur,

222
00:12:55.270 --> 00:12:58.510
but in iota there's no decoupling the,

223
00:12:58.750 --> 00:13:03.610
all the notes are minors in a way,
or they're not minors.
Here's how it works.

224
00:13:03.670 --> 00:13:04.960
So in iota,

225
00:13:04.990 --> 00:13:09.990
every participant in the network making a transaction also actively participates

226
00:13:10.091 --> 00:13:14.320
in the consensus.
Here's how,
every time you make a transaction,

227
00:13:14.440 --> 00:13:19.440
you reference to transactions directly and and in a way other transactions in

228
00:13:19.631 --> 00:13:22.510
the sub dag indirectly just by referencing too.

229
00:13:22.870 --> 00:13:25.330
So there are no blocks in the classical sense.

230
00:13:25.360 --> 00:13:29.380
Instead as single transaction references to past transactions,

231
00:13:30.160 --> 00:13:32.470
right?
So here's,
here's a,
here's the graph.

232
00:13:32.650 --> 00:13:36.040
It bundles all transactions in a directed asynclitic graft.

233
00:13:36.280 --> 00:13:38.500
It's self regulating consensus,

234
00:13:38.620 --> 00:13:42.700
no longer decoupled to a set of minors and it's very scalable with a low

235
00:13:42.701 --> 00:13:46.840
overhead proof of work to prevent spam.
So check this out.
The green blocks,

236
00:13:46.841 --> 00:13:49.420
our transactions in which consensus was achieved.

237
00:13:49.810 --> 00:13:52.810
The red blocks are transactions where we are still uncertain on there.

238
00:13:52.811 --> 00:13:56.770
Full acceptance and the gray blocks are unconfirmed transactions.

239
00:13:56.830 --> 00:13:59.710
Ideally we want all of these transactions to be green,
right?

240
00:13:59.711 --> 00:14:04.270
So from right to left or left to right,
depending on how this works,
uh,

241
00:14:04.450 --> 00:14:09.430
eventually all the nodes will be verified if the nodes pointing to a verify that

242
00:14:09.431 --> 00:14:11.440
it is indeed a valid transaction

243
00:14:13.000 --> 00:14:16.960
and there are no transaction fees because there are no minors.
You,

244
00:14:16.961 --> 00:14:18.490
when you make a transaction,

245
00:14:18.730 --> 00:14:22.930
you have to approve to other transactions and then you have to perform the proof

246
00:14:22.931 --> 00:14:27.670
of work algorithm.
So in a way you get paid by not having to pay a fee.

247
00:14:27.820 --> 00:14:30.130
Right?
So because you're computing this proof of work,

248
00:14:30.280 --> 00:14:32.620
which is for civil resistance,
right?

249
00:14:33.670 --> 00:14:35.320
Because you're competing that proof of work,

250
00:14:35.650 --> 00:14:40.360
you get to make a transaction without there being a fee and that is your reward.

251
00:14:40.420 --> 00:14:43.090
So there are no transaction fees,
which is awesome.

252
00:14:44.770 --> 00:14:49.120
So instead of a smaller subset of the network being responsible for the overall

253
00:14:49.121 --> 00:14:53.690
consensus,
I.
E.
The miners,
the entire network of active participants,

254
00:14:53.890 --> 00:14:58.220
I either devices making the transactions are directly involved in the approval

255
00:14:58.250 --> 00:14:59.330
of those transactions.

256
00:14:59.570 --> 00:15:03.170
And so consensus in Iota is no longer decoupled from the transaction making

257
00:15:03.171 --> 00:15:05.690
process.
It's an intrinsic part of it.

258
00:15:05.840 --> 00:15:09.380
And that's what lets it scale without any transaction fees.
Oh,

259
00:15:09.381 --> 00:15:13.250
and one more thing,
like I said before,
it's quantum,
it's quantum resistant.

260
00:15:13.460 --> 00:15:17.270
It's not success susceptible to quantum attacks.
And why is this?
Well,

261
00:15:17.271 --> 00:15:20.840
it uses an algorithm called a winter knits.
One time signature.

262
00:15:20.900 --> 00:15:24.440
I can make an entire video on how winter knits one time signatures work.

263
00:15:24.710 --> 00:15:26.660
I'm not going to do that because it would be too long.

264
00:15:26.780 --> 00:15:29.330
But check out the link right here in this Jupiter notebook,

265
00:15:29.630 --> 00:15:32.540
which is in the get hub by the way.
Okay,
so here's a little picture of it.

266
00:15:33.100 --> 00:15:34.520
All right,
so,
so here,
okay,

267
00:15:34.521 --> 00:15:37.810
so you might be confused by this process of making a transaction.

268
00:15:37.820 --> 00:15:41.660
Let me clarify it.
So it's a three step process.
It's a three step process.

269
00:15:41.661 --> 00:15:44.810
So the first step,
like,
so let's say I want to pay,
you know,
I'm a machine,

270
00:15:44.811 --> 00:15:47.450
I want to pay this other machine or even I'm a human,
you know,

271
00:15:47.451 --> 00:15:49.070
I want to pay this other human,
here's how it works.

272
00:15:49.430 --> 00:15:52.880
The first step is a sign that transaction input with your private keys.

273
00:15:53.030 --> 00:15:56.840
What that means is you've got a unique set of private keys that identify you as

274
00:15:56.841 --> 00:15:59.480
a unique individual node in the network.

275
00:15:59.660 --> 00:16:03.950
When you sign a transaction that you are hashing,

276
00:16:03.980 --> 00:16:07.970
you're creating the hash of that transaction using your private,
unique,
unique,

277
00:16:08.030 --> 00:16:09.230
uh,
25 character key,

278
00:16:09.410 --> 00:16:12.860
which means a transaction will be both unique and linked to you.

279
00:16:12.860 --> 00:16:16.820
So you sign it with your private key.
Then step two is tip selection,
right?

280
00:16:16.970 --> 00:16:21.350
So tips are the,
what iota calls these unconfirmed transactions.

281
00:16:21.650 --> 00:16:23.780
So it uses the Monte,

282
00:16:23.840 --> 00:16:28.430
it uses the Markov chain Monte Carlo Algorithm to randomly select two tips.

283
00:16:28.460 --> 00:16:32.510
These are unconfirmed transactions,
which will be referenced by your transaction.

284
00:16:32.540 --> 00:16:33.410
And in the code,

285
00:16:33.411 --> 00:16:36.800
these are called the branch transaction and the trunk transaction,
right?

286
00:16:36.801 --> 00:16:39.860
So once you've signed your transaction,
you then point to,

287
00:16:39.861 --> 00:16:44.000
to unconfirmed transactions that you're going to have to approve before your

288
00:16:44.001 --> 00:16:47.090
transaction is generated and validated.
So that,
so that's,

289
00:16:47.091 --> 00:16:48.620
that's what you're paying for this.

290
00:16:49.040 --> 00:16:52.100
And step three is to perform the proof of work algorithm.

291
00:16:52.250 --> 00:16:54.770
In order to have your transaction accepted by the network,

292
00:16:54.920 --> 00:16:58.490
you need to do some proof of work similar to hash cash,
similar to Bitcoin,
right?

293
00:16:58.700 --> 00:17:02.780
And this is for civil resistance,
right?
It's all about the computing power,
right?

294
00:17:02.960 --> 00:17:07.190
You don't want any of the nodes in the network to gain control of the network by

295
00:17:07.191 --> 00:17:08.870
having the majority of the computing power.

296
00:17:09.020 --> 00:17:12.950
And that's what proof of work prevents because everyone has to compute this,

297
00:17:12.970 --> 00:17:14.660
you know,
random mathematical problem.

298
00:17:16.120 --> 00:17:18.950
A node would have to have more computing power than the rest of the,

299
00:17:19.150 --> 00:17:22.820
an attacker would have to have more computing power than the then half to

300
00:17:22.821 --> 00:17:25.220
network in order to double spent.

301
00:17:25.430 --> 00:17:27.950
So proof of work is for double spending.

302
00:17:28.250 --> 00:17:32.030
Tip Selection is computed using demark off chain Monte Carlo process.

303
00:17:32.270 --> 00:17:34.040
I also have a video on how this works.

304
00:17:34.190 --> 00:17:36.110
It's a part of my reinforcement learning theories.

305
00:17:36.320 --> 00:17:40.670
I can go into a whole video on that,
but it's called Monte Carlo prediction.

306
00:17:40.671 --> 00:17:43.640
Just Google that.
But I'm in shorts.

307
00:17:43.880 --> 00:17:48.880
This is a probabilistic algorithm that samples randomly using distributions.

308
00:17:50.490 --> 00:17:51.660
So it's uh,
so,

309
00:17:51.930 --> 00:17:56.930
so Markov chain Monte Carlo methods sample from a set of nodes randomly using a

310
00:17:57.721 --> 00:18:02.310
distribution function.
Okay.
So once you've competed,

311
00:18:02.340 --> 00:18:04.140
completed these three,
three steps,

312
00:18:04.290 --> 00:18:07.770
your transaction will be broadcast to the network and someone else will come

313
00:18:07.771 --> 00:18:08.071
along,

314
00:18:08.071 --> 00:18:11.850
choose your transaction in the tip selection process and validated and just like

315
00:18:11.851 --> 00:18:13.530
that your transaction is confirmed.

316
00:18:13.680 --> 00:18:16.920
So that's why the network gets faster.

317
00:18:16.921 --> 00:18:21.650
Transactions get faster as the network scales because the more people there are

318
00:18:21.660 --> 00:18:22.493
in the network,

319
00:18:22.560 --> 00:18:27.090
the faster your transaction will be validated because there are more people

320
00:18:27.091 --> 00:18:31.350
available to confirm your transaction.
Right?
So that's why it's scales as,

321
00:18:31.351 --> 00:18:34.170
as there are more people.
Okay.
So I do want to say one thing.

322
00:18:34.230 --> 00:18:38.760
So there is this concept of the coordinator right now in iota.

323
00:18:39.120 --> 00:18:44.060
And so the coordinator is uh,
is run by the Iota Foundation.

324
00:18:44.070 --> 00:18:49.070
The people who made iota and the coordinator check point's valid transactions,

325
00:18:49.501 --> 00:18:52.580
which are then validated by the entire network.
Um,

326
00:18:53.220 --> 00:18:56.460
it cannot go rogue as this coordinator is being checked and validated by the

327
00:18:56.461 --> 00:18:59.040
entire network.
But what this means is,
first of all,

328
00:18:59.250 --> 00:19:03.120
it's very hard to bootstrap a blockchain,
right?
Because you need,
it's,

329
00:19:03.121 --> 00:19:07.800
you need a certain amount of nodes there for the computing power to be greater

330
00:19:07.801 --> 00:19:09.970
than what an attacker would have,
right.

331
00:19:10.020 --> 00:19:12.930
In order to gain control of the network.

332
00:19:13.170 --> 00:19:16.860
Because bitcoin is so big as a,
as an,
as a system,

333
00:19:17.340 --> 00:19:20.640
the amount of computing power and a tech would need is way too big.
Right?

334
00:19:20.880 --> 00:19:24.540
But when you're starting a blockchain that relies on the proof of work
mechanism,

335
00:19:24.810 --> 00:19:28.950
you've got to have some kind of system in place to prevent a bad actor from

336
00:19:28.951 --> 00:19:32.380
taking over some sort of civil resistance.
So the way the Io,

337
00:19:32.700 --> 00:19:37.700
the iota foundation has sought to prevent this is by creating this coordinator

338
00:19:37.831 --> 00:19:40.260
that is run by them.
So it's centralized.
Yes,

339
00:19:40.470 --> 00:19:44.760
it's a centralized node that validates transactions temporarily.

340
00:19:45.300 --> 00:19:49.620
They've been clear about this since the beginning,
which I like and uh,
yeah,

341
00:19:49.621 --> 00:19:53.340
it's centralized.
That's a bad thing.
But it's,
it's a temporary thing.

342
00:19:53.550 --> 00:19:57.720
And I think that,
I mean,
their goals and their,
their aims and their white paper,

343
00:19:58.000 --> 00:20:01.140
it all seems to be pointing in a decentralized direction,

344
00:20:01.350 --> 00:20:05.620
but it's a temporary mechanism to validate transactions at the start.
Uh,

345
00:20:05.730 --> 00:20:09.180
but eventually they're not going to need it or want it and it's going to go
away.

346
00:20:09.210 --> 00:20:13.650
So I just want to mention that.
Okay,
so use cases,
right?

347
00:20:13.651 --> 00:20:15.720
So first is data integrity,
right?

348
00:20:15.721 --> 00:20:19.290
So there's this mechanism to send messages,

349
00:20:19.291 --> 00:20:22.260
secure messages between different nodes in the IOD and network,

350
00:20:22.290 --> 00:20:26.100
which allows for uh,
nodes to communicate data rights.

351
00:20:26.280 --> 00:20:30.900
And because there is this distributed ledger that there is consensus on that is

352
00:20:30.901 --> 00:20:33.090
permissionless and trustless you can be,

353
00:20:33.180 --> 00:20:36.510
you can ensure that the data that is being passed between these notes is,

354
00:20:36.511 --> 00:20:41.511
is valid and data integrity is super useful for any kind of hospital records or

355
00:20:42.710 --> 00:20:46.140
you know,
any kind of secure records that we need to,
you know,
government law,

356
00:20:46.141 --> 00:20:49.690
legal,
you know,
anything that needs a lot of security,

357
00:20:49.900 --> 00:20:53.890
this would be great in a trustless,
permissionless systems,
supply chains,
right?

358
00:20:54.310 --> 00:20:57.310
Importers and exporters,
shipping liners,
logistic companies,
right?

359
00:20:57.311 --> 00:21:00.940
They're all over the world.
They're global and they need to sync up on data.

360
00:21:01.090 --> 00:21:03.780
And you know,
what the,
what the status is of,
you know,

361
00:21:03.800 --> 00:21:06.550
delivery and what the status is of this and this and this and this.

362
00:21:06.820 --> 00:21:10.300
And that's a perfect use case for distributed ledgers like iota.

363
00:21:11.650 --> 00:21:15.490
Right?
And I mean this,
this system was meant for the Internet of things,
right?
So,

364
00:21:15.520 --> 00:21:17.950
and when it comes to the Internet of things,
we are,

365
00:21:18.010 --> 00:21:22.780
we need ways to share a bandwidth computing power,
resources,
uh,
you know,

366
00:21:22.810 --> 00:21:26.440
data,
all sorts of these things.
And that is what this would be good at.

367
00:21:26.680 --> 00:21:31.000
Or any kind of grid as well.
Solar Grid,
micro grid services,
electrical grid,

368
00:21:31.150 --> 00:21:36.150
just anyways to share resources that doesn't need a human in the loop.

369
00:21:36.821 --> 00:21:41.821
Just automatic systems that are trustless permission list that coordinate a

370
00:21:43.150 --> 00:21:47.830
scarce resources amongst groups of people.
This would be a great use case,

371
00:21:48.460 --> 00:21:51.940
right?
So it's key features are infinite scalability,
uh,

372
00:21:51.970 --> 00:21:55.780
no fee microtransactions and quantum resistance.

373
00:21:55.840 --> 00:22:00.490
Three key features that would be awesome to have.
So I mean,

374
00:22:00.491 --> 00:22:04.510
the network already has 100 million in transactions that have occurred without

375
00:22:04.511 --> 00:22:07.330
fees.
Uh,
yes,
it's using a coordinator right now.

376
00:22:07.360 --> 00:22:11.020
Eventually it doesn't need to or they don't want it to be there.
And,
uh,

377
00:22:12.070 --> 00:22:13.030
I think it's pretty cool.

378
00:22:13.031 --> 00:22:17.860
I mean the promise of no fee transactions and a network that scales really well

379
00:22:17.861 --> 00:22:22.240
and gets better in terms of the speed of transactions over time.
That is a,

380
00:22:22.330 --> 00:22:25.300
that is a promise that I like.
Okay.
And I want that to happen.

381
00:22:25.301 --> 00:22:28.600
We should want that to happen.
I,
Yoda is a proof of concept.

382
00:22:28.630 --> 00:22:31.330
I mean everything in this space is a proof of concept.

383
00:22:31.331 --> 00:22:33.540
Bitcoin is even a proof of concept.
What,

384
00:22:33.541 --> 00:22:38.380
what I mean by that is it is not production ready yet,
nor is bitcoin even.

385
00:22:38.560 --> 00:22:41.110
But,
uh,
I like where this is going.

386
00:22:41.111 --> 00:22:44.920
I mean these guys seem to have no their stuff like they worked on next,

387
00:22:44.921 --> 00:22:45.551
which was this,

388
00:22:45.551 --> 00:22:50.551
this first asset transferring a service that uses blockchains in 2010,

389
00:22:51.461 --> 00:22:55.120
2011.
So they'd been in the space for awhile and uh,
you know,
their,

390
00:22:55.121 --> 00:22:56.590
their pre mine was a modest,

391
00:22:56.591 --> 00:23:01.510
I think something like 500 k a and all the coins are,
are,
are generated,

392
00:23:01.570 --> 00:23:05.950
all of them that can be created,
have been created.
So it's,
um,

393
00:23:06.550 --> 00:23:08.830
I think it's a cool system and I,
and I want to see more of it.

394
00:23:09.190 --> 00:23:13.030
I want to see more development of it,
more interest,
more excitement because uh,

395
00:23:13.090 --> 00:23:17.980
yeah,
we need no fee.
Uh,
we need no fee distributed ledger services.
Right?

396
00:23:18.010 --> 00:23:20.680
That's how we're going to really get this internet of things,

397
00:23:20.860 --> 00:23:24.310
of things that are communicating and prince meeting value at millions of

398
00:23:24.311 --> 00:23:28.480
transactions per second faster than these orders of magnitude faster than visa

399
00:23:28.600 --> 00:23:32.890
screw Vesa we just go million times a second.
Okay.
That's where we want to be.

400
00:23:33.100 --> 00:23:36.400
And if we can just bypass all of these issues that are coming up as the,

401
00:23:36.580 --> 00:23:39.730
as the bitcoin blockchain scales and use something like iota,

402
00:23:39.790 --> 00:23:43.150
that would be awesome.
So I think that yes,

403
00:23:43.151 --> 00:23:45.830
there are still some problems and they have a lot promises,

404
00:23:45.831 --> 00:23:48.950
but if they can come through with them and I think that they can,

405
00:23:49.160 --> 00:23:52.940
that would be awesome for everybody.
Okay.
So,
uh,
let's,

406
00:23:52.941 --> 00:23:56.000
let's look at the code for a bit.
So they've got this guy client,

407
00:23:56.450 --> 00:23:59.330
which is really cool.
If you want to,
just the easiest way to get started,

408
00:23:59.480 --> 00:24:04.160
this would be it.
It's built in javascript.
You can use NPM to install it.

409
00:24:04.220 --> 00:24:08.450
It's based off of the electron wallet and instructions are here in this get hub

410
00:24:08.480 --> 00:24:12.740
repository.
One more thing is that the client library in Python,

411
00:24:12.920 --> 00:24:15.230
so the base library is in Java,

412
00:24:15.410 --> 00:24:19.490
but they've got client libraries and Python and Java script,
uh,
and,

413
00:24:19.640 --> 00:24:24.440
and c I think c as well,
but it's all on there.
Get Hub right here at Iota Ledger,

414
00:24:24.710 --> 00:24:28.100
which you can look at right here at Java.
They've got the command line Hap,

415
00:24:28.101 --> 00:24:30.830
they've got an android wallet.
Um,
yeah,
they've got,

416
00:24:30.831 --> 00:24:33.950
they've got a lot of repositories here to play with in some different languages.

417
00:24:35.180 --> 00:24:39.110
But what I'm gonna do is I'm going to just download this and just run it just

418
00:24:39.111 --> 00:24:44.090
just cause,
so let me download that and I'm going to open in terminal.

419
00:24:44.091 --> 00:24:47.890
Let's see.
Let me go right into that folder.

420
00:24:52.810 --> 00:24:53.643
<v 1>Okay.</v>

421
00:24:54.220 --> 00:24:58.810
<v 0>Okay,
so pip install Pi Yoda.</v>

422
00:25:00.950 --> 00:25:02.570
Okay.
There we go.
Uh,

423
00:25:03.110 --> 00:25:07.150
right pseudo pick three installed.
Pieta.

424
00:25:07.890 --> 00:25:08.300
<v 1>Okay.</v>

425
00:25:08.300 --> 00:25:10.040
<v 0>All right.
So I've got iota up and running.</v>

426
00:25:10.041 --> 00:25:12.740
I have a full node running on my computer and using,

427
00:25:12.770 --> 00:25:13.940
once I have this node running,

428
00:25:13.941 --> 00:25:17.190
I've downloaded the Java client and then I can use any of the,

429
00:25:17.360 --> 00:25:22.360
the python or the javascript Cli libraries to then integrate this into a web app

430
00:25:24.291 --> 00:25:26.510
or a mobile app or whatever kind of APP I want.

431
00:25:26.810 --> 00:25:31.130
But it's a pretty lightweight a client and it's easy to integrate into a web APP

432
00:25:31.131 --> 00:25:33.110
or mobile APP.
So you can use it for,
you know,

433
00:25:33.111 --> 00:25:37.850
having an online wallet or whatever payment system or where any kind of a system

434
00:25:37.851 --> 00:25:40.550
you want to create.
The last thing is how to buy iota.

435
00:25:40.551 --> 00:25:44.950
So found this great tutorial on bitfinex.com which is this website is,

436
00:25:45.020 --> 00:25:48.440
it's an online exchange on how you can buy iota with bitcoin.

437
00:25:48.530 --> 00:25:53.110
So it's a five step process.
But first,

438
00:25:53.120 --> 00:25:55.430
first episode,
make sure your phones are on the exchange wallet.

439
00:25:55.610 --> 00:25:59.540
So they have three dedicated wallets that you could use and you can instantly

440
00:25:59.541 --> 00:26:02.480
move your funds from one wallet to another on the wallets page,

441
00:26:02.481 --> 00:26:03.440
which is right here.

442
00:26:03.920 --> 00:26:07.010
And so you can go to the trading page and choose the pair you want to trade.

443
00:26:07.280 --> 00:26:09.710
And then there's an order form and they exchange tab.

444
00:26:09.711 --> 00:26:13.100
You can click exchange of buy and then the order is going to appear if he,

445
00:26:13.160 --> 00:26:17.210
so you've got to have bitcoin in order to buy iota coin.

446
00:26:17.211 --> 00:26:21.650
And if you want to buy bitcoin than I would suggest using Coinbase,
uh,
as,
uh,

447
00:26:21.680 --> 00:26:24.230
the most reliable way to buy them a it required.

448
00:26:24.280 --> 00:26:28.120
You can do this from virtually any country,
I think at this point.
But,
uh,

449
00:26:28.130 --> 00:26:32.360
you link up your credit card or debit card or bank account by Bitcoin and then

450
00:26:32.640 --> 00:26:34.280
just transfer that bitcoin into a wallet.

451
00:26:34.490 --> 00:26:38.380
And then from that wallet by Iota on Bitfinex or,
uh,

452
00:26:38.420 --> 00:26:42.740
there's a couple of exchanges actually,
but I think bitfinex is,
is the one to do.

453
00:26:42.770 --> 00:26:44.870
Please subscribe for more programming videos.

454
00:26:44.871 --> 00:26:48.800
And for now I think I'm going to go buy some iota.
So thanks for watching.

