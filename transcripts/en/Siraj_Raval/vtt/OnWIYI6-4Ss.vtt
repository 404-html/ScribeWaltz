WEBVTT

1
00:00:02.120 --> 00:00:02.953
Okay.

2
00:00:17.940 --> 00:00:18.773
<v 1>Okay.</v>

3
00:00:19.720 --> 00:00:20.790
<v 0>All right,</v>

4
00:00:33.570 --> 00:00:37.760
Raj,
good to see you guys.
Good to see everybody today.

5
00:00:37.790 --> 00:00:42.740
How's everybody doing a,
I'm going to list some names today.

6
00:00:43.560 --> 00:00:47.230
All right.
Shifts against apartheid.

7
00:00:47.660 --> 00:00:51.880
Dean Sumit.
Spencer,
how's everybody doing today?

8
00:00:51.881 --> 00:00:56.180
Yo,
good morning or good night,
wherever you are.

9
00:00:56.440 --> 00:01:01.390
Uh,
so good to see you guys today.
This livestream.

10
00:01:01.520 --> 00:01:05.090
I'm excited to do this livestream today.
We're going to

11
00:01:07.610 --> 00:01:12.610
use open CV to detect a strawberry and an image and it's going to use no deep

12
00:01:13.671 --> 00:01:18.620
learning.
It's gonna use no straight up machine learning.
It's all open CV.
Um,

13
00:01:19.780 --> 00:01:24.140
all right.
So that's what we're going to do and I'm hearing a coworking space,

14
00:01:24.141 --> 00:01:28.250
so that's why the environment is different.
Uh,
so okay.
Okay,

15
00:01:28.251 --> 00:01:31.100
so I'm going to start off with a five minute Q and a and then we're going to get

16
00:01:31.101 --> 00:01:34.850
into the code.
All right,
so here we go.
Five minute Q and A.

17
00:01:37.940 --> 00:01:38.780
Hello.

18
00:01:42.980 --> 00:01:43.813
Hi.

19
00:01:45.740 --> 00:01:49.180
How is everybody doing tensorflow versus I can learn,
uh,

20
00:01:49.530 --> 00:01:53.600
so tensorflow for like 95% of anything you want to do,

21
00:01:53.690 --> 00:01:58.130
but for like the most simple type of machine learning that has nothing to do

22
00:01:58.131 --> 00:02:01.010
with neural networks,
it's like a linear regression,
psychic learn.

23
00:02:01.760 --> 00:02:04.730
There's also TF learn.
But even that leader linear regression,

24
00:02:04.731 --> 00:02:07.740
you just deep a deep neural net to do that.
Um,

25
00:02:09.670 --> 00:02:12.260
they're both the same amount of code,
but like,
you know,

26
00:02:12.280 --> 00:02:14.560
just for like that line of best fit y equals mx plus B.

27
00:02:14.561 --> 00:02:17.320
Like what even is any machine learning so I can learn.

28
00:02:18.250 --> 00:02:19.620
But then for everything else,
tensor flow,

29
00:02:19.660 --> 00:02:21.400
what's your book about decentralized applications?

30
00:02:21.401 --> 00:02:23.230
It's about building apps that are,

31
00:02:23.680 --> 00:02:27.430
that no central entity controls and everybody gets paid for their data.

32
00:02:27.940 --> 00:02:31.570
Do you think Google's Tpu is,
we'll take off.
Absolutely.
Absolutely.

33
00:02:31.571 --> 00:02:36.070
And we're going to see more hardware focused on neural networks in the future.

34
00:02:36.090 --> 00:02:38.350
Google's just ahead of the curve.
All right.

35
00:02:38.380 --> 00:02:42.910
Are you going to show how to set open CV up?
Um,
yeah,
I can do that as well.

36
00:02:43.210 --> 00:02:45.280
Yeah,
I can do that as well.
Are Your models deep?

37
00:02:45.281 --> 00:02:47.740
So deep that I'm not going to say that.

38
00:02:49.370 --> 00:02:52.480
[inaudible] versus care us TF learned for sure.
Um,

39
00:02:53.710 --> 00:02:56.160
which I'll go are we gonna use,
uh,
uh,

40
00:02:56.170 --> 00:02:58.980
for this one we're going to use other several,
uh,
they're,

41
00:02:58.990 --> 00:03:03.350
they're all open CV algos.
Um,
and I'll explain them as we go.
Um,

42
00:03:04.780 --> 00:03:08.110
a rap,
a song in Hindi,
maybe at the end.
Um,

43
00:03:09.780 --> 00:03:12.300
and I'll probably get an English just to be accessible to as many people as

44
00:03:12.301 --> 00:03:13.500
possible.
How,

45
00:03:13.530 --> 00:03:18.530
how are self driving cars going to cope with three Third World Msci roads?

46
00:03:19.260 --> 00:03:20.280
That's a great question.

47
00:03:20.281 --> 00:03:24.780
We need like a one great example would be Hindia like trying to think about self

48
00:03:24.781 --> 00:03:27.570
driving cars in India is like,
this is like never going to happen,

49
00:03:27.571 --> 00:03:30.510
but it has to happen.
And the way it's going to happen is just better,

50
00:03:30.990 --> 00:03:34.200
better out rhythms and better,
better data because that's what we use,
right?

51
00:03:34.201 --> 00:03:38.700
We have a great algorithm and we've got great data here.
Um,
what we see,
um,

52
00:03:40.670 --> 00:03:43.140
what's the best network for image classification?
Supervise,

53
00:03:43.141 --> 00:03:46.160
been trying convolutional neural network,
uh,

54
00:03:48.430 --> 00:03:51.670
image classification.
Uh,
probably,
uh,
well,
yeah,

55
00:03:51.910 --> 00:03:54.790
convolutional nets for anything image related.
How high should we,

56
00:03:54.820 --> 00:03:58.120
should I be for Friday?
Really high.
I've been working with a team on this.

57
00:03:58.600 --> 00:04:01.180
I'm so high up.
I mean we've been working on the weekend,
uh,

58
00:04:01.181 --> 00:04:05.890
to bring what's coming out on Friday.
So really high.
Did I miss anything?
Not yet.

59
00:04:06.150 --> 00:04:09.200
Uh,
he's detection included,
uh,

60
00:04:10.390 --> 00:04:14.740
not face detection.
We're going to detect strawberries.
Uh,
but this,
this applies,

61
00:04:14.770 --> 00:04:18.580
I mean the same kind of logical apply tensorflow performance on mobile versus

62
00:04:18.581 --> 00:04:23.110
open CV.
Um,
uh,
performance wise,

63
00:04:23.350 --> 00:04:28.090
uh,
open CD is probably more performance and not,
it is more performance,

64
00:04:28.430 --> 00:04:31.650
uh,
because you're not using the computation that deep learning requires.

65
00:04:31.660 --> 00:04:34.090
We're not doing deep learning right now.
There's a trade off here.

66
00:04:34.300 --> 00:04:37.600
Will it be realtime opposite?
Object recognition.
I mean,
live video feed,

67
00:04:37.630 --> 00:04:38.950
not real time.
It's going to be an image.

68
00:04:39.010 --> 00:04:43.030
We're going to read it and then write it.
Okay.
Uh,
thanks Brian.
Uh,

69
00:04:43.090 --> 00:04:44.590
one more question and then we'll get started.

70
00:04:48.260 --> 00:04:51.110
Are you going to build a strawberry feature descriptor?
Yes.

71
00:04:51.950 --> 00:04:55.130
Are you going to be using heart cascade know?
Is this still image recognition?

72
00:04:55.131 --> 00:04:57.650
Yes.
Are you a part of the Linux community?
Yes.
Okay.

73
00:04:57.651 --> 00:05:00.710
So that's it for our five minute Q and.
A.
Let's get started.

74
00:05:00.800 --> 00:05:03.830
We're going to use open CV to detects strawberries.
Okay.

75
00:05:03.831 --> 00:05:05.190
It's going to be an image of strawberries.

76
00:05:05.320 --> 00:05:07.130
We're going to use open CV hello to detect it.

77
00:05:07.131 --> 00:05:10.640
It's going to be a hundred lines of code.
We're going to do it in 45 minutes.
Uh,

78
00:05:10.700 --> 00:05:15.130
and uh,
I'll explain things as we go.
There's no deep learning coming out.
Um,

79
00:05:15.470 --> 00:05:19.400
and there's no deep learning that we're doing right now.
So let's get started.

80
00:05:19.401 --> 00:05:22.160
I'll start screen sharing and then we're just going to get right into the code.

81
00:05:22.760 --> 00:05:25.820
All right,
here we go.
Screen share time.

82
00:05:30.780 --> 00:05:35.400
Okay.
I've got two monitors so I can move this one over.
Yay.

83
00:05:35.401 --> 00:05:39.690
Two monitors.
I don't have to switch back and forth,
so that's great.
Okay.

84
00:05:39.810 --> 00:05:41.940
Let me move everything as I need to.

85
00:05:45.010 --> 00:05:48.870
It's sober so I can see what you guys are saying.
All right,

86
00:05:51.630 --> 00:05:55.530
cool.
So let me test that.
Yeah,
everything works.
Okay.

87
00:05:55.800 --> 00:05:58.430
So let's get started with this.
Um,

88
00:05:59.720 --> 00:06:04.340
make myself smaller so we can see me and the code.
Okay.

89
00:06:04.910 --> 00:06:08.930
So here we go.
So we're going to start off by importing our dependencies.

90
00:06:09.050 --> 00:06:09.531
And then,

91
00:06:09.531 --> 00:06:12.710
so this is gonna be about a hundred lines of code and then we're going to get

92
00:06:12.711 --> 00:06:14.420
right into it.
All right?
So

93
00:06:16.090 --> 00:06:18.460
step one is to the important of dependencies.
Okay?

94
00:06:18.520 --> 00:06:21.820
So let's get started with this.

95
00:06:22.300 --> 00:06:27.110
So the first thing we're going to do is import.
Um,
let's see what,

96
00:06:27.111 --> 00:06:30.240
what do we want to import here?
We want to import open TV,
right?

97
00:06:30.270 --> 00:06:34.020
I said I would help you guys install opiod CD,
right?
Okay.
So let me just,

98
00:06:35.300 --> 00:06:38.830
uh,
let me just get this open CV installation.
Uh,

99
00:06:38.840 --> 00:06:43.320
so it depends on what operating system you're using,
but if you're using a

100
00:06:45.570 --> 00:06:47.670
[inaudible],
it's just much easier if you're using Linux,

101
00:06:47.700 --> 00:06:51.690
like open CV is just like made to install on Linux.
You can just use apps get,

102
00:06:51.691 --> 00:06:54.600
and there's like three of these.
If you're using Mac,

103
00:06:54.630 --> 00:06:58.320
I would recommend homebrew to install open CV or,
or Anaconda.
Uh,

104
00:06:58.321 --> 00:07:01.530
and if you're using windows.
So I've actually never installed open,

105
00:07:01.740 --> 00:07:03.570
open CV on windows.
Uh,

106
00:07:03.600 --> 00:07:07.590
but I assume it's going to be pretty easy.

107
00:07:07.591 --> 00:07:11.970
There might even be a binary for it.
Um,
maybe not on this page,
but,
um,

108
00:07:13.970 --> 00:07:18.190
but yeah.
Okay.
So,
uh,
anyway,
let,
okay,

109
00:07:18.260 --> 00:07:18.981
let's just get to the code.

110
00:07:18.981 --> 00:07:22.040
So we're gonna so the first thing we're gonna do is port open CV cause that's

111
00:07:22.100 --> 00:07:24.110
the library we're going to use for computer vision.

112
00:07:24.350 --> 00:07:25.900
And then we're going to import Maxalt.

113
00:07:25.901 --> 00:07:28.390
Lied because Matt thought life is going to help us show our animated.

114
00:07:28.400 --> 00:07:30.140
We're not going to do any actual like graphing.

115
00:07:30.350 --> 00:07:34.490
We're just going to try to show our image.
Okay.
And we're going to call gets PLT.

116
00:07:36.090 --> 00:07:38.860
Um,
so there's that.

117
00:07:39.160 --> 00:07:41.920
And so now we're going to important to apply because we're going to do some

118
00:07:41.921 --> 00:07:43.480
matrix multiplication.
Uh,

119
00:07:43.510 --> 00:07:48.490
pretty much anytime we're doing any kind of computer vision,
machine learning,

120
00:07:49.000 --> 00:07:53.230
deep learning,
we're going to be important.
[inaudible] it's like the library for,

121
00:07:53.260 --> 00:07:55.990
because everything is really just made sure multiplication in the end,
right?

122
00:07:55.991 --> 00:07:58.960
We're just multiplying matron seats.
Okay.
Okay.

123
00:08:00.740 --> 00:08:03.050
So,
uh,
okay.

124
00:08:03.051 --> 00:08:05.780
So we're going to important math in math cause because we're going to use some,

125
00:08:06.080 --> 00:08:10.310
uh,
things that are not related to,
we're going to do some math that no,
hi,

126
00:08:10.320 --> 00:08:13.370
just doesn't have a,
and I'm going to import division for some more math.
Okay.

127
00:08:13.371 --> 00:08:14.660
So that's it for our dependencies.

128
00:08:15.260 --> 00:08:19.640
And we're going to just go ahead and write our high level method and then we'll

129
00:08:19.641 --> 00:08:21.700
write our helper methods.
Okay.
Uh,

130
00:08:21.710 --> 00:08:25.760
so let's go ahead and write our highest level method.
Okay.

131
00:08:25.761 --> 00:08:28.070
And we'll call it find strawberry.
Okay.

132
00:08:28.100 --> 00:08:30.950
So let me show you guys the image that we're going to be using for this.
Okay.

133
00:08:30.951 --> 00:08:35.390
So the image we're going to be using for this is,
uh,
let's see,
it's called,
uh,

134
00:08:35.450 --> 00:08:40.180
it's called very dot jpg.
Okay.
This is it.
And we're going to add,

135
00:08:40.181 --> 00:08:43.820
I'm going to ask you guys to just throw out a strawberry image and then we'll

136
00:08:43.821 --> 00:08:47.730
detect it that as well.
Okay.
So I'll ask you that later and we will see if,

137
00:08:47.800 --> 00:08:50.360
if our code can detect that random one as well.
Okay.

138
00:08:50.600 --> 00:08:53.720
So this is the strawberry and the idea is we want to be able to segment that.

139
00:08:53.721 --> 00:08:55.740
We want to draw an ellipse around it.
Uh,

140
00:08:55.840 --> 00:08:58.950
and then we want to distinguish it from this background.

141
00:08:58.951 --> 00:09:00.940
So I'll show you guys what this looks like.
Um,

142
00:09:01.200 --> 00:09:03.780
and we're going to be able to apply this to many other images,
not just this one.

143
00:09:03.781 --> 00:09:06.550
This is just an easy image.
Okay?
Okay.
So,

144
00:09:06.570 --> 00:09:09.390
and we're going to talk about the map as well.
So this is our first method.

145
00:09:09.391 --> 00:09:12.540
It's our main function and we're gonna use our helper functions of do this.

146
00:09:12.750 --> 00:09:17.250
The first line of code I'm going to write is I'm going to convert our image and

147
00:09:17.260 --> 00:09:22.050
into the color scheme that we want.
Okay?
So that is where it's open to CBS,
uh,

148
00:09:22.170 --> 00:09:23.550
convert color function comes in.

149
00:09:23.820 --> 00:09:26.490
We're going to take our image and our image is that strawberry image.

150
00:09:26.570 --> 00:09:27.930
That could be our input parameter.

151
00:09:28.230 --> 00:09:33.060
We're going to take that image and we're going to apply this
conversion to it.

152
00:09:33.270 --> 00:09:37.890
It's called Color Egr two.
RGB.
No.
I'm going to explain what this is doing,

153
00:09:37.891 --> 00:09:40.160
but I want to ask you guys,
does anybody know,
uh,

154
00:09:40.560 --> 00:09:43.470
what the differences between BGR and RGB?

155
00:09:43.860 --> 00:09:47.040
I'll be actually very impressed because this took me quite a bit of googling to

156
00:09:47.041 --> 00:09:48.960
figure out why we do this in the first place.

157
00:09:49.080 --> 00:09:51.660
I remember when I first started doing this,
so if anybody knows,

158
00:09:51.870 --> 00:09:55.650
let's check the shot that out in the next 10 seconds.
All right,
interesting.

159
00:09:55.680 --> 00:10:00.420
The two color Bgr to car.
Cheapy.
Okay.
So anybody,

160
00:10:02.870 --> 00:10:03.350
<v 1>okay.</v>

161
00:10:03.350 --> 00:10:07.540
<v 0>Going once,
going twice
and,
okay.</v>

162
00:10:07.541 --> 00:10:12.160
So what happens is that,
so yes,
order it is one of them.
Is that yes.
Blue,
green,

163
00:10:12.161 --> 00:10:17.020
red and readability.
Exactly.
The channels or reverse,
right.
So,
right.

164
00:10:17.021 --> 00:10:21.790
So RGB stands for,
uh,
so okay,
so RGB is red,
green,

165
00:10:21.791 --> 00:10:24.670
blue and PDR is,

166
00:10:25.510 --> 00:10:30.160
BGR is um,
blue,
green,
red.
So what's the difference here?

167
00:10:30.470 --> 00:10:32.260
You said it's how it's,

168
00:10:32.261 --> 00:10:36.530
how the colors would store the memory Schema of the colors,
right.
And,
and,

169
00:10:36.800 --> 00:10:41.060
and the ordering,
it's all about the ordering.
And when,
whenever we are,

170
00:10:41.070 --> 00:10:44.500
we're applying some sort of transformation to an image or whenever we're playing

171
00:10:44.501 --> 00:10:46.630
some kind of,
we're trying to morph an image in some way.

172
00:10:46.900 --> 00:10:50.800
The order of the colors matters depending on what's what technique we're using.

173
00:10:50.980 --> 00:10:55.750
So it depends.
So for the techniques we're about to use,
um,
RGB,
RGB,

174
00:10:55.751 --> 00:10:58.710
the RGB color scheme is better than BGR.
And I'm like,

175
00:10:58.870 --> 00:11:03.100
I'm going to explain why this is,
but it's basically the order of,

176
00:11:03.460 --> 00:11:08.150
of the colors in memory.
So greed,
so like,
uh,
in,
uh,

177
00:11:08.380 --> 00:11:12.010
so,
uh,
blue occupies the least significant area.

178
00:11:12.011 --> 00:11:16.850
So a bites in a 32 or 24 bits a format.
Uh,
so it's,

179
00:11:16.851 --> 00:11:21.130
it's just about bites and memory and ordering.
Okay.
And so that,
so that's that.

180
00:11:21.131 --> 00:11:22.690
So that's our first step.
We want to convert,

181
00:11:23.050 --> 00:11:27.200
convert to the correct colored scheme after our first day.
Once a young guy,

182
00:11:27.201 --> 00:11:29.200
it's the same image.
It doesn't look any different.

183
00:11:29.201 --> 00:11:32.020
It's just not the college scene and how it's ordered in memory is different.

184
00:11:32.500 --> 00:11:34.390
Okay.
So that's our first step.
Um,

185
00:11:34.750 --> 00:11:37.920
and so now that we've converted to the correct color scheme,
uh,
we're gonna,

186
00:11:37.960 --> 00:11:41.530
we're gonna make sure that it's the correct sides.
So we'll say,
okay,

187
00:11:41.890 --> 00:11:43.630
we want to get the size of this.
Okay.

188
00:11:43.631 --> 00:11:46.090
So we're going to say we're going to use python builtin Max function.

189
00:11:46.420 --> 00:11:49.150
Then you take that image and get a shape.
Okay?

190
00:11:49.300 --> 00:11:53.840
So that the shape of that image is,
uh,
you know,
the signs of it,

191
00:11:53.960 --> 00:11:56.400
but window songs and we want it to be,
um,

192
00:11:58.510 --> 00:12:02.050
we want it to be,
to write a science.
So to do that,

193
00:12:02.140 --> 00:12:06.040
we're going to get the,
we're going to scale it.
So we're going to say,
okay,

194
00:12:06.060 --> 00:12:09.700
let's kick the scale of it,
cause we're going to recite it in a second.

195
00:12:09.701 --> 00:12:12.840
So we won't say out of 700 kickback,
uh,

196
00:12:13.120 --> 00:12:16.180
divide what we just got by 700.
Why are we doing this?

197
00:12:16.181 --> 00:12:18.550
Because the maximum window size,
uh,

198
00:12:18.970 --> 00:12:22.840
that we're going to use is 700 by 660 pixels.
So we want to make,

199
00:12:22.841 --> 00:12:27.220
are we want to make our,
uh,
a strawberry that you fit in that image.

200
00:12:27.221 --> 00:12:30.610
So it's gonna be 700 divided by what it already is.
So it's smaller than that.

201
00:12:30.640 --> 00:12:32.800
Okay.
So we're going to scale it like that.

202
00:12:32.920 --> 00:12:36.850
And then finally we're going to resize it.
Okay.
So all three lines of code here,

203
00:12:36.880 --> 00:12:41.530
or to reset the r two s,
uh,
sale our image properly.
Okay.

204
00:12:42.130 --> 00:12:46.060
So this is step,
let me just say step one and then step two,
write step one.

205
00:12:46.061 --> 00:12:50.440
Step two.
That's step one step.
Okay.
So,

206
00:12:52.540 --> 00:12:57.220
um,
so we're going to use open CV,
very handy,
resize function for this.

207
00:12:57.550 --> 00:13:01.740
Okay.
Um,
so we're going to pick out an image and then we're going to say,
um,

208
00:13:02.730 --> 00:13:06.090
uh,
so this Allie is going to be none of that.
This is,
uh,
this isn't,

209
00:13:06.091 --> 00:13:09.240
this is an optional value,
which we're not going to deal with right now.
But,
um,

210
00:13:09.420 --> 00:13:13.110
so,
so the s but we want to make the width and the height the same scale.

211
00:13:13.111 --> 00:13:15.600
So it's going to be a square instead of a rectangle.
So what's,

212
00:13:15.630 --> 00:13:17.760
so what's the length of the x?
So what's the link?

213
00:13:18.000 --> 00:13:19.470
So we're going to say that's going to be scale.

214
00:13:19.740 --> 00:13:23.280
And then whatever the 700 divided by that,
uh,
Max mentioned is,

215
00:13:23.430 --> 00:13:27.750
and the f y is going to be scale,
right?
So it's,
uh,
it's the same with the square,

216
00:13:27.751 --> 00:13:29.580
the same length,
same what?
Okay.

217
00:13:29.770 --> 00:13:34.280
So we've scaled our image and it's square and it's,
it's,
it's ready to be,
uh,

218
00:13:34.800 --> 00:13:39.170
uh,
it's ready to be a,
uh,
we're going to apply,

219
00:13:39.171 --> 00:13:41.270
are open to be techniques to it.
Okay?
So that's step two.

220
00:13:41.630 --> 00:13:44.810
And so now step three is we want to clean aren't image.

221
00:13:44.840 --> 00:13:47.870
So what do I mean by that?
Or what do I mean by that?
So let's say step,
grievous,

222
00:13:47.900 --> 00:13:52.760
clean aren't image,
okay?
So I'm going to say,
uh,

223
00:13:52.820 --> 00:13:56.510
let's blur argument's,
right?
So I'm going to say image blur equals,

224
00:13:56.511 --> 00:14:00.620
and I'm going to use open to use function called gals.
Gaussian blur.

225
00:14:01.230 --> 00:14:01.950
What is this?

226
00:14:01.950 --> 00:14:06.200
So gutsy employer is whenever we want to eliminate noise from an image,

227
00:14:06.230 --> 00:14:09.560
we want to,
we want to smooth the colors.
So like,
think about a strawberry,
right?

228
00:14:09.560 --> 00:14:13.160
Strawberry can have,
uh,
you know,
it's got those,

229
00:14:13.850 --> 00:14:16.160
what are those little yellow dots on the strawberry?

230
00:14:16.161 --> 00:14:18.820
Like the kind of seed like things,
whatever they are.
We want to,

231
00:14:18.830 --> 00:14:22.850
we want to remove that cause we just want to see the Upshur clean read image.

232
00:14:23.060 --> 00:14:26.690
And sometimes when we take an image and we convert it to a different color

233
00:14:26.691 --> 00:14:29.810
scheme,
it's got like little black dots in it.
We don't want that.

234
00:14:29.840 --> 00:14:33.800
We want to have a clean,
smooth color across the image so we can just say boom,

235
00:14:33.801 --> 00:14:36.230
this is what it is.
So that's what,
that's what,
that's what this is doing.

236
00:14:36.260 --> 00:14:38.060
That's what this is the Golf Sian Blur Desk.

237
00:14:38.270 --> 00:14:42.260
It takes the color scheme across the Gospel in distribution and it and it,

238
00:14:42.270 --> 00:14:46.040
and it smooths the image across the distribution.
Um,
so,

239
00:14:48.070 --> 00:14:51.590
uh,
you're risking detention to watch a stream live spark chicken.

240
00:14:52.340 --> 00:14:56.420
Thank you so much.
I appreciate it.
All right.
Um,
so,

241
00:14:57.350 --> 00:15:02.210
but we're going to,
we're not applied for an image and we're going to,
uh,
uh,

242
00:15:02.270 --> 00:15:04.430
so that's the input image and we want the kernel side,

243
00:15:04.431 --> 00:15:05.870
what the kernel size is going to be.
Well,

244
00:15:05.871 --> 00:15:08.960
it's going to be seven by seven because you know,
700 by 700.

245
00:15:09.800 --> 00:15:13.310
And so like with the size of the image and then,
uh,
how much do we want?

246
00:15:13.510 --> 00:15:17.300
And then the last one is the left side is going to be zero,
which is,
uh,
how,

247
00:15:17.390 --> 00:15:21.250
how much,
uh,
we want to filter it,
which,
uh,

248
00:15:21.350 --> 00:15:24.230
we don't really need right now because we've,

249
00:15:24.320 --> 00:15:27.620
the blurred like by default already does that.
Um,
so the last,

250
00:15:27.770 --> 00:15:30.920
the last time we're just going to leave Europe because that's an optional value.

251
00:15:30.950 --> 00:15:33.140
We don't have to deal with that.
Um,
so we've,

252
00:15:33.190 --> 00:15:35.660
so we've got our image and we blurred it,

253
00:15:35.690 --> 00:15:37.760
but there's one more thing we have to do.

254
00:15:39.410 --> 00:15:42.650
We have to convert the color scheme.
Get again,
why is that?

255
00:15:42.830 --> 00:15:46.090
We're going to convert it to what's called HSV format.
Okay.
Um,

256
00:15:48.520 --> 00:15:51.330
all right.
So,
mmm.

257
00:15:55.080 --> 00:15:57.480
Okay.
So we're going to convert it,
the HSC.
And

258
00:16:00.060 --> 00:16:01.890
uh,
so we're going to use a convert color again,

259
00:16:01.891 --> 00:16:05.040
and we're going to take that blurred image and then we're going to add,

260
00:16:05.340 --> 00:16:07.110
so then we're going to have the

261
00:16:08.690 --> 00:16:12.390
CV has a bunch of these like conversion,
uh,
attributes.

262
00:16:12.391 --> 00:16:14.970
We're going to say take the RGP and now convert the HSP.

263
00:16:15.210 --> 00:16:18.330
So we converted it to Rgb so that we could scale it.

264
00:16:18.480 --> 00:16:22.540
And now we're going to convert it to another format called HSD.
Uh,
so that,
uh,

265
00:16:22.570 --> 00:16:26.790
so once it's blurred,
because now we're going to filter by the color.
Okay.

266
00:16:26.791 --> 00:16:30.300
So what is HST?
So HSD format is a different color scheme,

267
00:16:30.510 --> 00:16:34.190
but basically it separates two things.
It separates the,
uh,

268
00:16:35.130 --> 00:16:39.480
the Luma or the image intensity from the chroma or the color information.

269
00:16:39.840 --> 00:16:44.520
Okay.
Um,
so we're separating the color from the,
uh,

270
00:16:45.300 --> 00:16:49.140
from the,
from the brightness of it.
So we just want to focus on color.
Right?

271
00:16:49.141 --> 00:16:52.380
So that's one per segments to did these things.
RGB and Bgr,

272
00:16:52.440 --> 00:16:54.590
they don't really separate the,
the,
the,

273
00:16:54.720 --> 00:16:59.220
the Luma or intense color intensity from the color itself.
It's just one,

274
00:16:59.770 --> 00:17:02.040
it's just one thing.
So that's what HSC is going to help us with.

275
00:17:02.250 --> 00:17:04.650
So we're going to separate these two and we're going to filter it based on that.

276
00:17:04.651 --> 00:17:09.210
Okay.
Yeah,
exactly.
Two saturation down.

277
00:17:09.600 --> 00:17:13.800
Okay.
So,
um,
so that's what we're gonna do for that.
Uh,
and

278
00:17:15.570 --> 00:17:19.220
now that we've converted it to HSV,
um,

279
00:17:19.860 --> 00:17:23.550
we're going to do what we do best.
He would.

280
00:17:23.840 --> 00:17:26.040
Agent's fee is best for which is to

281
00:17:27.710 --> 00:17:32.040
define a,
we're defining a,
what are we defining here?

282
00:17:32.041 --> 00:17:36.060
We're defining our filters,
defined our filters.
Okay.

283
00:17:36.210 --> 00:17:37.680
So define our filters.

284
00:17:39.240 --> 00:17:40.073
<v 2>MMM.</v>

285
00:17:41.210 --> 00:17:45.020
<v 0>Oh,
no worries,
Paulo.
Thanks for,
thanks for saying that.
Okay.
So,
uh,</v>

286
00:17:45.050 --> 00:17:48.530
we're going to filter by the color so that we're going to filter by the color

287
00:17:48.560 --> 00:17:52.000
filter by the color.
That's the first one.
We got to fill so many color.
Um,

288
00:17:52.080 --> 00:17:55.330
so called,
remember color is separate from the brightness.

289
00:17:55.540 --> 00:17:56.890
Color is separate from the brightness.

290
00:17:56.891 --> 00:18:00.560
The intensity of the color is separate from the intensity of the brightness.
And,

291
00:18:00.700 --> 00:18:04.300
and so we wanted the tech strawberries get a certain color range,
right?

292
00:18:04.420 --> 00:18:07.330
So there's a certain redness have a strawberry.
If it's,

293
00:18:07.360 --> 00:18:10.690
if it's more red than that,
then it's not,
it's less for it than that,

294
00:18:10.990 --> 00:18:13.690
then it's not as structured.
But it's in a,
in a particular range.

295
00:18:13.930 --> 00:18:17.140
And generally for this,
we would get some check what this is.
So I've got,

296
00:18:17.200 --> 00:18:17.710
I've gotten this,

297
00:18:17.710 --> 00:18:21.670
it looks a minimum amount of red and this is where we're using num Pi because

298
00:18:21.790 --> 00:18:25.360
remember colors,
uh,
computers we colored as uh,

299
00:18:29.340 --> 00:18:30.173
<v 2>thank you.
Want it?</v>

300
00:18:31.480 --> 00:18:34.970
<v 0>Okay.
So,
so we're going to use none pies for ray function to,
to do this,
right.</v>

301
00:18:34.971 --> 00:18:37.640
So remember colors or like,
you know,
like if,
if,
if we,

302
00:18:37.641 --> 00:18:41.070
if you guys do CSS before for anything,
right to 55,
55,

303
00:18:41.640 --> 00:18:42.710
these are hex values.

304
00:18:42.860 --> 00:18:46.300
And so we're gonna use none pies or right function to define these hex values.

305
00:18:46.550 --> 00:18:49.250
They're going to say,
okay,
so this is the minimum minimum red value.

306
00:18:49.450 --> 00:18:53.330
It's cause it's,
it won't say zero.
108.
Okay.
Uh,
and then,

307
00:18:54.000 --> 00:18:54.450
<v 1>okay,</v>

308
00:18:54.450 --> 00:18:55.680
<v 0>that's the minimum amount of redness.</v>

309
00:18:55.690 --> 00:18:58.950
Then the Max amount of redness is going to be,
again,
another nub higher rate.

310
00:18:58.951 --> 00:19:01.970
Am I going to define,
so this,
these are bounding colors.

311
00:19:03.220 --> 00:19:06.170
So this is the maximum brightness that we want.
So we'll get,

312
00:19:06.180 --> 00:19:10.290
we'll say it's 10 56 and then if it's six that is read as we want to get.

313
00:19:10.291 --> 00:19:12.180
So anything in that range of redness?

314
00:19:16.660 --> 00:19:21.490
Um,
no,
I did get a new on shutout.
Uh,
yeah,
I mean it's,
it's all good.
Yeah,

315
00:19:21.491 --> 00:19:25.900
I mean it's not a big deal.
I mean,
I,
I'm,
I'm gonna I'm going to hit eventually,

316
00:19:25.901 --> 00:19:28.780
you know,
do more stuff with him and stuff.
No,

317
00:19:28.781 --> 00:19:33.460
but I was just speaking with Subash and third
recently anyway.
Okay.
So,

318
00:19:33.490 --> 00:19:36.340
um,
uh,
okay.
So,
okay,

319
00:19:36.341 --> 00:19:39.220
so we're filtering by color and now we're going to create a layer with this.

320
00:19:39.221 --> 00:19:42.970
Okay.
Okay.
So we're going to create what's called a a mask mask.

321
00:19:42.971 --> 00:19:44.020
We could call it a mask.

322
00:19:44.021 --> 00:19:46.600
Would you call it a filter masking filter or about the same thing?

323
00:19:46.601 --> 00:19:49.510
So we'll call it a mask.
And this mask is like,
um,

324
00:19:49.840 --> 00:19:53.650
if we were to take an image and we just focused on one color and we just

325
00:19:53.651 --> 00:19:57.010
blackout or blur everything else,
like we don't care about everything else.
Okay.

326
00:19:57.011 --> 00:20:00.580
So that's,
that's the mass and it's just applying by the color value.
Okay.

327
00:20:02.060 --> 00:20:02.893
<v 2>MMM.</v>

328
00:20:05.580 --> 00:20:08.620
<v 0>Uh,
okay,
so this is,
so that's a mask</v>

329
00:20:10.780 --> 00:20:14.440
in range.
Uh,
so we're gonna say,
okay,

330
00:20:14.441 --> 00:20:16.510
so what does that value would just fine image blur.

331
00:20:16.630 --> 00:20:21.280
It's just the minaret and then Max Richter.
Okay.
So minaret and metric.
Uh,

332
00:20:21.300 --> 00:20:23.970
so those are our values weren't image blur,
right?
So that,

333
00:20:24.070 --> 00:20:27.810
so that's our first and we want one more mask and that's why we converted the

334
00:20:27.820 --> 00:20:31.510
HSP because we're filtering by not just color but by intensity.
Okay.

335
00:20:33.420 --> 00:20:38.140
Um,
I did a,
I did a video for open AI,
which is Ilan squad,

336
00:20:38.170 --> 00:20:42.010
AI squad.
And Ilan watched it and liked it.
And so like now,
you know,

337
00:20:42.040 --> 00:20:45.680
he knows about,
you know,
what's good and know with me and stuff.
So,
okay.
Um,

338
00:20:46.210 --> 00:20:51.200
so minimum.
Uh,
so okay,
so we're going to focus on the brightness now,
right?

339
00:20:51.310 --> 00:20:53.260
So this is why it can radiate Jesse.
So minimum read.

340
00:20:53.470 --> 00:20:57.010
I've got to focus on the code here.
So we're going to say minimum read too,
right?

341
00:20:57.011 --> 00:20:59.350
Cause we already find it one called minimum written.
And again,

342
00:20:59.351 --> 00:21:03.520
we're going to do another array.
So this is going to be one 7,100 and then,

343
00:21:03.580 --> 00:21:05.680
and this is focused on the brightness.
Okay?

344
00:21:05.920 --> 00:21:10.170
So we have a minimum value in a max value and Max read to you wholesome and

345
00:21:10.180 --> 00:21:15.070
quite dark gray.
And what their Max brightness we wants to 56 six.

346
00:21:15.290 --> 00:21:19.270
Okay.
That's our,
that's our Max value made sure I've got my comments there.
Okay,

347
00:21:19.271 --> 00:21:22.420
cool.
So let's see.

348
00:21:22.580 --> 00:21:26.050
This is filter five rightness.
Okay.

349
00:21:29.130 --> 00:21:31.480
Hunter by Brendan's.
Okay.
So that's that.

350
00:21:31.750 --> 00:21:33.430
And so now we're going to clean our second Max.

351
00:21:33.431 --> 00:21:35.980
We have two masters to make and we're going to click on a second master's going

352
00:21:35.981 --> 00:21:36.860
to just focus on the brain.

353
00:21:37.240 --> 00:21:40.600
So we're going to say what my CT has this in writing function that we've,

354
00:21:40.630 --> 00:21:43.210
we can use for colors for,
for Hugh,
for at Saturation,

355
00:21:43.240 --> 00:21:47.320
for buck of ranges that we wanted to find.
Okay.
And we'll say image,

356
00:21:47.500 --> 00:21:51.860
we're HSV.
That's this,
the same dimension.
Uh,

357
00:21:51.910 --> 00:21:56.550
and this time we're going to bound it by,
uh,
our,
our uh,

358
00:21:56.740 --> 00:22:00.850
call if our brightness variables.
Okay.

359
00:22:01.000 --> 00:22:02.230
So now we have our two masks.

360
00:22:02.231 --> 00:22:05.260
Does anybody know what we're going to do with these two masks?
Uh,

361
00:22:05.261 --> 00:22:07.980
I'll be impressed who,
who knows?
Okay.

362
00:22:08.470 --> 00:22:11.900
So shout out if you know what we're going to,
um,

363
00:22:13.340 --> 00:22:13.660
uh,

364
00:22:13.660 --> 00:22:18.660
do what these two maps take these two masks and we're going to,

365
00:22:19.780 --> 00:22:21.640
we're going to do something with them.

366
00:22:27.160 --> 00:22:27.550
Okay?

367
00:22:27.550 --> 00:22:30.990
So what we're going to do with the suit and and them note mass close Nastigal

368
00:22:31.000 --> 00:22:35.170
double mass spark chicken.
Exactly.
We are going to do double math,
double rainbow,

369
00:22:35.171 --> 00:22:38.650
double math.
We're going to combine our mess.
We're going to combine both of them.

370
00:22:38.830 --> 00:22:43.180
Okay?
So we'll say mask equals math,
one plus next to it.
That's it.

371
00:22:43.360 --> 00:22:48.340
We've combined our mass.
How easy was that?
Okay,
so we've,

372
00:22:48.400 --> 00:22:52.270
we've done that for a mask and now we're going to,
um,

373
00:22:53.170 --> 00:22:57.100
we've combined our masks and now we're going to,
uh,
do some,
uh,

374
00:22:57.850 --> 00:23:01.240
step four.
And then step five is a,

375
00:23:01.270 --> 00:23:06.070
we're going to segment segment,
step by is segmentation.

376
00:23:06.071 --> 00:23:09.010
We're going to segment the image.
What does that mean?
Step five is segmentation.

377
00:23:09.250 --> 00:23:09.730
We're going to,

378
00:23:09.730 --> 00:23:13.630
we're going to use those maps to separate the strawberry from everything else.

379
00:23:13.810 --> 00:23:15.700
Okay?
That's step box segmentation.

380
00:23:15.940 --> 00:23:20.410
So we'll call this a colonel and let me explain that in a second.
But so,

381
00:23:20.680 --> 00:23:23.920
okay,
so a colonel is,
we're going to use open cvs,

382
00:23:23.980 --> 00:23:28.780
get structuring element method,
and let me define what that is.

383
00:23:28.810 --> 00:23:32.620
And you write this stuff more lips

384
00:23:35.560 --> 00:23:39.840
and we'll say this is going to be 15 by 15.
Uh,
okay.

385
00:23:40.180 --> 00:23:44.990
So,
um,
we want to circle our strawberries.
So we'll circle it with an elixir,

386
00:23:45.080 --> 00:23:47.300
which is like a circle,
but you know,

387
00:23:47.330 --> 00:23:51.680
not as not a perfect circle with s with the shape of 15 by 15.

388
00:23:52.100 --> 00:23:52.491
And that's,

389
00:23:52.491 --> 00:23:55.280
that's why we use it the more polyps function because we're going to get that

390
00:23:55.281 --> 00:23:58.700
structuring elements.
Basically colonel is going to have an Alexa.
Okay.

391
00:23:58.760 --> 00:24:02.430
And we wanna,
we wanna make that ellipse fit around our strawberry.

392
00:24:02.431 --> 00:24:05.070
So we will still,
we'll segment.
All right.
Um,

393
00:24:08.070 --> 00:24:11.660
okay,
so we've got segmentation and uh,

394
00:24:12.120 --> 00:24:16.650
now we're going to say,
now we're going to do some what's called morphology.

395
00:24:16.651 --> 00:24:21.500
Let me explain that in a second.
Massa clothes more fall Gi

396
00:24:23.250 --> 00:24:25.710
exam X.
We'll take our mask,

397
00:24:25.890 --> 00:24:30.890
we'll take our more clothes and then our colonel.

398
00:24:32.060 --> 00:24:35.640
Okay.
And then I'm colonel.
Um,
okay,

399
00:24:35.641 --> 00:24:38.460
so what is this before I find it somewhere right about one more line.

400
00:24:38.490 --> 00:24:41.040
But this one's gonna be called mass clean because these are both related to each

401
00:24:41.041 --> 00:24:44.790
other.
So let me write this last one out.

402
00:24:45.990 --> 00:24:47.120
Morphology x,

403
00:24:47.190 --> 00:24:51.330
and this is a lowercase x gotta be perfect about the syntax here.

404
00:24:51.331 --> 00:24:54.840
Mass closed CD to more open.

405
00:24:55.110 --> 00:24:58.530
And then one more thing,
the colonel.
Okay.
So what is,
what am I doing here?

406
00:24:58.710 --> 00:25:02.400
So we want to work the image.
So,
uh,

407
00:25:03.210 --> 00:25:07.740
we wouldn't add that lips around the strawberry.
So,
uh,
we're going to first,

408
00:25:07.860 --> 00:25:11.820
uh,
perform,
uh,
closing operation.
What does that mean?
Uh,
uh,

409
00:25:11.821 --> 00:25:16.190
closing operation is dilation followed by erosion.
It's,
it's,

410
00:25:16.210 --> 00:25:19.740
it's a process called dilation followed by erosion.
What is this?

411
00:25:19.890 --> 00:25:21.850
It's useful for closing small holes,

412
00:25:22.290 --> 00:25:25.350
small holes inside the foreground of objects,

413
00:25:25.530 --> 00:25:30.200
like small black points in the objects.
It helps further refine that,
um,

414
00:25:30.380 --> 00:25:35.010
that,
that,
that smoothness,
it helps.
It's like another,
it's like an,

415
00:25:35.310 --> 00:25:38.850
it's like another safety check to make sure that it's a smooth,
uh,
in this case,

416
00:25:38.851 --> 00:25:42.810
red lake.
And then,
uh,
uh,
and then mask.

417
00:25:42.840 --> 00:25:46.170
And then more open is taking is,
is the opposite.

418
00:25:46.171 --> 00:25:49.200
It's erosion followed by dilation.
So the first one is dilation,

419
00:25:49.201 --> 00:25:53.430
followed by erosion.
And the next one is erosion,
followed by dilation.
Okay.

420
00:25:55.090 --> 00:25:57.330
Um,
yeah,
definitely.
Uh,

421
00:25:57.370 --> 00:26:01.720
thanks Sam for helping me answer the questions as well.
Uh,
okay.

422
00:26:01.721 --> 00:26:04.960
And so it's useful for removing doors.
So,
uh,
both,
uh,

423
00:26:05.050 --> 00:26:09.490
it's not that they reversed each other.
They both add to each other.
Okay.
So,
um,

424
00:26:09.491 --> 00:26:13.120
so we got that.
So now we're going to find the biggest strawberry.
So sex,

425
00:26:13.121 --> 00:26:16.390
sex is a client.

426
00:26:16.450 --> 00:26:18.160
The biggest strawberry we don't want,

427
00:26:18.190 --> 00:26:20.170
we don't just want to detect all strawberries.

428
00:26:20.320 --> 00:26:22.660
We want to find the biggest strawberry.
So if we have a bunch of them,

429
00:26:22.720 --> 00:26:25.000
we only want to circle the biggest ones.
Okay.

430
00:26:25.001 --> 00:26:29.740
So we'll say what's the big strawberry concert and contour is the shape.

431
00:26:30.130 --> 00:26:32.890
Okay.
So we're going to get that.
And so,
and so we want to get,

432
00:26:33.040 --> 00:26:34.270
and we're going to get the masters as well.

433
00:26:34.450 --> 00:26:36.340
So this is the method that we're going to.
Um,

434
00:26:39.800 --> 00:26:43.800
okay.
So we're going to say,
uh,
and we're write this method out,

435
00:26:43.801 --> 00:26:45.860
but it's going to be a fine,
the biggest con for the,

436
00:26:45.960 --> 00:26:48.930
and that is find the biggest conflicts.
So,
so what are,

437
00:26:48.960 --> 00:26:51.140
what our album's going to do is it's not going to differentiate,

438
00:26:51.150 --> 00:26:53.960
just going to say,
oh,
strawberry to,
oh,
it's got very drawn to Lipo,

439
00:26:53.970 --> 00:26:54.900
strawberry draw an ellipse,

440
00:26:55.110 --> 00:26:58.110
and then this method find the biggest contour is going to find the biggest.

441
00:26:58.111 --> 00:27:00.780
The lips can say,
that's the strawberry we want out of all of that.

442
00:27:01.140 --> 00:27:02.700
So that's what this is going to do it.
And we don't,

443
00:27:02.760 --> 00:27:04.620
we're going to write that in a second.
Um,

444
00:27:05.760 --> 00:27:10.350
and we're going to use a mask clean parameter,
which,
uh,
to,
to,
to do that.
Okay.

445
00:27:10.351 --> 00:27:13.640
So that's going to find the biggest strawberry.
Uh,
and now we're going to,
um,

446
00:27:14.430 --> 00:27:16.290
step seven is to overlay.

447
00:27:18.550 --> 00:27:19.383
<v 2>MMM.</v>

448
00:27:21.000 --> 00:27:25.570
<v 0>We're going to do that,
uh,
to do this.
And Oh yeah.</v>

449
00:27:25.590 --> 00:27:28.650
Short History of Columbia wrote a book,
traveled around the world for a year,

450
00:27:29.310 --> 00:27:31.560
went to San Francisco,
work at Tulio,

451
00:27:31.561 --> 00:27:36.000
has built for educator best technical writing team on the planet.
Uh,
works,

452
00:27:36.001 --> 00:27:36.211
you know,

453
00:27:36.211 --> 00:27:39.040
some contract work here and their mobile development did a lot of independent

454
00:27:39.060 --> 00:27:43.050
research,
um,
with a couple of,
um,
uh,

455
00:27:43.140 --> 00:27:46.620
distributed systems research than some AI researchers that I just knew,
you know,

456
00:27:46.621 --> 00:27:51.210
it's just like,
you know,
moving around and figuring things out.
Uh,
and by the way,

457
00:27:51.211 --> 00:27:53.790
these centralized applications was the best selling software engineering book on

458
00:27:53.791 --> 00:27:57.300
Amazon,
uh,
20,
2016.
So,
but I'm not,

459
00:27:57.301 --> 00:28:00.410
I'm not like super happy with it even though it was because it wasn't my best

460
00:28:00.411 --> 00:28:02.130
work and the reviews weren't like as good as I want.

461
00:28:02.160 --> 00:28:03.680
I want like perfect by star use.

462
00:28:03.810 --> 00:28:06.570
So I'm going to write another AI book in the future.
Probably this here,

463
00:28:06.571 --> 00:28:09.840
I'll write another book and I wrote that book before I had any following.

464
00:28:09.870 --> 00:28:12.940
And so now it's going to be awesome to write a book,
uh,

465
00:28:13.080 --> 00:28:15.390
but I've got to make time for it anyway to get back to the subject.

466
00:28:15.780 --> 00:28:16.613
<v 2>MMM.</v>

467
00:28:17.910 --> 00:28:21.430
<v 0>Uh,
okay,
so,
so,
so,</v>

468
00:28:21.550 --> 00:28:24.160
so step seven is to overlay the Max that we created.

469
00:28:25.240 --> 00:28:28.990
We created on the image that's the next,
that sets of it.
So when we look,
say,

470
00:28:29.020 --> 00:28:32.530
overlay.
So we've created these masks for color,
for brightness,

471
00:28:32.531 --> 00:28:34.200
and we're going to overlay them on her image.

472
00:28:34.450 --> 00:28:35.710
And we're going to write this function,
right?

473
00:28:35.711 --> 00:28:39.250
So we're going to say mass clean and anemic.
Okay.
Um,

474
00:28:39.400 --> 00:28:42.640
and so now we're going to find the be a strawberry.

475
00:28:42.641 --> 00:28:47.410
And now a step eight is to circle the biggest one cause we differentiated which

476
00:28:47.411 --> 00:28:51.580
one it is.
And then we're going to circle the biggest,
uh,
strawberries.
Okay.

477
00:28:53.450 --> 00:28:57.560
Circle the biggest strawberry,
um,
to do this.
And,

478
00:28:58.700 --> 00:28:59.533
um,

479
00:29:02.120 --> 00:29:02.953
<v 2>uh,</v>

480
00:29:03.400 --> 00:29:08.020
<v 0>parents born in India.
I was born in Houston,
Texas.
Um,
but I've been to India.</v>

481
00:29:08.310 --> 00:29:12.230
It was a lot of fun.
Uh,
fun is a,
yeah.

482
00:29:12.540 --> 00:29:16.840
And it's more like a really hard adventure to travel through India.

483
00:29:16.880 --> 00:29:20.980
Like I went to like see where my parents are from and see what my culture was

484
00:29:20.981 --> 00:29:25.280
like.
And it's a beautiful experience.
And it was,
uh,
India is,
is,

485
00:29:25.300 --> 00:29:29.880
is an adventure to,
it's,
it's,
it's anyways,
uh,

486
00:29:29.980 --> 00:29:34.610
I really like Mumbai though.
Great City.
Okay.
Um,
uh,

487
00:29:34.770 --> 00:29:36.850
someone was at doing,
so I'm going to circle the biggest strawberry.
It's,

488
00:29:36.851 --> 00:29:40.530
I'll say circled circle,
come tour.
Um,

489
00:29:40.600 --> 00:29:44.100
and we'll Overlake big strawberry.

490
00:29:48.770 --> 00:29:49.603
Cool.
Cool.

491
00:29:52.360 --> 00:29:56.890
A big strawberry contour.
Uh,

492
00:29:56.950 --> 00:30:00.030
and then we circled it.
Uh,

493
00:30:00.070 --> 00:30:03.600
we'll show it now and we'll write the show function to show it,
uh,

494
00:30:03.610 --> 00:30:06.530
and that the show functions going to show are circled,
essential,

495
00:30:06.540 --> 00:30:09.910
more final result.
And the last step,
step nine,

496
00:30:10.540 --> 00:30:15.260
last step is to convert our image back to the original convert,

497
00:30:15.340 --> 00:30:20.110
convert back to provisional.
Oh,
excuse me.

498
00:30:20.560 --> 00:30:25.090
Thanks Robert.
Thanks for [inaudible].
Uh,
okay.
So,

499
00:30:26.580 --> 00:30:30.170
so converted act to,
um,

500
00:30:30.760 --> 00:30:35.760
our original color scheme to be two colored circles two,

501
00:30:35.860 --> 00:30:40.540
and now it's opposite method,
RGB to BPO.
Okay.

502
00:30:40.810 --> 00:30:44.170
That's our last step and we convert it back and we'll,
we're just returned that,

503
00:30:44.620 --> 00:30:47.320
uh,
reconverted value.
Okay.
So that's our main method.

504
00:30:47.650 --> 00:30:49.090
Now we have to write our helper methods.
Okay.

505
00:30:49.091 --> 00:30:52.120
We've written our main method and now let's write our helper methods.
All right.

506
00:30:52.270 --> 00:30:56.440
So,
um,

507
00:30:57.870 --> 00:31:00.390
so that's our main method.

508
00:31:00.391 --> 00:31:03.480
Now let's write her helper methods and I'll sort of at the very,
very top.
Okay.

509
00:31:03.481 --> 00:31:07.380
So,
um,
the first thing I'm going to do is define the color green with,

510
00:31:07.381 --> 00:31:09.390
I'm going to use it a second and I'll define it as a global.

511
00:31:09.570 --> 00:31:14.370
So we'll say zero to 55,
zero and that's just defines green.
Okay.
Um,

512
00:31:15.030 --> 00:31:19.800
I'm 25 years old.
So,
um,
the first thing we're doing is right that show method,

513
00:31:19.801 --> 00:31:22.610
right?
I'm sorry.
That's show function.
Remember that show function.

514
00:31:22.660 --> 00:31:23.580
How are we going to show our image?

515
00:31:24.750 --> 00:31:28.440
So we're going to say take that image it and you clicked get the finger size and

516
00:31:28.450 --> 00:31:30.300
speeches and Ben were going to,

517
00:31:30.360 --> 00:31:32.770
and this is where we're actually using that pump library.
This is,

518
00:31:32.820 --> 00:31:36.510
this is this the reason we incorporate math life because we're going to show

519
00:31:36.511 --> 00:31:39.510
images with it.
It's a metal halide.
He's in fish is good for plotting.

520
00:31:39.511 --> 00:31:42.480
It's also good for showing images easily and typed them.
Um,

521
00:31:42.730 --> 00:31:46.840
we can do it in one or two lines of code.
So 10,
10,
uh,

522
00:31:47.150 --> 00:31:48.690
and then show the image.
So I,

523
00:31:48.850 --> 00:31:53.850
I've got the finger size and now I can show him a image and then the

524
00:31:56.641 --> 00:32:01.560
interpretation is near us percolation people's nearest.

525
00:32:02.650 --> 00:32:07.350
That's,
that's,
that's shorthand for nearest neighbor interpolation.
Um,
uh,

526
00:32:07.470 --> 00:32:10.520
okay.
Thanks.
The 13th.
Um,

527
00:32:11.390 --> 00:32:15.440
I've been streaming for 30 minutes now,
but PLT does show nearest.
Okay,

528
00:32:15.590 --> 00:32:17.210
that's fair.
That's fine.
For a nearest neighbor installation,

529
00:32:17.211 --> 00:32:21.110
that's going to help us shore image.
Uh,
okay.
So that's our show function.

530
00:32:21.170 --> 00:32:24.650
And now remember the overlay mask function.
Okay.

531
00:32:24.680 --> 00:32:27.710
So let me show you guys where I defined that.
Oh,
and what that's going to do.

532
00:32:27.830 --> 00:32:32.830
So remember the show him itch was down here and now be uh,

533
00:32:33.400 --> 00:32:37.150
overly masculine edge.
Where was that was here.

534
00:32:37.270 --> 00:32:39.770
And that's going to overlay the mass we created on the unit.

535
00:32:39.880 --> 00:32:42.590
So we're going to take that cleaned Basque and we're going to apply it to the

536
00:32:42.591 --> 00:32:46.210
image.
And this is what the actual application process of applying the masks,
uh,

537
00:32:46.450 --> 00:32:50.720
to the,
the process.
Okay,

538
00:32:50.721 --> 00:32:55.160
so overlay mask on the image.
So let's make the,
make the mask RGB.

539
00:32:55.860 --> 00:33:00.350
Um,
so let's say RGB mask equals CD,

540
00:33:00.360 --> 00:33:03.020
two dogs a convert to the color.

541
00:33:03.230 --> 00:33:08.230
I'm going to think I'm at and we're going to convert it to a gray scale just for

542
00:33:08.241 --> 00:33:11.510
this,
a conversion process.
So there's a lot of,
as you can see,

543
00:33:11.511 --> 00:33:15.430
there's a lot of colored skinny conversion happening here.
Um,
and,
and in,

544
00:33:15.431 --> 00:33:19.220
in this case,
we're converting it to gray scale,
uh,
because,
well,
let me,

545
00:33:19.250 --> 00:33:21.740
let me write this up and then let's think why we're converting it.
Great skill,

546
00:33:22.300 --> 00:33:25.540
but the second blind as to,
um,

547
00:33:25.940 --> 00:33:29.880
add the weighted sum of jewel race.
Uh,
and let me clean on a second.
Uh,

548
00:33:30.260 --> 00:33:34.940
can we just try to sell
and then we'll return to you?
Okay.

549
00:33:35.010 --> 00:33:36.470
So what's happening here?
So,

550
00:33:37.490 --> 00:33:42.140
but so what ad way it is doing is this calculate the weighted sum of two arrays.

551
00:33:42.320 --> 00:33:44.300
All right?
In this case is going to be our imager rates.

552
00:33:44.301 --> 00:33:49.090
We can think of our images as a race.
Um,
and so if we just think of a t,
uh,

553
00:33:49.160 --> 00:33:52.610
both images and his rate,
well,
a raised,
when we add and we add them together,

554
00:33:52.611 --> 00:33:56.890
we're adding the weight.
It's some of the of the image values,
like the sheer,

555
00:33:57.320 --> 00:33:58.790
the numerical value of images.

556
00:33:58.791 --> 00:34:02.180
If we just think of images is just raw numbers that just build up into an image

557
00:34:02.181 --> 00:34:02.990
that you can see.

558
00:34:02.990 --> 00:34:06.620
If we add the weight that some of those of the mask and the original image,

559
00:34:06.650 --> 00:34:10.360
we'll get the mask overlaid on top of the image and we're converting it to um,

560
00:34:10.940 --> 00:34:15.830
uh,
uh,
the,
the mask to Rgb,
uh,
because uh,

561
00:34:15.860 --> 00:34:18.080
the original image is in heart GP.
So we'll just,

562
00:34:18.310 --> 00:34:21.140
well because the mass is going to be in grayscale convert to hard to be,

563
00:34:21.230 --> 00:34:25.400
so they're both sort of are both going to be,
they're going to be there.

564
00:34:25.610 --> 00:34:27.650
Hard to be too great.
Uh Right.

565
00:34:27.651 --> 00:34:29.810
Cause it's cause we're not going to read the image.
We're converting the,

566
00:34:29.940 --> 00:34:34.430
the mask from greater RGB.
Okay.
And then we're going to return the image.

567
00:34:34.610 --> 00:34:38.960
So that's that.
How many helper functions do we've got?
We've got,

568
00:34:38.961 --> 00:34:41.630
we've got two more helper functions and then we're good to go.
Okay.

569
00:34:41.870 --> 00:34:44.930
So those were our first two and now we're going to do our next to hub functions.

570
00:34:45.230 --> 00:34:47.600
So the next one is going to be fine.
The biggest concert,
right?

571
00:34:47.601 --> 00:34:52.010
So we've got our contours or ellipsis and we're going to protect the biggest one

572
00:34:52.011 --> 00:34:56.960
out of politics.
And we defined this function,
right?
Shear.
Where did I define it?

573
00:34:56.990 --> 00:34:58.820
Right here.
Find the biggest strawberry.

574
00:34:58.880 --> 00:35:02.510
It's going to return the biggest ellipse for that shop very as well as the mask

575
00:35:02.600 --> 00:35:05.030
for those strawberries.
Okay?
So let's do that right now.

576
00:35:05.420 --> 00:35:08.540
So to find the biggest contour first,
we're gonna make a copy of the image,
right?

577
00:35:08.580 --> 00:35:12.220
We want to,
we want to retain the original image.
Um,

578
00:35:13.010 --> 00:35:15.710
and we're going to retain the original image,

579
00:35:15.711 --> 00:35:18.230
but we want a copy of it so we can modify it.
And this is,

580
00:35:18.231 --> 00:35:22.820
this is where it opens cds,
images,
coffee,
uh,
function comes really handy.

581
00:35:22.830 --> 00:35:25.550
Come to confirm is really handy because copied the image,

582
00:35:25.551 --> 00:35:28.130
but then keep the other ones separate.
So now we're going to,

583
00:35:28.190 --> 00:35:32.870
we're going to get those concourse.
So how do we do this?
Well,
luckily for us,

584
00:35:32.900 --> 00:35:37.790
open CD has a function called fine contours.
So given unpainted given image,

585
00:35:38.080 --> 00:35:41.130
um,
and these two values that kind of find this conference,

586
00:35:41.131 --> 00:35:45.570
I'm going to explain to these I in a second.
So the first is retrieve lists,

587
00:35:46.170 --> 00:35:49.320
r,
t r,
e t r list,
which is shorthand for retreat place.

588
00:35:49.650 --> 00:35:53.400
And the next one is called chain.
Approx.
Simple,

589
00:35:54.150 --> 00:35:58.920
it's a chain across simple.
But what,
what,
what are we doing here?

590
00:35:58.950 --> 00:36:01.440
Okay.
So what we're doing here is what this,

591
00:36:01.470 --> 00:36:05.460
what this function does is it gives us all the contours and the contour a

592
00:36:05.461 --> 00:36:10.440
approximation to come.
And we want to,
uh,

593
00:36:12.020 --> 00:36:16.250
uh,
so we're going to use the retrieve list to get the contour approximation that

594
00:36:16.251 --> 00:36:17.600
compresses the horizontal,

595
00:36:17.601 --> 00:36:21.590
vertical and diagonal segments and leads only what their end points.

596
00:36:21.930 --> 00:36:26.060
And so that's what the approx approximation,
approximation,
simple function does.

597
00:36:26.270 --> 00:36:29.960
We only want the,
the,
the ones that get,
we only want their end points.

598
00:36:29.961 --> 00:36:33.350
We don't want all the contours,
so it limits what we're contouring.

599
00:36:33.590 --> 00:36:37.130
So for example,
for an upright,
rectangular con contour,

600
00:36:37.131 --> 00:36:39.390
it's encoded with four points.
Um,

601
00:36:39.800 --> 00:36:41.660
and we're going to get a list of those contours.

602
00:36:41.661 --> 00:36:43.820
So that's what the retrieved list does.
It's,
it's,

603
00:36:43.821 --> 00:36:48.080
we want to elicit those contours.
Okay?
Um,

604
00:36:49.610 --> 00:36:52.580
uh,
okay.
So,
so that's what that does.
And we're going to get,

605
00:36:52.610 --> 00:36:55.340
we're going to get the conference,
I'm gonna get in a hierarchy of those,
uh,

606
00:36:55.341 --> 00:36:59.960
which is,
uh,
the,
the,
the chain of contracts from the,

607
00:37:00.080 --> 00:37:01.940
from the greatest to least so that front,
you know,

608
00:37:01.980 --> 00:37:05.360
the size of all these contours or ellipsis.
Okay.
Um,

609
00:37:05.420 --> 00:37:08.820
and so now we want to isolate the largest one.
Now that we have a list of them,

610
00:37:08.821 --> 00:37:12.200
let's isolate.
So we get just the largest guns post a contract sizes.

611
00:37:12.201 --> 00:37:15.730
We want to get a list of all the sizes and we're going to use,
um,

612
00:37:16.880 --> 00:37:17.713
uh,

613
00:37:17.810 --> 00:37:22.250
we're going to use open cvs function to do this.

614
00:37:24.200 --> 00:37:25.033
Um,

615
00:37:27.020 --> 00:37:31.820
contours the find the contour area and

616
00:37:34.580 --> 00:37:37.730
our rights,
um,

617
00:37:40.420 --> 00:37:44.890
contour,
contour,
or come to work in concert.
Okay?

618
00:37:44.891 --> 00:37:48.010
So for every Conduent Elixia contours,
get the area of the,

619
00:37:48.011 --> 00:37:52.000
of that and then store it in our cohort sizes.
A array.
Okay.

620
00:37:52.001 --> 00:37:54.400
That's what that does.
Let me make sure I had this syntax correct here.

621
00:37:54.880 --> 00:37:58.480
I do have the correct syntax.
Okay,
cool.
So now we want to get the biggest one.

622
00:37:58.481 --> 00:38:00.850
We've got a size of all of them.
And so now how do we get the biggest one?

623
00:38:01.120 --> 00:38:05.790
Luckily for us,
luckily for us,

624
00:38:06.390 --> 00:38:08.100
quite fun has that built in Max function.

625
00:38:08.190 --> 00:38:10.350
We'll just get the Max value of our array,

626
00:38:10.890 --> 00:38:15.600
which will automatically detect the biggest value in our era of concourse.
And

627
00:38:17.580 --> 00:38:20.490
uh,
let me see this.
Let me write this out.
Lambda

628
00:38:23.110 --> 00:38:26.560
x and x zero.

629
00:38:28.560 --> 00:38:29.393
And then

630
00:38:31.280 --> 00:38:36.130
we went that first value for key.
We just want that.

631
00:38:36.190 --> 00:38:39.620
So once we've,
um,
we've got the w we want the Max value,
uh,

632
00:38:39.621 --> 00:38:43.360
suddenly write down around Max.
Um,
and what's the order we want them.

633
00:38:43.510 --> 00:38:46.720
We want them the contour in the first position.
That's where that,

634
00:38:46.721 --> 00:38:50.470
that's where that one value comes from.
A,
and then we're just going to be,

635
00:38:50.471 --> 00:38:51.310
cause it's ordered,
right?

636
00:38:51.311 --> 00:38:53.620
So we'll get the biggest one at the beginning of the array.
Uh,

637
00:38:53.670 --> 00:38:56.110
and then let me say,
let me see what this says.

638
00:38:56.111 --> 00:38:59.530
We're isolating the contours for isolating the,
sorry,

639
00:38:59.740 --> 00:39:03.280
I sitting the largest contour.
Okay.
Um,

640
00:39:04.640 --> 00:39:08.150
uh,
okay,

641
00:39:08.151 --> 00:39:11.570
so that's isolating the largest contour.
Um,
and

642
00:39:14.940 --> 00:39:15.560
uh,

643
00:39:15.560 --> 00:39:20.560
so then our last step is to return the biggest one for return.

644
00:39:21.620 --> 00:39:25.580
The biggest,
the biggest contour

645
00:39:27.500 --> 00:39:31.490
line 25.
What do we got here?
Contour.
Hierarchy.
CBQ to find contours.

646
00:39:31.520 --> 00:39:36.280
Image to good.
Yeah.
We're good here,
right?
Oh yes.

647
00:39:36.340 --> 00:39:38.120
Come towards.
Thank you asha.

648
00:39:39.080 --> 00:39:43.100
Contours hierarchy and then uh,
okay,
cool.

649
00:39:43.480 --> 00:39:45.920
We're now is your turn the biggest on fourth,
fifth.
Let's get that mask.

650
00:39:45.950 --> 00:39:50.950
We'll take it as zeros and then if the shape of the image and then

651
00:39:52.940 --> 00:39:55.850
you and taste.
So we're going to get that,
the mask of the,

652
00:39:55.851 --> 00:39:58.480
of the shape and they were going to draw those contours and then we're going to

653
00:39:58.490 --> 00:40:01.220
return it,
right?
This is where we actually draw the con,

654
00:40:01.280 --> 00:40:04.340
the Ilitches honored strawberry.
Uh,
and then

655
00:40:06.080 --> 00:40:08.720
I'm going to,
I'm going to demo this so hard for you guys in a second.

656
00:40:08.721 --> 00:40:10.790
It's gonna be Alex.
We're going to drag this multiple images.

657
00:40:10.970 --> 00:40:15.420
We're going to all the beautiful,
uh,
come towards to get work to,

658
00:40:15.540 --> 00:40:19.000
to show up.
Okay.
So we're going to draw those contours.

659
00:40:19.100 --> 00:40:22.910
We'd arrange from using the mask from the biggest cons.
Uh,

660
00:40:23.000 --> 00:40:26.860
you see the biggest contour in the range up til two 55.
Uh,

661
00:40:27.200 --> 00:40:29.840
in terms of the color scheme.
And then we're going to return it.

662
00:40:31.670 --> 00:40:35.020
Return biggest contours mask.

663
00:40:35.420 --> 00:40:38.300
We have one more method director.
Okay.

664
00:40:40.350 --> 00:40:43.730
Circle Contour.
This is where we actually defined.

665
00:40:45.620 --> 00:40:49.490
Um,
this is where we define,
uh,

666
00:40:49.700 --> 00:40:53.660
the actual contoured stuff.
So we'll take,
we'll say image contour.

667
00:40:55.630 --> 00:40:59.920
Okay.
Um,
this is,
okay.
So this is where we,
um,
uh,

668
00:41:01.150 --> 00:41:04.180
this is where we define the shape of that ellipse.

669
00:41:04.210 --> 00:41:07.810
This is where we define the shape of that contour.
Um,
so we'll say,
okay,

670
00:41:07.811 --> 00:41:11.740
so get the bounding.
If the bounding of lips first,

671
00:41:12.150 --> 00:41:14.770
it's our last function.
It took me about five more lines and we're having that.

672
00:41:14.771 --> 00:41:19.360
We're done.
We'll say we'll get our bounding,
the lips,
the image with the lips,

673
00:41:19.630 --> 00:41:22.180
and then I'll do,
I'll demo it and then I'll do my last five minutes minutes.

674
00:41:22.570 --> 00:41:25.780
And I'm going to use a copy of the image because we want two copies of the image

675
00:41:25.840 --> 00:41:27.820
we're going to,
right?
So then,
um,

676
00:41:29.000 --> 00:41:30.880
we'll say the ellipse is,

677
00:41:33.940 --> 00:41:34.581
we're going to fit,

678
00:41:34.581 --> 00:41:39.581
our lips are a contour and then we're going to add it.

679
00:41:41.420 --> 00:41:41.991
And by added,

680
00:41:41.991 --> 00:41:46.450
I mean think back function to think the image with your lips.

681
00:41:46.660 --> 00:41:49.180
So we're going to pick an image with the width on it.
Um,

682
00:41:50.210 --> 00:41:53.720
and then at our fitted ellipse,
so it's a,
a size,
a better size.

683
00:41:53.721 --> 00:41:57.170
We're going to say I want to be lifted to be green.
Um,
uh,

684
00:41:57.260 --> 00:42:01.680
with a guy you have to,
because we want,
uh,

685
00:42:01.750 --> 00:42:05.330
but that's the size of the bill,
the length of the,
the,
that,
the width of that,

686
00:42:05.331 --> 00:42:09.100
that contour lines.
Um,
and then TV two dots,

687
00:42:09.290 --> 00:42:14.240
CV a,
um,
and then we to it.
Okay.
And then,

688
00:42:16.780 --> 00:42:21.590
um,
they manage with polyps.
Okay.

689
00:42:21.650 --> 00:42:22.483
So

690
00:42:25.740 --> 00:42:29.940
let's file this baby and see if it works.

691
00:42:30.270 --> 00:42:35.030
We'll just compile.
Okay.
So,
uh,
let me,
let me just get it that this works.
Oh,
no,

692
00:42:35.031 --> 00:42:37.020
no,
no.
I forgot something guys.
I forgot something.

693
00:42:37.190 --> 00:42:40.440
We've got to actually write that,
that last code to read,
reading the image.

694
00:42:40.470 --> 00:42:44.370
I never did that.
So it's three lines,
three the image in three lines.

695
00:42:44.610 --> 00:42:48.480
So what does that,
we'll get an image using open CV imagery function.

696
00:42:48.840 --> 00:42:50.910
And w the image is called Yoda jpegs,

697
00:42:50.940 --> 00:42:53.090
which is the image of the strawberry actually.
Did you guys put together?

698
00:42:53.530 --> 00:42:57.700
We'll take a result.
Um,

699
00:42:58.340 --> 00:43:01.420
all right.
Child.
Carmen,
Carmen,
Carmen,
what do you see what I'm saying?
Uh,

700
00:43:01.710 --> 00:43:03.660
find a strawberry and then

701
00:43:05.800 --> 00:43:08.130
using that image and then write it.
That's it.
Okay.

702
00:43:08.131 --> 00:43:13.010
So now we're going to demo our code and I'll write it using open CPS image,

703
00:43:13.011 --> 00:43:15.970
right function,
no two.
Dot jpeg.
We'll call it the old to the new image.

704
00:43:16.410 --> 00:43:20.610
And a result as the perimeter for that because that's our,
you'll leave it.
Okay.

705
00:43:20.611 --> 00:43:23.860
So let's,
let me open the berry.

706
00:43:24.420 --> 00:43:27.720
So this is our initial strawberry,
right?
This is our initial strawberry.

707
00:43:27.750 --> 00:43:31.390
And now once we up run this code,
which I've called fund up pie,

708
00:43:32.700 --> 00:43:36.900
once we run this code,
which I've called fun dot pie.
Okay,
let's see.

709
00:43:36.901 --> 00:43:41.760
We've got an Arrow here.
Fine.
Strawberry image.
So online 100.
I said fine.

710
00:43:41.761 --> 00:43:46.490
Strawberry image.
Uh Oh,
what am I doing here?
Oh right,

711
00:43:46.530 --> 00:43:51.090
equal sign.
Yes.
Here it comes guys.
Here it comes.
So,

712
00:43:51.420 --> 00:43:55.680
uh,
let's,
from Future Vision,

713
00:43:56.470 --> 00:43:59.920
oh,
future important have to happen at the beginning of a while.

714
00:43:59.921 --> 00:44:03.730
I forgot about that.
Okay.
So we move that are out of there.
Let's try that.

715
00:44:04.650 --> 00:44:07.390
Um,
okay.
So this says,

716
00:44:09.770 --> 00:44:12.880
okay,
so the problem with that is

717
00:44:14.730 --> 00:44:15.563
<v 2>mmm,</v>

718
00:44:16.710 --> 00:44:19.530
<v 0>okay.
So this is a weird error,
so,
okay.
Hold on,
let me make this bigger.</v>

719
00:44:19.770 --> 00:44:24.520
So you guys can see,
um,
so

720
00:44:27.050 --> 00:44:31.860
python on hand up high,
right?

721
00:44:32.550 --> 00:44:37.320
Oh right.
It's not very,
it's a a high,

722
00:44:37.330 --> 00:44:41.040
right?
Oh yeah.
So,
um,
interesting.
Okay.
And See,

723
00:44:41.050 --> 00:44:45.240
you should have called her a BGR to RGB and find strawberry.

724
00:44:47.000 --> 00:44:49.490
Okay.
No,
no,
no,
that's definitely correct.
Um,

725
00:44:50.020 --> 00:44:54.710
which just remember what the deal is.
Oh,
right.
We've got to convert Barry,
not Yo,

726
00:44:54.711 --> 00:44:57.640
we'll call this very too,
so it was a wrong image.
Right.
Okay.
So that,

727
00:44:57.641 --> 00:45:00.620
that's what it was.
All right,
so let's,
let's run this.
This is going to work.

728
00:45:02.230 --> 00:45:06.880
Bubble named biggest is not defined.
Okay.
Let's see what that is.
Um,

729
00:45:07.360 --> 00:45:08.930
the bugging time.
Exactly.

730
00:45:08.931 --> 00:45:13.640
Debugging is fun as hell sometimes.
Um,

731
00:45:13.850 --> 00:45:15.700
it's starting to become more fun even when one live,

732
00:45:15.710 --> 00:45:18.860
because I'm getting more used to this.
Okay.
So what does so biggest,

733
00:45:18.861 --> 00:45:21.800
let's find the biggest,
biggest,
it's not defined.
What are you talking about?

734
00:45:21.860 --> 00:45:25.190
I defined biggest,
obviously I didn't because it's not there,
but,
okay.

735
00:45:25.191 --> 00:45:27.650
So I said biggest,
um,

736
00:45:29.000 --> 00:45:33.620
and right.
So where should I define biggest?
So biggest,

737
00:45:34.270 --> 00:45:38.240
um,
oh,
biggest contour.
Not Biggest.
Uh,

738
00:45:39.080 --> 00:45:43.490
that's,
it's biggest contour.
Contour.
Okay,
let's try that.

739
00:45:45.770 --> 00:45:49.730
Okay.
Interpolation online.
14.

740
00:45:51.180 --> 00:45:56.070
Unexpected Keyword interpolation.
Image interpolation.

741
00:45:56.850 --> 00:46:01.020
Nearest PLT up in both image show,
not show human show.
Okay,

742
00:46:01.320 --> 00:46:06.180
let's try that.
Oh,
okay.
That works.
Let me,
well,
let's see.
To work.

743
00:46:06.450 --> 00:46:08.490
So it's called very too.

744
00:46:11.220 --> 00:46:14.070
Okay.
Yes.
How cool is that?

745
00:46:14.280 --> 00:46:17.950
So this is our original Barry and this is the one that it detected.
Okay.

746
00:46:18.310 --> 00:46:22.960
So how the hell did it do this?
Okay.
It detected it,

747
00:46:23.320 --> 00:46:27.820
right?
So to do this,
we,
here's what we did.

748
00:46:27.821 --> 00:46:29.300
Here are the steps and that,

749
00:46:29.310 --> 00:46:32.830
and now I want you guys to find a strawberry image on the net and just post it

750
00:46:32.840 --> 00:46:36.490
in,
uh,
in the,
in the chats.
So I'll try it on that image as well.

751
00:46:36.730 --> 00:46:37.690
While I explained this,

752
00:46:38.020 --> 00:46:42.100
what we did was we first converted the color scheme too from BTR to RGB so that

753
00:46:42.101 --> 00:46:44.080
we could have so that we could scale our image properly.

754
00:46:44.800 --> 00:46:47.800
The next step is we scaled our image so it fits in the window size.

755
00:46:47.800 --> 00:46:52.780
That map club life requires,
uh,
which is,
you know,
under 700 by 700.

756
00:46:52.781 --> 00:46:55.150
And it's a square image.
We turned our strawberry into this word,

757
00:46:55.690 --> 00:46:58.120
then we cleaned our image using the golf seem to blur function,

758
00:46:59.290 --> 00:47:04.260
which smooth the image so that it's a,
it's a,
it's it's uh,
one,
uh,

759
00:47:04.870 --> 00:47:09.110
one color scheme,
uh,
that we can just focus on like red instead of a,
you know,

760
00:47:09.200 --> 00:47:12.700
little black holes and yellow and all that.
And so then we define our filters.

761
00:47:12.701 --> 00:47:16.120
What's,
what's the minimum read,
what's the maximum read,
um,

762
00:47:17.380 --> 00:47:19.690
and then what's the minimum brightness in the maximum brightness.

763
00:47:19.691 --> 00:47:22.600
So I use two filters.
We combined them,
we applied them to the image,

764
00:47:22.780 --> 00:47:26.320
we segmented the strawberry from the rest.
We've got a list of strawberries.

765
00:47:26.321 --> 00:47:28.750
In this case we only had one,
but this would apply to multiple strawberries.

766
00:47:28.751 --> 00:47:33.160
As we added a mask,
we overlaid the mask and then we circled the biggest one,

767
00:47:33.161 --> 00:47:35.740
and then we showed it,
and then we convert our original image back.

768
00:47:35.920 --> 00:47:37.510
And that wasn't necessary,
but we just,

769
00:47:37.750 --> 00:47:41.930
let's just convert it back to Bgr so that we can perform other,
um,

770
00:47:42.670 --> 00:47:47.320
processing tasks on it.
So,
okay,
so that's the code for that.

771
00:47:47.470 --> 00:47:51.910
Let me try it out.
One more image.
Okay.
Strawberry image.

772
00:47:54.880 --> 00:47:59.380
Uh,
and we'll do several.
Let's pick a,

773
00:48:00.130 --> 00:48:02.350
let's pick this one.
Okay.

774
00:48:03.430 --> 00:48:07.300
And we'll save that and we'll go to our,

775
00:48:08.140 --> 00:48:13.120
um,
we'll move that to this,

776
00:48:15.480 --> 00:48:18.480
uh,
here and we're going to rename.

777
00:48:19.170 --> 00:48:22.560
So then we'll open this file and we'll say,
well,
what's it called?
Was it called?

778
00:48:22.890 --> 00:48:27.720
It was called
Yo.

779
00:48:27.721 --> 00:48:31.650
Test Dot jpg.
We'll read them at Yo Tessa Jaytag.
We'll use jpeg.

780
00:48:31.830 --> 00:48:36.150
And then in our code we're going to,
uh,
exactly.
Yo,

781
00:48:36.151 --> 00:48:40.470
test dot jpg.
And then we'll say go test two dot jpeg.
And let's see what happens.

782
00:48:40.471 --> 00:48:44.100
Well,
I've never tested on this code in particular.
Uh,

783
00:48:44.430 --> 00:48:48.100
let's see what happened to your fund up high.
Okay.

784
00:48:48.120 --> 00:48:50.740
And now we'll open test two dot jpegs.

785
00:48:51.050 --> 00:48:56.010
He would hit these.
Okay,
so we just circled the entire thing.

786
00:48:56.310 --> 00:49:00.360
Uh,
but it's because he's,
the strawberries were bunched together so,
well,

787
00:49:00.780 --> 00:49:04.190
we can further improve on this to make sure that it only right.
Um,

788
00:49:04.620 --> 00:49:08.760
segment the best one.
Our Code is ideal at the strawberries aren't touching,

789
00:49:08.761 --> 00:49:13.350
but these are tough.
These are touching.
So that's that.
Um,
uh,
and there's,

790
00:49:13.470 --> 00:49:15.450
there's one more thing I want to say about this.
So let me,

791
00:49:15.480 --> 00:49:16.770
let me start screen sharing again.

792
00:49:17.880 --> 00:49:21.060
Let me stop the screen share and you get back to,
um,

793
00:49:22.170 --> 00:49:26.850
stop screen sharing.
Okay.
So,
so yeah,
I mean,
open CV,
it's been used for so long,

794
00:49:26.940 --> 00:49:30.720
you know,
there's so many built in methods,
transforms,
different types of,

795
00:49:30.870 --> 00:49:34.380
you know,
all sorts of research has gone into open CV,
um,
to,
to do that.

796
00:49:34.381 --> 00:49:38.610
But deep learning now is slowly taking over.
So if we had,

797
00:49:38.611 --> 00:49:41.880
and let me just show this right here.
So it's like,
it's like,
it's like

798
00:49:44.000 --> 00:49:47.230
if this is deep learning,
can you guys see this?
Oh my God,
it's backwards,
right?

799
00:49:47.350 --> 00:49:48.580
I forgot about that.
Um,

800
00:49:50.430 --> 00:49:54.630
how does shift and do it where it's like not backwards.
Interesting.
Uh,
okay.

801
00:49:54.631 --> 00:49:57.360
So I can just do it with my hands guys.
I do that anyway.

802
00:49:57.450 --> 00:50:01.590
So it's like deep learning with like,
uh,
open CV was everything.

803
00:50:01.591 --> 00:50:02.580
It was all a computer vision,

804
00:50:02.581 --> 00:50:05.880
but then deep learning showed up and now the point is slowly taking over.

805
00:50:05.910 --> 00:50:07.650
So right now you can use a little bit of open CV,

806
00:50:07.651 --> 00:50:08.580
can a little bit of deep learning,

807
00:50:08.880 --> 00:50:11.740
but eventually you'd want it will just take over and they'll all be deported.
Uh,

808
00:50:11.900 --> 00:50:13.980
so like right now what our need for that.
By that it's like,

809
00:50:14.220 --> 00:50:17.580
well we can use open CBQ segment a strawberry and then we could use deep

810
00:50:17.581 --> 00:50:20.460
learning to identify it as a struggle.
So we can say,
okay,

811
00:50:20.520 --> 00:50:21.750
this is a strawberry in a picture.

812
00:50:21.870 --> 00:50:24.950
Write a circle around it and then use deep learning institute of text.
Well,

813
00:50:24.960 --> 00:50:26.430
what is the name of that thing?
Okay.

814
00:50:26.431 --> 00:50:29.120
So we said we define the shape and color and some of something and then we can

815
00:50:29.121 --> 00:50:32.630
say,
well,
you see 0.2 to recognize what that is.
Um,

816
00:50:33.380 --> 00:50:35.900
and also deep learning is computationally expensive,
right?

817
00:50:35.960 --> 00:50:37.790
So sometimes you want a quick and dirty solution.

818
00:50:37.850 --> 00:50:41.360
You just want to segment an image and you don't want to have to,
and uh,

819
00:50:41.480 --> 00:50:42.920
although deep learning learns features,

820
00:50:43.070 --> 00:50:45.770
you just want to encode with features yourself because it's something said,
well,

821
00:50:45.771 --> 00:50:49.010
you're doing open CV is great for that.
Um,
so yeah,
so that's that.

822
00:50:49.360 --> 00:50:52.250
And let me do a five minute Q and a at the end and then more and then that

823
00:50:52.280 --> 00:50:56.450
definitely live stream.
Any,
any other questions?
Oh,
it's only backwards for me.

824
00:50:56.451 --> 00:51:00.740
You're right.
You're right.
I forgot about that.
Yeah,
she admin is awesome.

825
00:51:01.210 --> 00:51:04.670
Uh,
will you make a series B series where you make build a robot using AI?
Yes.

826
00:51:04.671 --> 00:51:07.560
That's coming up.
I'm going to use a drone.
Uh,

827
00:51:08.030 --> 00:51:12.290
will you make it a Google search algorithm?
That's a great idea.

828
00:51:13.490 --> 00:51:15.650
That's a great idea.
A poor,
I'd never thought about that.

829
00:51:15.651 --> 00:51:20.030
I should do a search algorithm.
Um,
what was your big announcement last Friday?

830
00:51:20.090 --> 00:51:23.900
Wait,
two days.
It's coming out dead height.
It's coming out this Friday.

831
00:51:24.230 --> 00:51:28.200
Come hell or high water is coming out this Friday.
Um,

832
00:51:29.170 --> 00:51:32.720
is your release more videos?
I am on that.
The thing is I don't want to,

833
00:51:32.721 --> 00:51:34.070
I don't want to,
I'm never,

834
00:51:34.160 --> 00:51:37.820
I'm never going to let anyone else write the script for my videos.

835
00:51:37.821 --> 00:51:41.060
I don't care who it is.
I don't care who pays me,
how much I,

836
00:51:41.120 --> 00:51:45.680
every single word that I speak will come from my heart,
my soul,

837
00:51:45.681 --> 00:51:48.710
my mind.
So if that doesn't scale,
it doesn't scale,

838
00:51:48.740 --> 00:51:52.220
but I will never speak the words that someone else tells me to speak.
Okay.

839
00:51:52.550 --> 00:51:56.110
I promise you that,
uh,
make a search arguments.

840
00:51:56.111 --> 00:51:59.860
I would find the most complete come complete answer to any question.
Um,

841
00:52:00.030 --> 00:52:01.950
then yeah,
I'll add that to the search algorithm video admitted.

842
00:52:02.210 --> 00:52:04.500
Please make a dedicated video for Q and a section.
Hashish.

843
00:52:04.580 --> 00:52:07.960
I'll do that in the future.
Can I get a shout out?
How Jd can you recommend?

844
00:52:08.270 --> 00:52:11.020
Can you recommend CNTK?
Um,
I,

845
00:52:11.930 --> 00:52:16.040
I wouldn't recommend CNC actually.
I would recommend tensorflow.
Uh,
yes.

846
00:52:16.041 --> 00:52:19.070
Police Department with patriotic.
I'm not for sale.
Exactly.
Thank you.

847
00:52:19.071 --> 00:52:23.300
Jay D is there a simple way and open CV to get the total variation or for Hue

848
00:52:23.301 --> 00:52:28.130
and saturation?
Um,
uh,
yes,
there is.
Uh,

849
00:52:28.131 --> 00:52:31.310
and I,
um,
yes there is,

850
00:52:32.470 --> 00:52:36.390
but I don't have time to show exactly that.
Uh,
thank you.
And so,
uh,

851
00:52:36.710 --> 00:52:40.400
how do use neural net and open CV?
I'll do more on this stuff later.
Uh,

852
00:52:40.401 --> 00:52:44.150
two more questions and then we're good to go.
Okay,
two more questions.
Uh,

853
00:52:44.870 --> 00:52:49.160
can you make a video on motion tracking in open CV?
That's a great idea.

854
00:52:49.220 --> 00:52:53.670
That's a great idea.
I can do that.
Other hundred.
One more question.
Um,

855
00:52:54.290 --> 00:52:58.520
where did you learn all these from?
How much swollen do you drink?
Uh,

856
00:52:58.521 --> 00:53:01.320
I stopped drinking soylent.
I used to drink it a lot.
Um,

857
00:53:01.410 --> 00:53:03.660
where did you learn all these guys?
Um,

858
00:53:03.800 --> 00:53:08.540
so I think a lot of us are bounded by the idea of we have to learn a certain way

859
00:53:08.690 --> 00:53:12.650
and it has to be in this exact format for us to tell ourselves that we now know

860
00:53:12.651 --> 00:53:16.610
this.
But look,
if you,
if you like,
you know,
read,

861
00:53:16.700 --> 00:53:20.530
if you really take a day to read,
like,
I dunno Andre Carpathians,

862
00:53:20.720 --> 00:53:24.650
that famous Lstm blog posts from start to finish and you're in,

863
00:53:24.651 --> 00:53:28.500
every time you see a word or phrase or equation that you don't understand,

864
00:53:28.501 --> 00:53:30.090
you can Google that and then you go back to him.

865
00:53:30.180 --> 00:53:32.790
And if you complete an article like that,
like a very heavy article,

866
00:53:33.780 --> 00:53:37.200
you now understand at a high level how an LSTM works.

867
00:53:37.350 --> 00:53:40.680
You don't necessarily need,
you know,
like a four year degree to say,

868
00:53:40.860 --> 00:53:43.620
now I know how else the important.
So we have to,

869
00:53:43.650 --> 00:53:45.570
we have to shift how we think about learning.

870
00:53:45.600 --> 00:53:49.710
It's not so much about about having to do a certain structure,

871
00:53:49.711 --> 00:53:54.150
it's about telling yourself and believing in yourself that you can't,

872
00:53:54.390 --> 00:53:57.360
you can know this,
you do know this and you can build something with it.

873
00:53:57.540 --> 00:53:59.760
And so that's what I'm here to help you with.
I'm here to inspire you guys,

874
00:53:59.761 --> 00:54:03.750
guide you guys on this journey that we are all on.
Okay?
We're all learning.
Okay.

875
00:54:03.840 --> 00:54:05.110
So,
um,

876
00:54:06.580 --> 00:54:09.630
one more we into a super interesting chicken and startup.
Uh,

877
00:54:10.680 --> 00:54:11.491
that's a great question.

878
00:54:11.491 --> 00:54:14.340
It depends on what you're doing at the start for doing research stuff.
Uh,

879
00:54:15.270 --> 00:54:15.901
me personally,

880
00:54:15.901 --> 00:54:19.290
I would do a research internship just because I'm interested in research.
Um,

881
00:54:19.620 --> 00:54:23.370
cool.
So that's it.
Reddit,
Ama,
that's coming up.
Someone has to like request me,

882
00:54:23.400 --> 00:54:26.940
right?
Like requesting you to do it,
man.
Just to say,
Hey,
I'm,
I want to do an amen.

883
00:54:27.240 --> 00:54:30.480
Okay.
So right in context,
me or somebody's going to say,
well,
I know the CEO.

884
00:54:30.481 --> 00:54:34.440
He's a cool guy.
Okay.
Um,
so that's it for this Q and.
A and for this last session.

885
00:54:34.620 --> 00:54:38.850
I love you guys so much.
Thank you for watching.
Um,
uh,
something cool.

886
00:54:38.851 --> 00:54:41.070
It's coming out on Friday.
It's,
it's happening this Friday.

887
00:54:41.071 --> 00:54:44.010
Come hell or high water.
I,
I made,
I'm making this promise you guys,

888
00:54:44.250 --> 00:54:48.510
it's going to be awesome.
Um,
and thank you so much for,

889
00:54:49.570 --> 00:54:54.390
uh,
for doing this,
for,
for being here.
Okay.
So for now,

890
00:54:54.420 --> 00:54:55.253
I've got to

891
00:54:57.410 --> 00:55:00.020
find a place with better lighting because I love natural lighting,

892
00:55:00.170 --> 00:55:01.990
so thanks for watching.
[inaudible].

