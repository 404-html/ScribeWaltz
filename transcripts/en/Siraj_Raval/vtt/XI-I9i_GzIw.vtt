WEBVTT

1
00:00:03.210 --> 00:00:07.080
Hello everybody.
Let me load up the chat room.

2
00:00:07.530 --> 00:00:09.450
Live stream is starting soon.

3
00:00:16.670 --> 00:00:17.361
All right,

4
00:00:17.361 --> 00:00:22.361
so let's get into that room with all the live people loading,

5
00:00:22.741 --> 00:00:25.470
loading,
loading.
Oh,
all the loading

6
00:00:27.150 --> 00:00:31.350
livestreaming events.
Boom.
I'm in the room.

7
00:00:33.180 --> 00:00:38.040
There.
I am.
All right,
cool.
All right.
Hey,
hello world.
It's the Raj.

8
00:00:38.041 --> 00:00:42.630
Good to see everybody.
I'm going to list some names.
Uh,
uh,
psych,

9
00:00:43.170 --> 00:00:47.100
Collins,
[inaudible],
Ricardo,
Spencer,
Daniel Preston.

10
00:00:47.510 --> 00:00:50.700
Now while happy new year,
Sagar,

11
00:00:50.970 --> 00:00:53.700
she has on Lance Xavier.

12
00:00:56.430 --> 00:01:01.380
How's it going guys?
Okay,
so today it's good to see you guys.
Good to be here.

13
00:01:01.760 --> 00:01:05.130
I'm excited for this live stream today.
Uh,

14
00:01:05.131 --> 00:01:08.640
we're going to build a work,
well,
first of all,

15
00:01:08.641 --> 00:01:10.560
we're going to install opening eyes,
universe,

16
00:01:10.950 --> 00:01:15.660
and then we're going to build a game Bot to get better at it.

17
00:01:15.690 --> 00:01:18.240
And it's our own custom game bots.
Um,

18
00:01:18.990 --> 00:01:23.260
it's going to be about 70 lines of code in Python.
And then,
uh,
I'm gonna,

19
00:01:23.280 --> 00:01:26.730
I'm going along the way.
I'm gonna explain how it works.
Okay.
So,
first of all,

20
00:01:26.731 --> 00:01:27.211
as always,

21
00:01:27.211 --> 00:01:30.450
I'm going to start off with my five minute Q and a and then we're going to get

22
00:01:30.451 --> 00:01:34.070
started.
All right.
All right,
here we go.
Um,

23
00:01:35.370 --> 00:01:39.720
how much math,
you know,
behind all this AI and ml?
Uh,
I,

24
00:01:40.020 --> 00:01:44.490
I,
I've studied linear Algebra,
I studied statistics and calculus.

25
00:01:45.010 --> 00:01:49.800
Um,
in terms of how much do you need a,
I think,

26
00:01:49.920 --> 00:01:52.980
I mean,
it depends on the level that you're trying to,
you,
you know,

27
00:01:52.981 --> 00:01:54.750
what you're trying to do.
If you're trying to do research,

28
00:01:54.780 --> 00:01:57.330
you definitely need some math.
It's no question.

29
00:01:57.840 --> 00:02:02.130
If you're a developer and you're just trying to implement some machine learning

30
00:02:02.131 --> 00:02:06.000
into your app or use an Api,
you don't obviously don't need math.

31
00:02:06.390 --> 00:02:09.150
And if you want to do something in the middle where it's like your developer,

32
00:02:09.151 --> 00:02:12.000
but you're also,
you know,
you're doing some innovations in AI,

33
00:02:12.390 --> 00:02:15.450
having some math is good and I'm going to start teaching more math in my,

34
00:02:15.540 --> 00:02:19.110
on my channel.
All right.
Uh,
hi,
uh,

35
00:02:19.350 --> 00:02:22.530
Alexandra and massive Macedonia.
What do you do for living?

36
00:02:22.531 --> 00:02:25.090
I do this channel full time.
Uh,

37
00:02:25.390 --> 00:02:29.300
how do you get started with tensorflow and say my name please?
Rajat uh,

38
00:02:29.730 --> 00:02:31.110
with started with tensorflow,
uh,

39
00:02:31.111 --> 00:02:33.930
I have an intro to tensorflow series on my channel.
Uh,

40
00:02:34.110 --> 00:02:38.310
what is opening at universe capable of other than games?
Uh,
great question.
Uh,

41
00:02:38.311 --> 00:02:41.610
so there are environments,
so,
uh,

42
00:02:41.730 --> 00:02:46.200
their environments for doing tasks like sending an email or uh,

43
00:02:46.620 --> 00:02:51.420
you know,
uh,
doing some kind of a mouse clicking keyboard he event.

44
00:02:51.720 --> 00:02:51.961
Uh,

45
00:02:51.961 --> 00:02:55.530
so there's a lot of different set objectives and they're adding more over time

46
00:02:55.531 --> 00:02:59.100
because it's open source.
Can we get tensorflow working with goaling?

47
00:02:59.770 --> 00:03:01.420
There's gotta be a rapper on get hub,

48
00:03:01.450 --> 00:03:04.510
just search tensorflow and then click on go tell me if something shows up.

49
00:03:04.540 --> 00:03:06.520
I actually haven't searched for that.
I haven't even thought of that.

50
00:03:06.940 --> 00:03:09.400
You're doing a great job,
sir.
Thank you.
Thanks.
Thanks.

51
00:03:09.401 --> 00:03:13.630
Bartos which is the best tutorial to learn python to be efficient at ml.

52
00:03:13.780 --> 00:03:16.450
I have a series called learn python for data science.
Check it out.

53
00:03:16.660 --> 00:03:19.750
When will the basic deep learning video series come out and will it also feature

54
00:03:19.751 --> 00:03:24.460
the math?
Uh,
yes,
it's coming out on Friday.
Uh,
it's something really big,

55
00:03:24.490 --> 00:03:28.480
something really big is coming out on Friday,
guys.
Uh,
so it's a lot of pressure.

56
00:03:28.900 --> 00:03:32.970
Uh,
but this is going to be something really big on Friday.
Uh,

57
00:03:33.040 --> 00:03:36.610
how long will it take this video?
It's going to take about 45 minutes.
Um,

58
00:03:40.120 --> 00:03:44.440
I Saroj our Google not releasing their best tensorflow library.
Uh,
no.
I mean,

59
00:03:44.980 --> 00:03:47.350
I mean Google does have a lot of internal code that they're not going to share

60
00:03:47.351 --> 00:03:51.760
with us.
Uh,
but tensorflow is,
is,
you know,
I mean that's,
that's,

61
00:03:51.761 --> 00:03:53.740
that's a good portion of what they have.

62
00:03:54.210 --> 00:03:57.550
Are you going to make a Gan live tutorial?
That's a great idea.
David.

63
00:03:57.580 --> 00:04:01.780
I gans are really,
really,
really cool.
And,
uh,

64
00:04:02.170 --> 00:04:04.870
I made one video called generative adversarial networks.
Uh,

65
00:04:04.990 --> 00:04:08.410
but I'm going to do more.
Um,
all right,
so three more questions.

66
00:04:09.920 --> 00:04:13.670
Uh,
where are you now?
Saroj um,
in my room in San Francisco.

67
00:04:14.180 --> 00:04:17.240
What do you think about Mark Zuckerberg?
Ai?

68
00:04:17.370 --> 00:04:20.940
I talked about that and like two streams ago I thought I've,
alright.

69
00:04:21.230 --> 00:04:24.890
Are you going to write code with you?
Yes.
What do you think about Pandora bots?

70
00:04:25.100 --> 00:04:29.660
Um,
I haven't heard of that.
All right.
Um,

71
00:04:31.300 --> 00:04:33.470
will you do something with videos?
Uh,

72
00:04:33.550 --> 00:04:35.500
I guess you're talking about machine learning with videos.
Yes.

73
00:04:35.620 --> 00:04:39.220
Is a nanodegree worth it?
I,
yes,
I think it's worth it.
And,
uh,

74
00:04:39.221 --> 00:04:43.780
speaking of nanodegrees,
uh,
something cool is coming out,
so just I can't,

75
00:04:44.410 --> 00:04:47.830
I'm not gonna I'm not gonna say what it is.
What college did you go to?
Columbia.

76
00:04:48.040 --> 00:04:52.840
You smoked marijuana?
Yes.
Um,
and no apologies.
So,

77
00:04:52.870 --> 00:04:57.580
um,
anything with d three.
Dot.
JS and AI.
I have a live stream called,
uh,

78
00:04:58.480 --> 00:05:02.290
uh,
well that's a visualization without AI.
Anyway.
Um,

79
00:05:03.940 --> 00:05:08.560
cool.
Hi.
Lori is all right.
So,
um,
that's it for the five minute Q and.
A.

80
00:05:08.880 --> 00:05:10.540
Uh,
let's get started with this.

81
00:05:10.600 --> 00:05:15.190
We're going to install a opening eyes universe and then we're going to,

82
00:05:15.380 --> 00:05:19.690
um,
build our game bought with it.
All right,
so let's,
let's get started with this.

83
00:05:20.140 --> 00:05:21.670
I'm going to go ahead and start screen sharing.

84
00:05:21.900 --> 00:05:26.740
So obviously it depends on your environment,
like what you're running,
but,

85
00:05:27.000 --> 00:05:30.250
uh,
in this demo we're going to,

86
00:05:32.600 --> 00:05:35.690
uh,
let me just start screen sharing.
Here we go.

87
00:05:37.140 --> 00:05:41.570
Screen share desktop.
Okay.
So,

88
00:05:44.230 --> 00:05:47.380
so,
okay,
so here we see the actual repo,
right?

89
00:05:47.381 --> 00:05:49.870
This is the repo for opening eyes,
universe.

90
00:05:49.960 --> 00:05:53.110
They've got to read me here and they're explaining that it is a software

91
00:05:53.111 --> 00:05:58.010
platform for basically training an AI in thousands of different environments

92
00:05:58.011 --> 00:06:02.810
that got Flash Games.
They've got browser tasks,
as you can see here.
Um,
like,

93
00:06:02.811 --> 00:06:07.730
you know,
sending emails and you know,
more trivial things like that.
Uh,

94
00:06:07.760 --> 00:06:09.920
and even like,
you know,
things like grand theft auto five,

95
00:06:10.250 --> 00:06:13.700
which isn't included yet,
but it's coming very soon and more games like that,

96
00:06:13.790 --> 00:06:16.220
three d games are going to come soon.
Uh,
so,

97
00:06:16.310 --> 00:06:18.470
so there's that and then it's got the install instructions.

98
00:06:18.471 --> 00:06:21.560
So what I'm gonna do is I'm just going to go through these install instructions

99
00:06:21.561 --> 00:06:25.700
with you guys.
Uh,
and I'm going to do it for Mac because obviously I'm on Mac,

100
00:06:25.910 --> 00:06:30.740
but this also applies to Linux.
Uh,
and if you're on a windows machine,
uh,

101
00:06:31.310 --> 00:06:32.810
you know,
so the,

102
00:06:32.811 --> 00:06:36.380
the intersection here for windows machine is when we talk about docker.
Okay.

103
00:06:36.381 --> 00:06:39.080
Well,
so we'll get,
we'll get there.
So let's start off by installing universe.

104
00:06:39.081 --> 00:06:43.250
Let me check what you guys are up to.
Um,
cool.
All right,
cool.

105
00:06:43.370 --> 00:06:44.570
So here's what we're going to do with,

106
00:06:44.571 --> 00:06:46.430
the first thing we're going to do is clone the environment.

107
00:06:46.640 --> 00:06:51.380
So what I did is I went ahead and,
um,
I'm going to open up terminal.

108
00:06:51.500 --> 00:06:55.970
Okay.
Uh,
and I'm gonna say,
uh,
let's see.

109
00:06:55.971 --> 00:06:59.150
I'm going to create my,
let me make this bigger.
Let me make it way bigger.

110
00:07:00.810 --> 00:07:04.940
Uh,
CD fun,
fun.
Okay.

111
00:07:04.941 --> 00:07:08.990
So I'm in my directory right now,
of,
of,
of,
of,
uh,
okay.

112
00:07:09.050 --> 00:07:12.260
So let me make a super big,
okay.
I'm going to make it super big for everybody.

113
00:07:12.261 --> 00:07:17.180
Everybody can see that.
All right,
here we go.
So here's what we're going to do.

114
00:07:17.720 --> 00:07:20.660
I'm going to put this over here.
Let me see what you guys are up to.
All right,

115
00:07:20.661 --> 00:07:25.400
cool.
All right,
so that's installed this baby.

116
00:07:25.401 --> 00:07:27.620
All right,
so we're going to start off by cloning this thing.

117
00:07:27.621 --> 00:07:30.950
Let's go ahead and get clone.
Get clone.
All right,

118
00:07:31.460 --> 00:07:35.580
so that's going to download it.
Boom.
That was fast.
All right,
so next seventh,

119
00:07:35.581 --> 00:07:39.050
the CD and the universe.
All right.
Little CDN.
All right,
we're in our,
let's look.

120
00:07:39.200 --> 00:07:42.410
Let's look at what it looks like.
This,
this a font sizes.
All right,
right guys.

121
00:07:42.940 --> 00:07:47.770
It's fun sizes.
All right,
cool.
Uh,
right.
Okay.
So,
um,

122
00:07:48.320 --> 00:07:51.380
we seeded into university and now we're going to install our dependencies.

123
00:07:51.500 --> 00:07:55.850
So what is this line?
It's a the dash e variable means in editable mode.

124
00:07:56.090 --> 00:07:58.430
All right?
So we're doing this an editable mode,
uh,

125
00:07:58.431 --> 00:08:00.620
which makes installed packages editable,

126
00:08:00.830 --> 00:08:04.070
and it's reading which packages to download from setup.py.

127
00:08:04.070 --> 00:08:07.730
So you see this setup.py file here.
Let's,
let's like Nano into this for a second.

128
00:08:07.731 --> 00:08:12.340
I just like,
see what this looks like.
It's set up.
That pie is a list of the,
uh,

129
00:08:12.380 --> 00:08:16.670
dependencies and you can see them right here,
like pillow and Jim and docker,
py,

130
00:08:16.671 --> 00:08:18.890
things like that.
All right,
so that's what that is.

131
00:08:19.220 --> 00:08:23.920
So we're going to go ahead and run our,
uh,
install wine,

132
00:08:24.240 --> 00:08:27.350
different stall e.
So that's going to install,
it's going to,

133
00:08:27.351 --> 00:08:31.460
it's going to download this dependencies from,
oh,
shh.
All right.
Yes,

134
00:08:31.760 --> 00:08:35.390
I need to be in pseudo mode,
right?
Permission denied.

135
00:08:35.750 --> 00:08:39.260
I was just denied access.
That always happens to me.
All right,

136
00:08:39.261 --> 00:08:42.500
so we got our dependencies,
right?
All right.
Um,

137
00:08:43.610 --> 00:08:48.530
pillow gives you nightmares.
Well,
anyway,
okay,

138
00:08:48.531 --> 00:08:50.960
so we've got our dependencies and so then it,

139
00:08:50.990 --> 00:08:54.860
then it kind of splits off into whatever platform you're running on Ubuntu,

140
00:08:54.861 --> 00:08:57.180
you want to install num Pi.
Um,

141
00:08:57.570 --> 00:09:01.050
and just in general you should just have num pi and your system because pretty

142
00:09:01.051 --> 00:09:05.160
much everything machine learning is using non Pi these days.
Um,
so,

143
00:09:06.230 --> 00:09:10.990
and then you're using APP to get to install Golang.
Uh,
and you know,
we on,
uh,

144
00:09:11.150 --> 00:09:14.490
go and you're going to need go lang because we're using that for our B and c

145
00:09:14.491 --> 00:09:19.110
driver,
which I'm going to talk about in a second.
So for us,
we are,
uh,
sorry.

146
00:09:19.111 --> 00:09:21.660
So,
uh,
us as an Osx users,

147
00:09:21.840 --> 00:09:24.690
we don't have a package manager like apps get,
so we had to,

148
00:09:25.080 --> 00:09:28.060
so we have to use something called a homebrew,
which by the way,
they inventor,

149
00:09:28.061 --> 00:09:30.900
it got rejected from Google for not being able to do,

150
00:09:30.901 --> 00:09:32.700
I don't know if you guys heard about that.
They're the red black tree.

151
00:09:32.701 --> 00:09:35.190
This was like a year ago,
but I thought,
I just thought that was hilarious and a,

152
00:09:35.520 --> 00:09:37.830
and a good commentary on the state of our programming interviews,

153
00:09:37.950 --> 00:09:40.380
which I still have to make a video on how to ace the programming interview.

154
00:09:40.380 --> 00:09:42.120
I know you guys want that.
So that's going to come soon.

155
00:09:42.510 --> 00:09:45.210
I just have a lot on my plate right now,
so that's coming soon.
Anyway,
so,
uh,

156
00:09:45.690 --> 00:09:48.330
so for Osx it's gonna say you're gonna need command line tools,

157
00:09:48.331 --> 00:09:53.180
which I already have,
so I'm not going to run that.
But,
um,
so there's that.

158
00:09:53.181 --> 00:09:57.840
And then,
uh,
right,
so and I have these dependencies,
uh,

159
00:09:58.220 --> 00:09:59.330
right.
So I'm just going to go,

160
00:09:59.340 --> 00:10:01.130
I'm going to go ahead and just install them anyway,

161
00:10:01.131 --> 00:10:04.460
so I'm going to overwrite what I already have.
Boom,
I've got that.

162
00:10:04.461 --> 00:10:08.690
And then I'm going to use homebrew installed Golang and live jpeg turbo,
uh,

163
00:10:08.780 --> 00:10:13.010
which is,
which is going to help with,
uh,
like image processing.
Right?

164
00:10:13.011 --> 00:10:17.250
So it's going to update homebrew.
It's going to download these packages.
Okay.
Um,

165
00:10:18.710 --> 00:10:19.200
<v 0>okay.</v>

166
00:10:19.200 --> 00:10:20.210
<v 1>All right.
So,</v>

167
00:10:21.700 --> 00:10:22.020
<v 0>okay.</v>

168
00:10:22.020 --> 00:10:25.020
<v 1>Right.
So for windows too.
Um,
all right,
so now we're on,</v>

169
00:10:25.021 --> 00:10:28.020
so we've got those dependencies and now we're going to install docker.

170
00:10:28.230 --> 00:10:31.230
So let's talk about docker for a second here.
Okay.

171
00:10:31.800 --> 00:10:35.070
People need to understand how awesome docker is.
So,

172
00:10:35.280 --> 00:10:38.610
so this is the docker website.
Okay.
So this is how we install docker.

173
00:10:38.611 --> 00:10:40.740
And depending on what operating system you are,

174
00:10:40.741 --> 00:10:44.490
there are different install processes.
I recommend the binary,

175
00:10:44.760 --> 00:10:48.630
whether you're on windows or Linux or Mac,
you should use the binary,
um,

176
00:10:48.960 --> 00:10:52.530
because it's just easier.
It's like a one click install.
Uh,
but there's also,

177
00:10:52.531 --> 00:10:53.820
you know,
you can install from source,

178
00:10:53.821 --> 00:10:57.690
but I would prefer my preference preferences binary.
Okay.
See,

179
00:10:57.691 --> 00:11:00.780
I've installed a binary docker and so I've seen like right up here,

180
00:11:00.781 --> 00:11:04.870
you see docker is running,
it's just running up there.
I've got,
you know,
uh,

181
00:11:05.490 --> 00:11:08.280
I could get my diagnostics and preferences and I can update them.

182
00:11:08.530 --> 00:11:10.850
So little pretty guy and that's fine.
Uh,

183
00:11:10.890 --> 00:11:14.880
but so let's talk about Daca for a second.
All right,
so docker is,

184
00:11:15.870 --> 00:11:18.420
so let me explain with docker.
So,
okay,
so what's a good analogy?

185
00:11:18.421 --> 00:11:22.350
Docker is kind of like a TV dinner.
Okay.
Uh,
it's,
it comes in a box.

186
00:11:22.351 --> 00:11:25.560
It's got everything you need right there in the box.
And when you're done,

187
00:11:25.561 --> 00:11:29.430
you just toss it away.
Okay.
So that's,
so docker is like,

188
00:11:29.700 --> 00:11:33.930
it tries to make apps like TV dinners and so virtual machines are kind of like

189
00:11:33.931 --> 00:11:36.780
that,
but they're not quite the same.
So it's like,
let me write this down.

190
00:11:37.050 --> 00:11:41.940
So like what is docker?
Docker,

191
00:11:42.070 --> 00:11:44.130
so let me,
let me make this bigger.
Oh,
okay.

192
00:11:44.131 --> 00:11:49.020
So let me waving doctor is like a TV dinner.
Okay.

193
00:11:50.730 --> 00:11:54.100
It's got everything you need,
loaded it

194
00:11:56.190 --> 00:12:00.460
in a meal all in one.
Right?
So docker,
it's kind of like a virtual machine,

195
00:12:00.461 --> 00:12:02.530
except it's less bloated than a virtual machine.

196
00:12:03.100 --> 00:12:07.660
So like a virtual machine,
but,

197
00:12:08.620 --> 00:12:12.460
but sinner,
so it's,
it doesn't have the bloat of a virtual machine.

198
00:12:12.730 --> 00:12:16.780
So Brooklyn machines typically including an entire operating system,
but I've,

199
00:12:16.781 --> 00:12:20.800
docker ecosystem has a central engine that can run multiple docker containers.

200
00:12:21.040 --> 00:12:24.640
So it cuts out the bloat of having multiple operating system and just simply,

201
00:12:24.641 --> 00:12:28.000
it just packages the runtime elements that you need.
Okay.

202
00:12:28.001 --> 00:12:31.360
So it's just a run 10 elements that your program needs and dockers.
Awesome.

203
00:12:31.361 --> 00:12:32.240
Because it,
you know,
it,

204
00:12:32.241 --> 00:12:35.530
it removes like all the dependency hell that comes with every app.

205
00:12:35.740 --> 00:12:38.530
Someone suggested.
I dockerize literally everything I do from now on,

206
00:12:38.680 --> 00:12:41.410
which I will seriously consider I need to get better at.
So that's a,

207
00:12:41.411 --> 00:12:45.700
that's a short primer on docker.
Okay.
So,
so in terms of docker,

208
00:12:45.850 --> 00:12:50.560
we're going to install docker and a TV dinner.
Is that docker?
Okay.

209
00:12:50.561 --> 00:12:52.540
So there were,
so we've installed,

210
00:12:52.570 --> 00:12:57.570
so we're going to install docker and [inaudible] run the binary for docker.

211
00:12:58.090 --> 00:13:02.830
Uh,
and so once you've installed the binary,
um,

212
00:13:02.890 --> 00:13:05.020
I'm not going to reinstall the binary for docker.
It's just,

213
00:13:05.021 --> 00:13:09.910
it's literally just like a three step process,
like next,
next finish.
Uh,
but once,

214
00:13:09.911 --> 00:13:13.180
once you've installed the binary,
it should be linked to your terminal.
Okay.

215
00:13:13.181 --> 00:13:17.950
So you'll be able to call it,
um,
from terminal.
Okay.
So,
um,
so,
and that's it.

216
00:13:18.010 --> 00:13:22.870
That's it.
So docker was the last step for that.
And,

217
00:13:24.310 --> 00:13:26.980
uh,
once we have that,
we're going to go ahead and create our agent.

218
00:13:26.981 --> 00:13:28.990
So they've got a,
they've got a sample agent here,

219
00:13:29.500 --> 00:13:31.420
but we're going to go ahead and just create our own.
Okay.

220
00:13:31.510 --> 00:13:35.820
So we're going to write up,
um,
so we're going to,

221
00:13:35.860 --> 00:13:39.050
we're going to go ahead and write up our script.
That's where it's going to go.

222
00:13:39.100 --> 00:13:44.080
Go right into it.
Okay.
So,
um,
let's,
let's go ahead and get started with this.

223
00:13:44.500 --> 00:13:46.240
Okay.
So the first thing I want to do,

224
00:13:46.270 --> 00:13:48.670
so let me talk about what this agent it's going to do.

225
00:13:48.880 --> 00:13:50.950
It's going to do two things.
Well,
first of all,

226
00:13:51.370 --> 00:13:54.130
the first thing is going to do is our age.
Our is going to do,

227
00:13:54.310 --> 00:13:56.560
our Bot will do two things.

228
00:13:57.730 --> 00:14:02.470
The first thing is going to do is determine,
uh,
should,
should,
should I turn

229
00:14:04.420 --> 00:14:08.260
right?
And then the next step is going to be um,

230
00:14:10.430 --> 00:14:14.170
where to turn.
It's a two step process where to turn,
okay.

231
00:14:14.171 --> 00:14:16.600
And this is going to be for the coaster racer game,
okay?

232
00:14:16.601 --> 00:14:19.870
With you can see right here,
okay,
this is the coaster rager get racer game.

233
00:14:20.020 --> 00:14:21.970
It's not going to be this default agent right here.

234
00:14:21.971 --> 00:14:24.560
We're going to build our own thing.
But it's going to be right.
So,
and uh,

235
00:14:24.930 --> 00:14:28.150
and by turning I'm talking about which direction,
right?
Laughter,
right?

236
00:14:28.420 --> 00:14:30.280
Which were,
which direction do we want to go?
Left.
Right.

237
00:14:30.281 --> 00:14:31.870
And that's what our Bot will do.

238
00:14:31.871 --> 00:14:33.790
It's gonna be about 70 lines of code and it's going to,

239
00:14:33.970 --> 00:14:38.200
it's going to decide where to turn.
Okay.
All right.
And um,
yes,

240
00:14:38.201 --> 00:14:42.540
it's reinforced learning.
Um,
and I'm using sublime text.
Uh,

241
00:14:42.700 --> 00:14:47.230
you guys are all awesome as well.
Thank you.
Okay,
so let's get started with this.

242
00:14:47.560 --> 00:14:51.690
So,
um,
the first step as always is to import our dependency.

243
00:14:51.690 --> 00:14:53.210
So the first one is going to be Jim.

244
00:14:53.570 --> 00:14:56.570
Why are we importing Jim if we're using universe?
Well,

245
00:14:56.571 --> 00:15:00.050
Jim is universities based off of Jim.
Jim was opening eyes,

246
00:15:00.080 --> 00:15:05.080
original attempt at creating an environment to run box in and they had games

247
00:15:06.411 --> 00:15:08.960
like cart pole,
you know,
they had things like that,

248
00:15:09.080 --> 00:15:11.450
but universe basically expanded on it like way more.

249
00:15:11.451 --> 00:15:16.070
So we're going to import boats.
Okay.
And so we've got both of those dependencies.

250
00:15:16.310 --> 00:15:20.070
And then we're going to import random because,
uh,

251
00:15:20.150 --> 00:15:22.070
we're going to implement a random policy here,

252
00:15:22.100 --> 00:15:24.980
but it couldn't be a smart random policy that's using reinforcement learning.

253
00:15:25.340 --> 00:15:26.690
Okay?
So I'll talk about that in a second.

254
00:15:26.691 --> 00:15:29.270
But those are our only three dependencies are,

255
00:15:29.271 --> 00:15:30.710
those are our only three dependencies.

256
00:15:30.711 --> 00:15:34.070
And now we can go ahead and create our main function.
All right.

257
00:15:34.460 --> 00:15:38.610
Our main function,
the first step is going to be to initialize our environment.

258
00:15:39.170 --> 00:15:42.560
Okay.
So we'll say,
what is our environment going to be like,

259
00:15:42.561 --> 00:15:44.290
what is the game that we want to play?

260
00:15:44.720 --> 00:15:49.580
So Jim has a make method that lets us define what the environment is going to

261
00:15:49.581 --> 00:15:51.590
be.
And I'm going to define it right here.

262
00:15:51.591 --> 00:15:54.800
I'm going to say this is calling to be that it's going to be a flash game called

263
00:15:54.890 --> 00:15:58.820
poster racer at the flash game called coaster racer.
And

264
00:16:00.350 --> 00:16:01.850
I think this might be a little too big.

265
00:16:01.851 --> 00:16:05.100
So I'm going to just go down a little bit.
Okay.
So that's what it's,

266
00:16:05.200 --> 00:16:09.230
it's initializing our environment.
Um,
and it's going to be Kosta racer.
Okay.
Um,

267
00:16:11.480 --> 00:16:13.010
so that's what that is.
And let me,
so,

268
00:16:13.011 --> 00:16:17.960
so a little primer on what's happening here.
So,
uh,
so this is,

269
00:16:17.990 --> 00:16:20.960
this is going to initialize our universe environment,
um,

270
00:16:21.050 --> 00:16:25.700
and initializes universe environment.

271
00:16:25.880 --> 00:16:26.600
And what does that mean?

272
00:16:26.600 --> 00:16:29.120
There are two things happening when we're initializing or environment.

273
00:16:29.240 --> 00:16:33.560
There's a client and there's a remote.
So the client is a BNC environment.

274
00:16:33.561 --> 00:16:34.730
That's where the agent lives.

275
00:16:34.950 --> 00:16:39.440
A VNC is a virtual net is stands for virtual network computing.
So,
you know,

276
00:16:39.441 --> 00:16:41.480
when I was 16,
I like a little script kitty.

277
00:16:41.481 --> 00:16:43.160
I used to hack into these just for fun.

278
00:16:43.430 --> 00:16:47.510
But basically it's a way to share desktop screens with you know,
two people.

279
00:16:47.511 --> 00:16:50.570
So you can,
you know,
if you're using the BN,
so bncs kind of like a protocol.

280
00:16:50.571 --> 00:16:54.800
It lets you see what's happening in another,
um,
computer.
Right?

281
00:16:55.220 --> 00:16:58.790
And so the reason they're using DNC is because these games are running inside of

282
00:16:58.791 --> 00:17:03.470
it.
This,
this,
um,
essentially a virtual machine,
but it's a docker container,

283
00:17:03.471 --> 00:17:06.620
right?
It's like an operating system inside of a docker container,

284
00:17:07.170 --> 00:17:10.040
which we're going to see in a second.
So the NCE is the way it communicates.

285
00:17:10.070 --> 00:17:14.450
And so it's a client and a server.
And so the client is the agents,
sorry,

286
00:17:14.451 --> 00:17:18.790
not a client serve a client or remote.
The client is the agent.
That's,

287
00:17:18.791 --> 00:17:19.970
that's what's running all of the,

288
00:17:20.090 --> 00:17:22.850
that's what's deciding what the keyboard and announced actions are going to be.

289
00:17:23.150 --> 00:17:26.330
And then the remote is the environment and the remote is going to be local.

290
00:17:26.510 --> 00:17:29.660
I know it's weird that it's called remote,
but it's actually,
but it's local.

291
00:17:29.661 --> 00:17:32.960
It's our local docker container.
Now,
if we wanted to,

292
00:17:32.961 --> 00:17:36.230
we could upload this to a server and then have it all run there.

293
00:17:36.440 --> 00:17:39.980
And in fact we can actually say we want multiple docker containers so we could

294
00:17:39.981 --> 00:17:41.840
have multiple games running,
right?

295
00:17:41.930 --> 00:17:44.330
So one agent that's playing multiple games at once,

296
00:17:44.510 --> 00:17:47.450
but for this demo we're going to have this running locally and it's going to be

297
00:17:47.451 --> 00:17:51.340
a local doctor container,
right?
So that's a primer on what we're doing with,
uh,

298
00:17:51.420 --> 00:17:53.430
the environment.
So now the next,

299
00:17:53.480 --> 00:17:57.720
so the next step is to get our initial set of observations,
right?

300
00:17:57.721 --> 00:18:01.920
So right when the game stops starts,
let's get that.

301
00:18:01.950 --> 00:18:05.610
Let's get that by run a Tipi initial set of observation by running the reset

302
00:18:05.611 --> 00:18:09.990
method.
Okay.
Which will initialize our,
our environment.
Okay.
So that's that.

303
00:18:09.991 --> 00:18:12.210
That's for that steps for initializing our environment.

304
00:18:12.540 --> 00:18:15.520
Now we're going to initialize our variables.
Okay.
Uh,

305
00:18:15.640 --> 00:18:17.730
so we're going to initialize our variables and

306
00:18:20.460 --> 00:18:25.200
the answer to life.
Congratulations.
Um,
okay,
so illuminati confirmed always.

307
00:18:25.560 --> 00:18:27.390
So we're going to discharge our starting variables.

308
00:18:27.391 --> 00:18:28.950
What are these starting variables?
Well,

309
00:18:29.130 --> 00:18:32.160
there's a number of game iterations and we're going to define these later,

310
00:18:32.161 --> 00:18:33.450
but we're going to start off with zero.

311
00:18:33.810 --> 00:18:36.720
Both of these defined the number of game iterations,

312
00:18:37.020 --> 00:18:42.000
so numb of game iterations.
Okay.
So that's what those two do.
Um,

313
00:18:42.030 --> 00:18:44.400
and then this one is going to some,
uh,

314
00:18:44.520 --> 00:18:46.560
it's going to calculate the sum of our observations.

315
00:18:46.561 --> 00:18:48.720
So how many observations do we have?

316
00:18:48.990 --> 00:18:52.280
And we'll store that in the total sum variable,
which will,

317
00:18:52.340 --> 00:18:57.150
we'll initialize a zero.
Okay,
so that's for total sum of observations.
Um,

318
00:18:59.550 --> 00:19:03.030
the next one we want to create is the previous,
the previous total sum.
Right?

319
00:19:04.200 --> 00:19:06.720
And why do we want to do that?
Well,
we're going to compare both of those.

320
00:19:06.930 --> 00:19:10.260
We're going to compare the total sum of observations to the previous one when we

321
00:19:10.261 --> 00:19:13.450
implement our policy.
Uh,
and now,
and this is the,

322
00:19:13.451 --> 00:19:17.490
I'd probably the most important variable that the turn variable and we're going

323
00:19:17.491 --> 00:19:22.230
to based on whether or not this is true or false.
A,
we're going to turn okay.

324
00:19:22.260 --> 00:19:23.460
Because remember there's only,

325
00:19:24.150 --> 00:19:27.450
this is a driving game and there's only three moves to make.
Turn left,

326
00:19:27.690 --> 00:19:32.640
turn right or go forward.
Okay.
So speaking of,
uh,
turns,
let's define our terms,

327
00:19:33.840 --> 00:19:37.080
define our terms or keyboard actions.
Okay.

328
00:19:37.290 --> 00:19:42.060
So let's define our terms or keyboard actions.
We'll start off with left.
Okay.

329
00:19:42.061 --> 00:19:45.570
So this is,
this is going to be a left turn.
So a left turn,

330
00:19:46.630 --> 00:19:47.100
<v 2>okay.</v>

331
00:19:47.100 --> 00:19:49.860
<v 1>Is we're going to say our key event</v>

332
00:19:53.810 --> 00:19:57.550
is
aero up.

333
00:19:58.560 --> 00:20:02.600
Um,
true.
And let me explain this in a second,

334
00:20:02.630 --> 00:20:05.950
but let me just write this out.
So that's our first key events.
Um,

335
00:20:06.080 --> 00:20:06.990
and then our next,

336
00:20:07.040 --> 00:20:11.090
so let me just copy and paste that because I'm going to be reusing this,
right?

337
00:20:11.420 --> 00:20:12.620
So our next one

338
00:20:14.480 --> 00:20:18.590
is key event Arrow left.
Uh,

339
00:20:18.591 --> 00:20:19.510
which is going to be true.

340
00:20:19.540 --> 00:20:24.190
And then our last one is going to be key event Arrow a right?

341
00:20:24.250 --> 00:20:27.250
Which is going to be false.
Okay.
So there's that.

342
00:20:27.550 --> 00:20:28.780
So let me just copy this whole thing.

343
00:20:28.781 --> 00:20:31.720
Let me make this a little smaller so we can see what,
what's going on here.

344
00:20:32.100 --> 00:20:32.933
A little bit more.

345
00:20:34.320 --> 00:20:35.153
<v 0>MMM.</v>

346
00:20:35.870 --> 00:20:38.960
<v 1>Events or left or right up,
up,
up,
up.</v>

347
00:20:40.940 --> 00:20:41.990
All right.
So

348
00:20:42.910 --> 00:20:43.743
<v 0>mmm,</v>

349
00:20:45.690 --> 00:20:50.590
<v 1>right.
So the central left and I want one for a right.
So,
so that's your left.</v>

350
00:20:50.770 --> 00:20:54.370
So aero op is true.
Arrow left is false for this right one,

351
00:20:54.700 --> 00:20:57.310
and then it's going to be true for going rights.

352
00:20:57.580 --> 00:21:01.600
And then the last one's going to be forward.
Those are our three key positions,

353
00:21:01.870 --> 00:21:05.590
left,
right and forward.
Um,
and so for poor word it's going to be true.
False.

354
00:21:05.591 --> 00:21:08.620
False.
Okay.
So let me talk about what,
what this is.
Okay.

355
00:21:08.621 --> 00:21:12.310
So we've got three key events that we defined here,
left,
right and forward.

356
00:21:12.520 --> 00:21:16.480
And so why are we defining three different key events for one direction?

357
00:21:16.481 --> 00:21:19.750
Like left?
Well,
we want these two.
So these are going to,
um,

358
00:21:20.680 --> 00:21:25.220
these are a set of actions,
right?
And we want them to be like this because,
uh,

359
00:21:25.490 --> 00:21:28.960
uh,
they're going to happen synchronously.
They're going to happen synchronously.

360
00:21:28.960 --> 00:21:33.850
So whenever this is true,
we want this to be false.
So whenever this is false,

361
00:21:33.851 --> 00:21:37.420
we want this to be true.
So it's a format that we want to specify everything in,

362
00:21:37.450 --> 00:21:41.400
right?
So we're just standardizing this format.
We could easily just say,
well,

363
00:21:41.420 --> 00:21:44.500
key left is just going to be,
you know,
key left and none of the other two,

364
00:21:44.501 --> 00:21:47.710
but we want to standardize these so they're all in the same format,
okay.

365
00:21:47.711 --> 00:21:51.300
As we iterate through them,
uh,
for our game.
Okay.
So it's just,
it's,
it's,

366
00:21:51.301 --> 00:21:55.240
it's for formatting purposes to in a nutshell,
it's for formatting purposes.
Okay.

367
00:21:55.241 --> 00:21:58.510
Let me see what everybody's saying up here.
Area Ubuntu against you.
Cool.
Okay.

368
00:21:58.540 --> 00:22:01.480
So how do we interact with the pixels characters of the game?
Great question.

369
00:22:01.690 --> 00:22:06.070
So the Pixel data and the Pixel data is returned via the observation variable.

370
00:22:06.330 --> 00:22:08.710
Uh,
when you run the environments step method,

371
00:22:08.740 --> 00:22:13.090
which we're going to talk about in a second.
Um,
but right now,

372
00:22:13.120 --> 00:22:14.780
let's go ahead and,
um,

373
00:22:16.060 --> 00:22:20.650
go ahead and run our main logic.
Okay.
So we've defined our terms.
Uh,

374
00:22:20.651 --> 00:22:24.520
and so we're going to make a wild loop here.
So,
wild,
true.
Um,

375
00:22:25.690 --> 00:22:27.930
we're going to run this thing.
So this is,
you're kind of go,

376
00:22:28.000 --> 00:22:30.640
this is just going to run continuously.
So that's,
so that's for the,

377
00:22:31.030 --> 00:22:31.760
that's for the wildlife.

378
00:22:31.760 --> 00:22:35.740
So now we're going to increment our counter that a number of iterations.
Okay.

379
00:22:35.890 --> 00:22:39.340
So this is our counter,
so that,
so,
and we've already defined,

380
00:22:39.470 --> 00:22:42.520
but we're going to add one to it because well,
we're iterating,
right?

381
00:22:42.700 --> 00:22:47.500
We just started the game and now we implement,
we've iterated it by one.
So,
um,

382
00:22:48.900 --> 00:22:53.500
if at least one iteration,
then check if a turn is needed.

383
00:22:53.770 --> 00:22:56.950
Okay.
So now comes the fun part.

384
00:22:56.951 --> 00:23:01.730
So let's check in our observation,
um,
uh,

385
00:23:01.780 --> 00:23:05.950
variable.
Uh,
and we want to,
so we want the only,

386
00:23:05.951 --> 00:23:08.890
the first observation from this observation variable,

387
00:23:08.891 --> 00:23:11.890
which is essentially a list.
Uh,
but we,

388
00:23:12.490 --> 00:23:14.290
we only want the first one because we don't,

389
00:23:14.800 --> 00:23:18.250
we say zero because we don't have multiple games running,
right?
We only have one.

390
00:23:18.610 --> 00:23:22.450
So that's gonna be the first and only item in that,
in that list.
Okay?

391
00:23:22.451 --> 00:23:25.750
So if there's something there as in we've,
we've observed something,

392
00:23:25.990 --> 00:23:28.870
then it's time to check if we want to make a turn or not.

393
00:23:28.871 --> 00:23:33.240
So we've got some feedback from the game and now we're going to store,
uh,

394
00:23:33.370 --> 00:23:37.600
the,
uh,
we're going to store the reward and the previous score.
So

395
00:23:40.180 --> 00:23:43.510
in the previous score,
but we're going to say,
okay,

396
00:23:43.511 --> 00:23:47.330
we've got this variable called previous score,
which we define previously,
right?

397
00:23:47.510 --> 00:23:51.650
And it's just going to serve as a way for us to compare what we have now to what

398
00:23:51.651 --> 00:23:56.450
we had before and we're going to use that later,
that comparison.
Okay.
Um,

399
00:23:56.480 --> 00:23:58.520
so okay,
so we've got something from the game,
right?

400
00:23:58.521 --> 00:24:01.280
We're still in this if statement we go observe something,
right?

401
00:24:01.281 --> 00:24:04.100
So now we're going to check,
okay,
is it time to turn?

402
00:24:04.240 --> 00:24:07.640
I remember turn was initially subset to false.
Uh,

403
00:24:07.641 --> 00:24:10.970
but if it's true and we're going to determine whether or not we want to turn in

404
00:24:10.971 --> 00:24:12.080
a second,
we're going to create a bit,

405
00:24:12.290 --> 00:24:14.100
we're going to create a function for that call.

406
00:24:14.101 --> 00:24:16.940
Determine whether or not we want to turn.
But if,
if,
if,

407
00:24:17.090 --> 00:24:21.470
assuming it's true that we want to pick a random events,
okay,

408
00:24:23.030 --> 00:24:27.290
so the event is going to be,
um,
hold on.

409
00:24:27.500 --> 00:24:31.340
The event is going to be,
it's going to use that.
And remember we input,

410
00:24:31.341 --> 00:24:35.540
we imported that random,
uh,
library up there,
which is going to help us with this.

411
00:24:35.720 --> 00:24:40.460
So random dot choice,
pretty aqualina apt we lent aptly named,
right?

412
00:24:40.520 --> 00:24:45.020
So,
um,
so random toys is going to be an array of left.

413
00:24:45.350 --> 00:24:47.600
So we're going to choose between going left or right,

414
00:24:47.900 --> 00:24:50.750
and that's going to be the events.
So based on whether or not we turn,

415
00:24:50.751 --> 00:24:54.290
so remember there are two things happening here.
So there,
you know,
uh,

416
00:24:54.380 --> 00:24:59.090
should we turn?
So that's what it should we turn and then where to turn,

417
00:25:00.650 --> 00:25:04.190
where to turn.
And so this,
this is this answer the question where to turn,

418
00:25:04.310 --> 00:25:07.610
but we still haven't answered the question.
Should we turn?
And that's where the,

419
00:25:07.640 --> 00:25:09.410
that's where the reinforcement learning comes into play.

420
00:25:09.411 --> 00:25:11.360
And I'm going to talk about that in a second,
but let me check it.

421
00:25:11.361 --> 00:25:15.650
Everybody's following.
Everybody has,
every AI is so volatile.
Um,

422
00:25:15.770 --> 00:25:18.860
everybody's same.
It seems everybody's cool.
All right,
cool.
So,

423
00:25:20.540 --> 00:25:24.000
so where to turn is the next thing.
Okay.
So,
um,

424
00:25:24.080 --> 00:25:26.660
now we're going to perform an action.
Let's perform an action.

425
00:25:28.460 --> 00:25:31.010
So we're going to perform an action.
So the action is going to be,

426
00:25:31.370 --> 00:25:34.340
we're going to call it end,
right?
So,
um,

427
00:25:34.910 --> 00:25:37.580
so for the event,
so okay,

428
00:25:37.581 --> 00:25:39.950
so let me just cut this out of bent

429
00:25:42.380 --> 00:25:47.120
or ob in
observation.

430
00:25:48.480 --> 00:25:49.313
<v 0>Yeah.</v>

431
00:25:49.790 --> 00:25:54.600
<v 1>Okay.
And then we're going to,
so,
so,</v>

432
00:25:54.660 --> 00:25:59.370
uh,
right,
so,
so we say,
so,
so we ask should we turn and then where to turn?

433
00:25:59.520 --> 00:26:01.200
We got that event.
It's gonna be either left or right,

434
00:26:01.500 --> 00:26:04.380
and then we're going to perform an action based on that event.

435
00:26:04.381 --> 00:26:07.920
So based on whatever we see performed that random events,

436
00:26:08.070 --> 00:26:11.190
and that's going to be encapsulated in this action variable,
right?

437
00:26:11.340 --> 00:26:13.020
Whether or not,
whether or not we want to turn right,

438
00:26:13.140 --> 00:26:15.840
it's going to encapsulate it in this action variable,
which we're going to,

439
00:26:16.250 --> 00:26:18.900
which is going to be the input to our step method.
We haven't actually,

440
00:26:19.140 --> 00:26:22.210
we haven't actually implemented this action of,
of,
of,

441
00:26:22.240 --> 00:26:26.310
of our choice to randomly turn left.
Right?
We've only defined it's okay.

442
00:26:26.400 --> 00:26:30.360
So now we've,
we've done that.
Well,
let's set turned to false again,

443
00:26:30.361 --> 00:26:32.040
because remember it was true in this case.

444
00:26:32.250 --> 00:26:34.950
So now we're going to set it to false again because that's what we already

445
00:26:34.951 --> 00:26:38.220
turned.
Okay.
So now in the,

446
00:26:38.280 --> 00:26:42.960
the opposite case and the opposite case,
um,
let's see.
So,

447
00:26:43.620 --> 00:26:48.540
um,
oh,
so guess what guys?
So I missed one thing here.

448
00:26:48.750 --> 00:26:51.150
So the one thing I missed was saying,

449
00:26:52.620 --> 00:26:54.330
I've got this observation,

450
00:26:55.190 --> 00:26:58.080
so if n is greater than one,

451
00:26:58.540 --> 00:27:02.310
and so if at least one iteration has been made,
right?
So if,

452
00:27:02.520 --> 00:27:06.930
which I've already incremented if at least one iteration is made,

453
00:27:07.620 --> 00:27:11.820
check if turned is needed,
right?
So if at least one iteration is made,

454
00:27:12.000 --> 00:27:13.830
let me add that there.
Um,
this,

455
00:27:13.831 --> 00:27:17.100
that means that all of this has had to be indented,
boom,
boom,
boom.

456
00:27:17.450 --> 00:27:22.380
I'm going to go ahead and,
and dense and dense and dense index.
Okay.

457
00:27:22.740 --> 00:27:27.200
So I've been dented everything and now I'm going to,
um,

458
00:27:28.530 --> 00:27:32.910
check and the opposite case.
So if,
if not,

459
00:27:33.000 --> 00:27:37.380
if not so else,
if I'm not turned,

460
00:27:38.880 --> 00:27:39.713
okay,

461
00:27:42.630 --> 00:27:45.780
so it's no turn is needed.
So let me,
let me write that out.

462
00:27:46.560 --> 00:27:50.490
If no turn is needed,
go straight.
Right?

463
00:27:50.491 --> 00:27:53.670
So have no turn is needed and I still haven't determined this is coming up.

464
00:27:53.730 --> 00:27:56.790
Like should I turn or not?
And that's going to be the big reveal.

465
00:27:56.791 --> 00:28:00.150
Like how do we know whether or not the turn and that's a reinforcement learning

466
00:28:00.151 --> 00:28:04.890
step.
So
the action we're going to get,
um,

467
00:28:04.950 --> 00:28:06.000
it's going to be forward,
right?

468
00:28:06.001 --> 00:28:09.270
Which we've already defined based on whenever we see in our observations,

469
00:28:09.630 --> 00:28:14.490
observation underscore and right.
Okay.
So there's that.

470
00:28:14.491 --> 00:28:16.800
And then,
um,

471
00:28:17.670 --> 00:28:19.650
if there is an observation,

472
00:28:24.050 --> 00:28:26.690
the game has started and check out attorney is needed or not.

473
00:28:27.350 --> 00:28:32.180
The game has started.
Check if turn need it.
All right,

474
00:28:32.181 --> 00:28:36.940
so if there is an observation,
so yes.
Uh,

475
00:28:36.950 --> 00:28:41.560
observation.
Hold on man.
Words are hard up,

476
00:28:41.770 --> 00:28:46.460
sir.
Basin
zero.

477
00:28:47.420 --> 00:28:51.530
No,
and zero.
Everybody's following.
Everybody's calling.
Everybody's good.

478
00:28:53.390 --> 00:28:57.320
Everybody's good.
All right,
great.
Okay.
So,
um,

479
00:28:57.410 --> 00:29:00.760
observation and if it's not equal,
sorry,

480
00:29:00.980 --> 00:29:05.300
if it's not equal to none.

481
00:29:08.480 --> 00:29:11.570
Okay.
So if there is an observation,
Amy started checking the attorney as needed.

482
00:29:11.720 --> 00:29:15.350
So the,
so now we're going to uh,
uh,

483
00:29:15.410 --> 00:29:19.100
run are a function of robots defined with a reinforcement logic,
reinforcement,

484
00:29:19.101 --> 00:29:22.550
learning logic.
So total sum.
So here you're the variable that we're going to get,

485
00:29:22.730 --> 00:29:26.880
get back from this.
So total som,
uh,

486
00:29:27.100 --> 00:29:28.940
previous total.
These are our variables.

487
00:29:28.950 --> 00:29:31.130
I'm going to define what each of these do.
Um,

488
00:29:31.150 --> 00:29:34.270
so they're going to be four variables that we get back.
So total som,
previous,

489
00:29:34.271 --> 00:29:39.271
total sum a j and then determine turn.

490
00:29:40.360 --> 00:29:41.200
That's our,

491
00:29:41.320 --> 00:29:44.710
that's the name of our function that we're going to define based on whether or

492
00:29:44.711 --> 00:29:48.730
not we want to turn based on what we see in our environment,
the observation

493
00:29:50.710 --> 00:29:53.470
and in that first environment and the only environment,

494
00:29:53.471 --> 00:29:57.460
which is why we say z j is that iteration variable that we defined earlier,

495
00:29:57.790 --> 00:30:00.130
but total sum,
which is the total sum of iterations.

496
00:30:00.280 --> 00:30:04.810
And then the previous total stone,
which is our way of comparing.
Okay.

497
00:30:05.010 --> 00:30:09.220
Oh and there's one more reward.
Those are what we're going to use.

498
00:30:09.221 --> 00:30:13.360
Those would be five variables we're going to use to determine whether or not we

499
00:30:13.361 --> 00:30:17.500
should be turning.
Okay.
Um,
so there's that.

500
00:30:18.040 --> 00:30:22.980
Um,
okay.
Ooh,
that's a big,
big,
big thick.
They're able,
okay.
I mean,

501
00:30:22.981 --> 00:30:25.990
so a big line or function.
Okay.

502
00:30:26.440 --> 00:30:28.630
So then we're going to save the new variable

503
00:30:30.300 --> 00:30:34.450
or variables for each iteration.
So now we've,

504
00:30:34.850 --> 00:30:37.780
we've determined,
so this is the end game,
right?
We've,

505
00:30:37.930 --> 00:30:41.290
we've run a reinforcement learning.
We've determined that yes,

506
00:30:41.291 --> 00:30:44.440
we want to turn and that's where we want to turn,
right?

507
00:30:44.510 --> 00:30:47.230
Or are we saw our two questions and now we're going to,

508
00:30:47.320 --> 00:30:50.410
we're going to implement that term or that action,
which is a term,
right?

509
00:30:50.660 --> 00:30:53.290
And it's going to return our four variables,
right?

510
00:30:53.300 --> 00:30:57.280
That OpenAI gives us whenever we run the environments step function,

511
00:30:57.281 --> 00:31:00.790
which is a timestamp,
right?
So it implements the action,
right?

512
00:31:00.850 --> 00:31:04.440
So that the action that we defined up here,
okay.
And then we,

513
00:31:04.690 --> 00:31:09.160
the last step is to render our environment,
right?
So we're always rendering it.

514
00:31:09.220 --> 00:31:13.040
We've,
we've got to render it for every time step.
Okay.
Um,

515
00:31:13.600 --> 00:31:15.960
and then obviously,
um,

516
00:31:16.510 --> 00:31:18.640
all have this like ending code,

517
00:31:18.641 --> 00:31:22.180
which is like if the name and what was it?

518
00:31:22.181 --> 00:31:23.680
It's like equals equals

519
00:31:27.240 --> 00:31:28.073
<v 0>mmm.</v>

520
00:31:33.140 --> 00:31:33.973
Maine.

521
00:31:38.160 --> 00:31:38.993
Then

522
00:31:41.730 --> 00:31:46.340
<v 1>if name Ben made.
Okay.
So there's that.
And um,</v>

523
00:31:48.270 --> 00:31:52.500
now we're ready to actually to create our,
um,

524
00:31:53.520 --> 00:31:57.270
determine turn steps.
So this is the reinforcement learning step.
Reinforce.

525
00:31:57.690 --> 00:32:01.320
So let's see.
Hold on.
This is our reinforcement learning step.

526
00:32:01.380 --> 00:32:04.320
Reinforce learning step.

527
00:32:04.321 --> 00:32:07.320
Let me check if everybody's on board reinforcement learning step.
Okay.

528
00:32:07.321 --> 00:32:10.230
So it's gonna be called death determine turn.
Okay.

529
00:32:10.290 --> 00:32:13.680
Let me check if everybody's on board real quick.
Um,
let's see.

530
00:32:14.160 --> 00:32:18.810
Main made me made thank you Rodrigo.
And shoe bomb.

531
00:32:19.500 --> 00:32:23.370
Uh,
okay.
So let me,
let me make sure.

532
00:32:26.010 --> 00:32:27.220
<v 0>Right.
Okay.</v>

533
00:32:28.850 --> 00:32:32.630
<v 1>Okay.
So now we're ready to determine our turn.
Okay.</v>

534
00:32:33.350 --> 00:32:38.270
Um,
okay.
So let's go ahead and,
and,
and write this step.

535
00:32:38.420 --> 00:32:42.980
Okay.
So,
um,
so turn,

536
00:32:43.250 --> 00:32:47.450
so remember those are,
what are our variables?
Well,
we,
we define those down here.

537
00:32:47.780 --> 00:32:51.620
Uh,
the observation,
the reward and um,

538
00:32:51.650 --> 00:32:56.390
and the previous total som,
the total som,
uh,

539
00:32:56.450 --> 00:33:00.120
observation and,
and then the turn.
So these are our variables.

540
00:33:00.150 --> 00:33:03.290
I'm just going to copy and paste those,
right,
cause we already defined them.
Uh,

541
00:33:03.320 --> 00:33:05.390
and well,
we don't need to add this cause it already,

542
00:33:05.780 --> 00:33:09.500
we don't need to add this index counter because it already knows that we're just

543
00:33:09.501 --> 00:33:12.340
going to make it something a little more pretty.
Okay.
So

544
00:33:13.870 --> 00:33:18.500
now we're ready to run this variable.
So,
okay,
so here's the basic logic.
So for,

545
00:33:18.800 --> 00:33:23.320
for every 15 iterations,
sum the sum,

546
00:33:23.330 --> 00:33:26.190
the total observations,
okay.

547
00:33:28.100 --> 00:33:30.500
And take the average,
that's what we're going to,

548
00:33:30.501 --> 00:33:34.670
we're going to take the average if it's lower than zero came to direction.

549
00:33:35.900 --> 00:33:36.733
Okay?

550
00:33:37.620 --> 00:33:38.200
<v 0>Okay.</v>

551
00:33:38.200 --> 00:33:41.250
<v 1>But that's what we're going to do.
Okay.
So,
um,</v>

552
00:33:44.370 --> 00:33:47.940
that's what we're going to do.
And um,
right,
so basically what this is,

553
00:33:47.970 --> 00:33:52.110
what this means is like if it's going to use the reward as,
as,
uh,

554
00:33:52.470 --> 00:33:56.960
as a,
as a,
uh,

555
00:33:57.850 --> 00:34:00.530
a pointer as a guide.
So if it,

556
00:34:00.570 --> 00:34:05.190
basically it's saying that if you've gone for 15 iterations and there's there,

557
00:34:05.310 --> 00:34:08.970
so let me just write this down.
So if,
if we go 15 iterations,
uh,

558
00:34:10.770 --> 00:34:15.380
with getting,
if we go 50 iterations and get a reward,
each step,

559
00:34:15.960 --> 00:34:18.270
we're doing something right.
We're doing something right.

560
00:34:18.990 --> 00:34:23.780
So that's when we want to turn,
that's when we turn.
Okay.
So,

561
00:34:23.810 --> 00:34:26.430
so,
okay.
So that's the basic logic goes,
let's go ahead and write this out.

562
00:34:26.610 --> 00:34:30.130
So if Jay is greater than or equal to 15,
right?
So,

563
00:34:30.430 --> 00:34:33.420
so Jay is going to be the,
our reward,
okay.
For this step.

564
00:34:33.450 --> 00:34:38.410
And basically it's saying,
okay,
if you've gone 15 iterations,
um,

565
00:34:38.640 --> 00:34:43.190
or more,
sorry,
it's 15 or more,
sorry,
15 plus iterations.
So,
um,

566
00:34:44.540 --> 00:34:48.960
if the total sum of,
of the,
uh,
iterations,

567
00:34:49.290 --> 00:34:51.720
uh,
sorry.
So if the total sum,

568
00:34:51.870 --> 00:34:56.790
which is the reward is the same as the iterations and how do we define sameness?

569
00:34:56.910 --> 00:35:00.360
Well,
sameness is going to be a division,
right?
If they're the same number,
uh,

570
00:35:01.530 --> 00:35:05.760
as in there's no remainder and current is going to be true.
Okay.

571
00:35:06.770 --> 00:35:11.700
Print is going to be true.
Um,

572
00:35:12.030 --> 00:35:13.440
well,
if it's not the same as in,

573
00:35:13.830 --> 00:35:17.520
well you haven't gotten a reward for every iteration that you've actually

574
00:35:17.521 --> 00:35:22.050
cracked,
sometimes then turn is going to be false.
Okay.
So this is how it's,

575
00:35:22.200 --> 00:35:26.610
it's reading,
uh,
a reward.
It's using the reward as a guide to,

576
00:35:26.611 --> 00:35:30.990
to determine whether or not to turn the actual direction to turn is random,

577
00:35:31.550 --> 00:35:33.480
but the,
but the,
but the,
but the,
um,

578
00:35:34.350 --> 00:35:38.760
the reinforcement learning is using the reward to whether or not the term.

579
00:35:39.210 --> 00:35:43.650
Okay.
So we still haven't defined the reward yet,
so that's going to come up.

580
00:35:44.040 --> 00:35:47.580
Uh,
so assuming that we've done this,
we've already defined,
you know,

581
00:35:47.610 --> 00:35:49.590
whether or not we want to turn,

582
00:35:49.740 --> 00:35:52.410
we can go ahead and reset these variables because we've already defined them.

583
00:35:52.660 --> 00:35:56.880
They played out what w w what we want it and we're going to go ahead and reset

584
00:35:56.881 --> 00:36:01.260
them.
Okay.
So that includes the sum of rewards,
the iteration cal,
which,

585
00:36:01.310 --> 00:36:06.300
and also the previous total,
sorry.
No,
and so the previous total that this is,

586
00:36:06.301 --> 00:36:07.940
this is when it gets that,
uh,

587
00:36:08.100 --> 00:36:11.460
the value of the total song because we've reset the total som.

588
00:36:11.490 --> 00:36:16.260
And now the previous little is going to get what happened before.
Um,
okay.

589
00:36:16.290 --> 00:36:21.060
And so,
and it's a way of storing what we had before.
Um,
just so we know what,

590
00:36:21.061 --> 00:36:22.450
what we had before,
it's just,
it's,

591
00:36:22.451 --> 00:36:25.950
it's good to give a counter of that and we can extend that to,
okay.

592
00:36:25.951 --> 00:36:27.270
So let me make sure everybody's following.

593
00:36:30.940 --> 00:36:33.440
All right.
Thanks Frank's world.
Uh,

594
00:36:37.360 --> 00:36:39.710
all right,
cool.
All right,
cool.
So,
um,

595
00:36:43.980 --> 00:36:47.760
previous total sum.
Total sum.
Okay.
Total sum.

596
00:36:50.480 --> 00:36:53.780
Oh zero.
Okay.
So else

597
00:36:56.390 --> 00:37:00.900
we're going to say turn his false.
Basically if it,

598
00:37:01.010 --> 00:37:03.740
so this is the,
so this is if,
if it's not,

599
00:37:03.800 --> 00:37:07.140
if we're not receiving a reward every 15 iterations,
then we're gonna,

600
00:37:07.380 --> 00:37:12.200
we're gonna say,
okay,
so don't turn.
Okay.
And so now we want to define,

601
00:37:13.500 --> 00:37:13.920
<v 0>yeah,</v>

602
00:37:13.920 --> 00:37:18.270
<v 1>now we want to define whether or not we want to hold on.</v>

603
00:37:19.380 --> 00:37:23.400
Now we want to make sure,
you know,
empty white space,
not necessary.

604
00:37:23.850 --> 00:37:27.450
Keep it clean.
You know how it is,
you know what it is.
So

605
00:37:29.800 --> 00:37:33.430
if we have an observation observation,

606
00:37:33.550 --> 00:37:36.610
and if we have an observation and

607
00:37:37.550 --> 00:37:38.080
<v 0>okay,</v>

608
00:37:38.080 --> 00:37:40.730
<v 1>well there's something there,
right?
If there's something there,</v>

609
00:37:40.820 --> 00:37:45.540
then we're going to say,
okay,
we want to increment the counter,
which,

610
00:37:45.770 --> 00:37:47.690
which,
which were comparing above.

611
00:37:48.230 --> 00:37:53.230
We're going to hit them at the counter and the sum and the reward some.

612
00:37:53.480 --> 00:37:56.330
Okay.
So let me write this out.
So J plus equal.

613
00:37:56.331 --> 00:38:00.760
So this is our counter j plus equals one.
And then total sum

614
00:38:03.700 --> 00:38:05.380
plus equals reward.

615
00:38:06.990 --> 00:38:11.160
<v 0>And,
and then</v>

616
00:38:12.170 --> 00:38:15.930
<v 1>awesome award.
Okay.</v>

617
00:38:15.931 --> 00:38:20.880
So now we're going to return
Kern,
Jay,
total,

618
00:38:20.881 --> 00:38:25.320
som,
everything that we calculated here and that's it.
Okay.

619
00:38:26.160 --> 00:38:30.720
Boom.
So let's go over what happened here.
Okay.
So,
um,
so okay,

620
00:38:31.230 --> 00:38:32.310
let's go through this step by step.

621
00:38:32.730 --> 00:38:36.800
We initialized our environment and then a set of variables,
right?
That were,

622
00:38:36.970 --> 00:38:41.920
that we were later going to use.
Okay.
Then we define three actions,

623
00:38:42.010 --> 00:38:45.160
right?
Three keyboard events going left,
going right or going forward,
okay.

624
00:38:45.161 --> 00:38:46.480
And so because that's all we're going to do.

625
00:38:46.930 --> 00:38:49.570
So then we started this while loop because this is just going to keep on running

626
00:38:49.571 --> 00:38:52.480
as you know,
forever.
And we said,
and we said,
okay,

627
00:38:52.650 --> 00:38:54.790
so let's increment our counter because,
well,

628
00:38:54.791 --> 00:38:59.550
this for every step that we're running.
And then we said,
if you've met,

629
00:38:59.580 --> 00:39:04.390
if our game has made at least one or iteration check,
if we need to turn.
And so,

630
00:39:04.690 --> 00:39:07.690
okay,
so assuming that we've made at least one,
one iteration,

631
00:39:07.770 --> 00:39:10.920
so the game has moved one time step get well,
uh,

632
00:39:10.960 --> 00:39:15.460
and we have something that we're seeing.
We're right,
the,
the,
the,
the uh,

633
00:39:15.461 --> 00:39:17.350
observation of the game,
um,

634
00:39:18.700 --> 00:39:21.080
which depends on whatever game we have.
Uh,

635
00:39:21.130 --> 00:39:24.280
we're going to store their award and the previous score and then determine if we

636
00:39:24.281 --> 00:39:29.030
should turn or not.
So if we do turn that,
we're going to pick a random turn,

637
00:39:29.680 --> 00:39:33.370
either left or right and capsulate that inside of an action variable and then

638
00:39:33.400 --> 00:39:37.180
said,
turned to false again,
because we've already done our action else.

639
00:39:37.210 --> 00:39:39.160
If no turn is needed,
just keep going straight.

640
00:39:39.670 --> 00:39:43.270
And this is how we determine whether,
uh,

641
00:39:43.330 --> 00:39:46.960
whether or not we want to term with this determines turn function.

642
00:39:46.961 --> 00:39:50.130
And we use those variables we defined previously.
And then we,
uh,

643
00:39:50.170 --> 00:39:51.760
actually implement that term.

644
00:39:51.760 --> 00:39:54.820
Has a turn as an action using the environment step function,

645
00:39:55.150 --> 00:39:59.410
how do we determine whether or not we want to turn?
Well,
for every 15 iterations,

646
00:39:59.411 --> 00:40:03.610
we sum the total observations and we take the average.
If it's lower than zero,

647
00:40:03.640 --> 00:40:04.600
we change the direction.

648
00:40:04.930 --> 00:40:07.840
If we go 15 plus iterations and get a reward at each step,

649
00:40:08.020 --> 00:40:11.230
we're doing something right.
And that's when we turned,
that's our signal.
Right?

650
00:40:11.240 --> 00:40:13.900
And why 15 well,
it could be 16 it could be 17.

651
00:40:13.901 --> 00:40:15.460
It's arbitrarily going to be 15 right now.

652
00:40:15.940 --> 00:40:17.440
So if it's greater than or equal to 15,

653
00:40:17.441 --> 00:40:20.920
we'll take that some divide by the number of rewards that we got.

654
00:40:21.100 --> 00:40:23.950
And if it's the same,
if we,
if we've been doing it right this whole time,

655
00:40:24.220 --> 00:40:28.300
turn or else don't turn reset our variables.
And then,
uh,
this,

656
00:40:28.301 --> 00:40:32.230
this code down here is how we get that,
some of the awards and the terms.
Okay.

657
00:40:32.350 --> 00:40:36.980
So that's a basic explanation.
I'm going to go ahead and run this.
All right.

658
00:40:37.790 --> 00:40:41.840
Um,
all rights and,

659
00:40:43.690 --> 00:40:44.523
<v 2>yeah.</v>

660
00:40:44.640 --> 00:40:47.660
<v 1>Okay.
So,
so let's go ahead and run this code.
All right.
Um,</v>

661
00:40:48.420 --> 00:40:51.060
we'll go ahead and run this code.
Um,

662
00:40:52.830 --> 00:40:56.340
I'd saying,
what'd I call it?
They call this demo.
Um,

663
00:40:57.450 --> 00:41:01.130
right.
So where did I put demo?

664
00:41:03.030 --> 00:41:07.710
Put it somewhere.
Probably in here,
right?

665
00:41:07.980 --> 00:41:11.760
So,
uh,
python.
So let me make this bigger.
Whoa,
wait,
digger.

666
00:41:12.180 --> 00:41:17.040
So Python,
Demo.
Dot.
Pi Demo Dot Chi.
So now we're going to run this baby.

667
00:41:17.370 --> 00:41:21.900
Boom.
It's connecting to our local docker container,
which has our DNC server.

668
00:41:22.680 --> 00:41:27.210
Um,
web socket connection.
Failed.
Whoa.
Okay.

669
00:41:27.211 --> 00:41:29.310
Let's see what's happening here.
Uh,

670
00:41:31.920 --> 00:41:35.030
let's see.
Let's see.
Let's see.
Let's see.
Um,
okay,

671
00:41:35.060 --> 00:41:38.390
so I'm going to close out this.
Let's try that again.

672
00:41:38.391 --> 00:41:42.770
Sometimes if you open another window,
it starts working.
So,

673
00:41:46.020 --> 00:41:50.880
oh shit.
Okay.
So websocket closing on handshake.
Um,

674
00:41:51.810 --> 00:41:54.780
wow,
this was working right before I started the live stream.
Okay,

675
00:41:54.781 --> 00:41:57.690
so let's figure what is going on here.
Um,

676
00:41:58.980 --> 00:42:03.150
so I,
well first of all,
first of all,
okay,
here's,
here's what it is.

677
00:42:03.500 --> 00:42:08.370
Uh,
so online 80
line 80 in Maine,

678
00:42:09.210 --> 00:42:13.080
forward an observation line 80,
what is happening

679
00:42:14.760 --> 00:42:18.930
for observation,
observation.
Let's see what's happening here.

680
00:42:19.500 --> 00:42:22.980
Um,
environment don't render.

681
00:42:24.120 --> 00:42:28.740
Uh,
okay.
So what I've been saying here is,

682
00:42:30.270 --> 00:42:30.660
<v 2>okay,</v>

683
00:42:30.660 --> 00:42:34.170
<v 1>ELLs if turn forward for observation in opposite,</v>

684
00:42:34.200 --> 00:42:37.890
if you guys have a suggestions open to those too.
Um,

685
00:42:37.920 --> 00:42:39.090
let me see what people are writing here.

686
00:42:42.720 --> 00:42:47.040
Okay.
So,
oh,
capital f,
that might be it.

687
00:42:47.400 --> 00:42:51.450
That is that what it is?
Is it that I defined it as a capital f?
Oh yes,
yes.

688
00:42:51.451 --> 00:42:56.230
Thank you.
Okay,
so now let's run this thing at that.
Uh,

689
00:42:58.620 --> 00:43:03.060
Yo,
yes.
Okay,
awesome.
Yo Yo yo Yo yo yo yo yo yo yo yo yo.
Okay,
awesome.

690
00:43:03.760 --> 00:43:05.840
Yo Yo yo.
Okay,
great.
So what is due?

691
00:43:05.850 --> 00:43:09.210
It's connected to our local docker container using the VNC protocol.
Remember?

692
00:43:09.300 --> 00:43:12.930
So this is a,
this is a,
this is a,
a kind of like a virtual machine,
but it's,
it's,

693
00:43:13.100 --> 00:43:17.820
it's inside of this docker container as a BNC,
um,
using the VNC protocol.

694
00:43:18.240 --> 00:43:19.073
And

695
00:43:20.700 --> 00:43:23.580
so now it's going to connect to get hub and it's going to,

696
00:43:25.960 --> 00:43:28.730
let's see,
let's see what's happening here.
Uh,

697
00:43:30.430 --> 00:43:34.270
come on baby.
Yes.
You know what it is.
So here's our game.

698
00:43:34.271 --> 00:43:37.900
It's about to start a,
it's going to load up and then it's going to run our code.

699
00:43:39.850 --> 00:43:43.730
Alright,
C'mon coast to race or you know what it is

700
00:43:48.630 --> 00:43:51.600
preparing graphics.
How great is that?
Preparing graphics.

701
00:43:52.050 --> 00:43:56.160
That's some flash shit right there.
Okay man,
it's laggy,
but okay.

702
00:43:56.850 --> 00:44:00.840
It's every 15 times steps.
So,
so iterations move fast in the game,
right?

703
00:44:00.841 --> 00:44:04.710
So it's like 15 steps are happening every like second.
Okay.
Um,

704
00:44:05.830 --> 00:44:08.460
and as you can see,
it's,
it's determining like,
oh,

705
00:44:08.490 --> 00:44:10.620
if I hit something that I shouldn't be doing that.

706
00:44:10.621 --> 00:44:12.450
So randomly moving to different directions.

707
00:44:12.570 --> 00:44:14.820
If I hit something randomly moving in a different direction,
it doesn't,
no,

708
00:44:15.360 --> 00:44:17.910
it doesn't.
No.
Like if it hits something on the left move,
right,
or it's,

709
00:44:17.911 --> 00:44:19.200
it has something on the right to move left,

710
00:44:19.380 --> 00:44:21.540
but it does know what they hit something with it.

711
00:44:21.541 --> 00:44:24.360
If it's not doing something right for 50 iterations,
stop.
Okay.

712
00:44:24.780 --> 00:44:27.630
So there's a demo code.
I wrote that run for a little bit.
It's kind of laggy,

713
00:44:27.631 --> 00:44:32.160
but it's pretty cool.
Right?
Um,
boom.

714
00:44:32.161 --> 00:44:37.110
We fat,
we've fall,
fall in,
and it's just going to keep on going.
Okay.

715
00:44:37.111 --> 00:44:41.160
So I'm going to exit out of that.
I'm going to go back to you guys.
Quit.

716
00:44:41.910 --> 00:44:43.860
Quit out of terminal,
uh,

717
00:44:43.861 --> 00:44:48.861
terminates as a terminator says and then open up this.

718
00:44:50.570 --> 00:44:51.403
<v 2>Okay.</v>

719
00:44:51.730 --> 00:44:56.320
<v 1>Screen sharing.
Okay.
So I,
okay.
So,
uh,</v>

720
00:44:56.560 --> 00:44:59.920
last five minute Q and a and then we're good to go.
All right.

721
00:45:02.620 --> 00:45:06.630
Okay.
All right.
So,

722
00:45:07.950 --> 00:45:12.870
uh,
I neural network is not in 11 and lines of code such as nine.
This is my code,

723
00:45:12.871 --> 00:45:15.160
right?
Yes.
Mick.
So Mick,
yes,
this is,
this is,
uh,

724
00:45:15.300 --> 00:45:17.280
one of our challenge winners code Nick Ben Holes.

725
00:45:17.490 --> 00:45:19.530
This was one of his entries for the challenge.
I just,

726
00:45:19.740 --> 00:45:22.260
I really liked it and I wanted it to demo for you guys because I thought it was

727
00:45:22.560 --> 00:45:26.550
not hard enough that it was like going to take like two,
three hours,

728
00:45:26.670 --> 00:45:30.740
but it wasn't easy enough where it was like,
just like trivial.
This was it.

729
00:45:30.750 --> 00:45:33.900
This was use reinforcement learning and it was a,
it was a good example of that.

730
00:45:34.430 --> 00:45:39.120
Um,
where is the,
okay,
uh,
any good examples of universe?

731
00:45:39.200 --> 00:45:43.170
I'll post some examples in the description on tutorial,
on gang check search,

732
00:45:43.171 --> 00:45:45.480
generative adversarial networks.
On getting on Youtube.

733
00:45:45.750 --> 00:45:47.640
My video is probably the first one that that's going to pop up.

734
00:45:47.880 --> 00:45:49.320
I'm going to do more in the future for sure.

735
00:45:49.440 --> 00:45:51.660
I'm actually kind of waiting for that to get a little better because there's a

736
00:45:51.661 --> 00:45:55.290
lot of possibilities with cans,
like seriously,
like seriously,

737
00:45:55.291 --> 00:45:59.190
like generative models for video.
Like I mean like we could,

738
00:46:00.270 --> 00:46:03.620
we could generate movies and,
and then say,
I want to be in this movie.
Uh,

739
00:46:03.670 --> 00:46:06.780
assuming it was good enough and had enough data,
like I want you to,
to,
to,

740
00:46:06.870 --> 00:46:10.200
to generate star wars except put me in it and like not have gungan.

741
00:46:10.201 --> 00:46:13.500
It's like not have jar jar Binks.
Like that's the level of where we could get to.

742
00:46:13.501 --> 00:46:16.170
Like that's where I see the trajectory of moving in generative models.

743
00:46:16.171 --> 00:46:20.760
It's incredible.
With Ai,
if you can dream it's,
it's possible.
If you can dream it,

744
00:46:20.790 --> 00:46:21.623
it's possible.

745
00:46:21.780 --> 00:46:24.630
Where did you learn machine learning techniques on the Internet from machine

746
00:46:24.631 --> 00:46:28.660
learning sub reddit from Twitter,
from implementing code myself on get hub,
uh,

747
00:46:28.740 --> 00:46:31.470
from,
uh,
courses like,
uh,

748
00:46:32.310 --> 00:46:36.310
Andrew Ng's course and from the deep learning course on your Udacity,
how are,

749
00:46:36.330 --> 00:46:39.360
how are you sure this code actually learns because it's receiving the reward and

750
00:46:39.361 --> 00:46:42.330
it's moving based on the reward.
What's happening on Friday party?

751
00:46:42.331 --> 00:46:45.000
I can't answer that right now,
but you're going to love it.

752
00:46:45.270 --> 00:46:46.710
What do you think of the new apple paper?

753
00:46:50.720 --> 00:46:51.553
<v 2>Okay,</v>

754
00:46:52.720 --> 00:46:56.740
<v 1>I'll give apple.
I still don't,
I still don't fully,
you know,</v>

755
00:46:56.850 --> 00:47:01.390
respect apple yet,
but if they,
if they're,
if they keep going with this,

756
00:47:01.760 --> 00:47:05.440
you know,
this open source stuff,
you know,
there's,
there's some potential there.

757
00:47:05.530 --> 00:47:08.650
How did you get your first 10 youtube subscribers just by posting videos?

758
00:47:08.680 --> 00:47:13.600
Even though I just,
even though people didn't like him that much,

759
00:47:13.690 --> 00:47:18.380
I just had,
I just believed in myself.
I,
I just like,
you know,

760
00:47:18.410 --> 00:47:22.990
reinforce a positive feedback loop.
Um,
practical,
practical application for this,

761
00:47:23.040 --> 00:47:26.500
uh,
for this specific Bot.
Um,
uh,
any kind of racing game.

762
00:47:26.501 --> 00:47:28.720
That movie that's moving left and right.
This could be applied to,

763
00:47:29.050 --> 00:47:33.720
did you check Song Hahn's paper?
I attached a not yet.
I've been really busy.
Um,

764
00:47:33.850 --> 00:47:37.780
but I will,
uh,
how to be a good programmer.
Um,
make a video on that.

765
00:47:37.810 --> 00:47:41.350
Watch all my videos.
Saroj custom voice assistant video,
um,

766
00:47:41.860 --> 00:47:44.980
custom voice assistant.
Uh,
that's a good question.

767
00:47:44.981 --> 00:47:47.140
I haven't been voice specifically a voice assistant.

768
00:47:47.141 --> 00:47:50.200
I then build a tensor flow chat Bot,
but not a voice version of that.

769
00:47:50.201 --> 00:47:51.590
So that's gonna come up.
Um,

770
00:47:53.600 --> 00:47:54.280
<v 2>okay.</v>

771
00:47:54.280 --> 00:47:57.000
<v 1>What do you think of Microsoft Azure ml?
Actually,
you know,</v>

772
00:47:57.600 --> 00:48:01.950
Microsoft is a surprisingly starting to get cool again.
I mean it's,

773
00:48:01.951 --> 00:48:06.570
it's uh,
it's incredible.
Like what,
what,
uh,
Satya Nadella has done.
He's,

774
00:48:06.571 --> 00:48:10.280
he's,
he's taking Microsoft in a diff different direction.
So I'm,
um,

775
00:48:12.110 --> 00:48:14.540
yes,
Mick,
I'm going to add the link to the descriptions.
Haste.
Raj,

776
00:48:14.541 --> 00:48:19.430
what's next guys?
Just wait for Friday.
Um,
wait for Friday.
Seriously?
Like,

777
00:48:20.090 --> 00:48:23.180
wait for Friday.
Are you going to do interview videos?
Yes.

778
00:48:23.630 --> 00:48:28.310
I'm going to do those soon.
Yeah,
I mean,
it's not any immediate plan.

779
00:48:28.311 --> 00:48:32.830
Maybe in two to a weeks wrap on universe.
As always,
I've got a rap.
Um,

780
00:48:33.890 --> 00:48:38.660
okay,
so wrap on universe.
Okay.
I've got a game,
but I do it without a thought.

781
00:48:38.840 --> 00:48:40.670
I'll look at the future and think,
man,

782
00:48:40.910 --> 00:48:44.970
I got to go away from here and find my flow.
Man,

783
00:48:44.971 --> 00:48:48.240
my world is so high.
I'm so in the sky.
I'm like a universe.

784
00:48:48.270 --> 00:48:51.390
My mind is so same.
Um,

785
00:48:51.510 --> 00:48:56.450
like a fly on a wall as the universe comes down with planets,
my mind,

786
00:48:56.460 --> 00:49:01.260
mind.
Okay,
that was it.
Um,
that was my dough.
Be Heights,
man.
Yo,

787
00:49:01.261 --> 00:49:04.470
get heights,
get hives,
get,
get hyped,

788
00:49:05.190 --> 00:49:07.680
get super hyped because this is,
this is huge.

789
00:49:07.710 --> 00:49:11.400
I am meeting some important people today.
Okay.

790
00:49:11.430 --> 00:49:15.270
So are you a vegetarian?
No.
Um,
okay.

791
00:49:15.271 --> 00:49:18.020
So bars.
Okay.
So,
uh,

792
00:49:18.450 --> 00:49:20.930
have you looked into a hierarchical temporal memory by Numenta?

793
00:49:21.060 --> 00:49:25.170
Yo Numenta as great as Jeff Hawkins book on intelligence is,
and as,

794
00:49:25.290 --> 00:49:28.290
as much as I love the idea of artificial general intelligence,

795
00:49:28.740 --> 00:49:30.990
Numenta hasn't really done anything,

796
00:49:33.250 --> 00:49:37.080
know it hasn't published results that,
that compared to deep minds.
Uh,

797
00:49:37.090 --> 00:49:41.380
and they're kind of a joke in the community.
So,
you know.
Yeah.

798
00:49:41.410 --> 00:49:44.590
And also there hasn't been any real innovation.
I mean,
people have known this,

799
00:49:44.690 --> 00:49:48.310
you know,
this kind of hierarchical thing happening in the brand.
But anyway,

800
00:49:48.311 --> 00:49:53.130
so Ilan,
uh,
uh,
high vehicles,
hype,
Elan.
Uh,

801
00:49:53.160 --> 00:49:56.540
all right,
cool.
So yeah,
it's,

802
00:49:58.190 --> 00:50:03.010
it's not Ilan.
Uh,
but it will be not,
not yet.
Um,
not,
not elan.
Eventually,

803
00:50:03.100 --> 00:50:05.710
you know,
maybe later this year I'm taking my time.
I know that.

804
00:50:05.830 --> 00:50:09.340
I know what's going to happen.
Well,
we're,
we're,
we're going to Yo,
it's,
it's us.

805
00:50:09.341 --> 00:50:12.790
You know what I'm saying?
It's we,
we are a squad guys.
We are,
we are an army.

806
00:50:12.791 --> 00:50:16.030
We are a force.
We are a movement and we're going to get everybody.

807
00:50:16.031 --> 00:50:19.480
We are going to get the attention of the entire world.
Okay?

808
00:50:19.481 --> 00:50:22.870
We are going to get the attention of everybody because this is a war path that

809
00:50:22.871 --> 00:50:27.470
we're on.
We're going to solve intelligence.
Okay.
So that's it for this video.

810
00:50:27.800 --> 00:50:32.500
I love you guys.
Thanks for watching.
Um,
Andy,
for now.

811
00:50:32.530 --> 00:50:36.100
I've got to go start a revolution or sorry,
continue a revolution.

812
00:50:36.310 --> 00:50:38.170
So thanks for watching.

