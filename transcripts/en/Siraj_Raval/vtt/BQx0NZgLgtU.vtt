WEBVTT

1
00:00:00.020 --> 00:00:01.380
Oh world,
it's a Raj.

2
00:00:01.410 --> 00:00:04.770
And today we're going to talk about a product called data wallet,

3
00:00:05.100 --> 00:00:07.710
which is a decentralized data exchange.

4
00:00:07.740 --> 00:00:12.000
This is really important because this is our a way for us to get to a future

5
00:00:12.180 --> 00:00:15.990
where users can own and profit from their data,
right?

6
00:00:15.991 --> 00:00:19.860
With the old delete Facebook campaign,
et Cetera,
et cetera.
Um,
and we're going to,

7
00:00:19.920 --> 00:00:22.710
we're going to at the end build a solidity contract.

8
00:00:22.920 --> 00:00:26.700
So what you're seeing here is a tic Tac toe game built in solidity.

9
00:00:26.701 --> 00:00:30.510
So it's running on the ethereum blockchain.
So if I hit start game,

10
00:00:30.511 --> 00:00:32.910
I have to make sure that the players addresses are different.

11
00:00:33.240 --> 00:00:37.320
I'll hit start game in a loaded,
load them up,
I'll play a move,
okay.

12
00:00:37.500 --> 00:00:41.160
And then the other player will make a move and each of these moves is on the

13
00:00:41.161 --> 00:00:45.090
blockchain.
So you can find a link to this demo in the video description.

14
00:00:45.330 --> 00:00:48.270
What I wanted to do was just show you something really cool that you can build

15
00:00:48.271 --> 00:00:49.990
into liberty really quickly,
uh,

16
00:00:50.050 --> 00:00:53.400
and then get back to this demo because at the very end we're going to build an

17
00:00:53.401 --> 00:00:56.790
exchange contract.
And solidity.
That's not this,
it's something different.

18
00:00:56.791 --> 00:00:59.190
But I just wanted to,
you know,
get you,
you know,

19
00:00:59.400 --> 00:01:02.280
whet your appetite a little bit about this stuff because it's really cool.

20
00:01:02.520 --> 00:01:05.850
So what is data wallet?
So if we look at this data wallet,
it's an Ios APP.

21
00:01:06.120 --> 00:01:07.080
They've got an android APP.

22
00:01:07.320 --> 00:01:10.680
But what it is is it's a blockchain based data exchange that I found that I

23
00:01:10.681 --> 00:01:13.020
think is really cool.
So you know,
open mind,

24
00:01:13.021 --> 00:01:15.570
there are several other data exchange platforms out there.

25
00:01:15.750 --> 00:01:20.310
And I really like this one.
Okay.
So the idea is that you can sign up for this,

26
00:01:20.311 --> 00:01:23.190
and this is kind of like the,
the flow of the APP that you can see right here.

27
00:01:23.460 --> 00:01:27.840
But the idea is that you sign up for this APP,
okay?
And then you can pull,

28
00:01:27.841 --> 00:01:31.620
so look at this image right here.
You can pull your data from Facebook,

29
00:01:31.621 --> 00:01:34.350
from Twitter,
from Airbnb,
from Amazon,

30
00:01:34.500 --> 00:01:38.220
all of these different centralize he word services.

31
00:01:38.221 --> 00:01:42.300
You can pull them into this APP,
right?
So it's storing all of that data in some,

32
00:01:42.520 --> 00:01:45.870
in,
in,
in one source.
Right?
And then once you have this source,

33
00:01:46.260 --> 00:01:51.120
you can get paid for this data to advertisers,
you know,
data and analysts,

34
00:01:51.121 --> 00:01:55.680
companies,
all sorts of people who want your data,
they pay you directly.

35
00:01:55.770 --> 00:01:59.580
There is no third party,
you know,
Facebook,
uh,
shout out to Facebook,

36
00:01:59.581 --> 00:02:03.060
go down Facebook.
But yeah,
none of that.
It's just they're paying you directly.

37
00:02:03.061 --> 00:02:07.950
So what this means is that users can generate a passive income from their data.

38
00:02:08.160 --> 00:02:12.210
This is very exciting and it's one of the first steps towards getting towards

39
00:02:12.211 --> 00:02:15.690
web 3.0 so,
so data wallet,

40
00:02:15.900 --> 00:02:20.850
it gives users complete ownership of their data and what they get is the data

41
00:02:20.851 --> 00:02:25.740
exchange token DXT so they have an internal token that act as both an asset,

42
00:02:26.130 --> 00:02:29.370
as both a currency and a as a security.

43
00:02:29.370 --> 00:02:32.400
So it appreciates in value over time as more people join the network.

44
00:02:32.820 --> 00:02:34.350
So you can either spend your DXC,

45
00:02:34.351 --> 00:02:38.670
you can convert it into Fiat or you can just hold Hoddle onto and just wait as

46
00:02:38.671 --> 00:02:41.520
the network grows and then that that's going to appreciate over time.

47
00:02:41.521 --> 00:02:44.340
And then you can sell it later on for much more does.
That's the idea behind,

48
00:02:44.341 --> 00:02:45.990
you know,
that's the token model,
right?

49
00:02:46.440 --> 00:02:51.440
So it also provides a data API for that enables developers to use this data to

50
00:02:51.781 --> 00:02:54.170
build apps.
And we'll,
we'll talk about that later.
But it's,

51
00:02:54.171 --> 00:02:57.360
it's kind of like an all in one solution.
So why is this useful?

52
00:02:57.361 --> 00:03:00.820
If you don't know in the past years hone it,
two years,

53
00:03:00.970 --> 00:03:04.570
90% of all data that exists has been created.

54
00:03:04.840 --> 00:03:08.320
That's insane.
Okay.
That's insane.
Two years,

55
00:03:08.770 --> 00:03:12.160
the majority of the world's data was created.
That's a lot of data.

56
00:03:12.160 --> 00:03:16.210
So we need new business models to help us interact with this data and profit

57
00:03:16.211 --> 00:03:17.044
from it.
Crucial.

58
00:03:18.250 --> 00:03:22.170
So the data you generate currently through your use of social media is,
well,

59
00:03:22.180 --> 00:03:25.330
you take a picture or you take a video,
et cetera.
I'll make a youtube video.

60
00:03:25.630 --> 00:03:29.380
It's monetized and controlled by these companies that you're uploading to.

61
00:03:29.770 --> 00:03:34.150
What data while it does is that let's you share data as you wish and earn money

62
00:03:34.151 --> 00:03:37.990
from it.
Okay.
So a data wall,
that profile gives you data mobility.

63
00:03:38.020 --> 00:03:43.000
It allows you to easily plug into any AI powered APP and get personalized

64
00:03:43.001 --> 00:03:45.190
services.
I'll talk about that in a second.
What I mean by that,

65
00:03:45.580 --> 00:03:50.560
but you can trade your anonymized data for two businesses or developers to less

66
00:03:50.561 --> 00:03:54.280
contract offers.
So it doesn't even have to be linked to your identity,

67
00:03:54.281 --> 00:03:58.660
to your name.
It could be your heartbeat,
your blood pressure,
your,
you know,

68
00:03:58.661 --> 00:04:02.260
where you live.
But it doesn't necessarily have to be linked to your identity.

69
00:04:02.261 --> 00:04:03.520
Like this is Saroj is no,

70
00:04:03.760 --> 00:04:07.900
this is just an identity of a person and here's everything else about them.

71
00:04:08.260 --> 00:04:11.200
So you can stay anonymous and profit from your data.
Best of both worlds.

72
00:04:11.770 --> 00:04:15.100
So what it's doing is it's using smart contracts to do this,

73
00:04:15.160 --> 00:04:17.020
and I'll talk about that in a second as well.

74
00:04:17.230 --> 00:04:21.100
But contract specify the type of data it will collect and the benefit offered,

75
00:04:21.101 --> 00:04:22.600
namely their data exchange.

76
00:04:24.070 --> 00:04:26.950
So the problem right now is that data brokers,

77
00:04:26.951 --> 00:04:30.570
people who want to make models based on your data,
they have,

78
00:04:30.610 --> 00:04:34.960
they have to employ these probabilistic models to approximate the likelihood of

79
00:04:34.961 --> 00:04:38.350
certain data points belonging to certain users.
So they'll help,

80
00:04:38.380 --> 00:04:40.180
they'll employ model those that'll say,
well,

81
00:04:40.420 --> 00:04:43.720
it's 70% likely that this person likes,
you know,

82
00:04:43.721 --> 00:04:46.120
sports drinks because they're part of this group.

83
00:04:46.150 --> 00:04:50.110
It has to be probabilistic because the data is so fragmented across different

84
00:04:50.111 --> 00:04:54.670
platforms.
But if all that data was in one platform and the user controlled it,

85
00:04:55.270 --> 00:04:57.580
there's no you,
no room for any kind of corruption.

86
00:04:57.760 --> 00:05:01.150
That would be ideal because then you could sell it for all of that for much more

87
00:05:01.480 --> 00:05:04.420
than even Facebook could write because you now have your Facebook,
Twitter,

88
00:05:04.480 --> 00:05:06.160
everything data right in one place.

89
00:05:06.580 --> 00:05:10.170
So it's much more valuable to you and therefore it's much more valuable to date

90
00:05:10.210 --> 00:05:14.180
of brokers.
So there are a lot of applications for this,
right?

91
00:05:14.410 --> 00:05:17.920
This here's a classification of all these different types of data out there,

92
00:05:18.190 --> 00:05:21.910
but market research,
right?
So right now it's not automated,
this data capture,

93
00:05:22.030 --> 00:05:26.140
but this would allow for entirely automated data capture of every single bit of

94
00:05:26.141 --> 00:05:29.200
your data if you so choose and you can profit from it.

95
00:05:29.260 --> 00:05:32.620
So it also allows for deterministic advertising,
like we talked about before,

96
00:05:32.650 --> 00:05:35.590
instead of having to employ probabilistic models.
Uh,

97
00:05:35.700 --> 00:05:38.890
advertisers can now deploy deterministic models.

98
00:05:39.400 --> 00:05:42.700
It allows for personalized car insurance,
right?
So instead of saying,
well,

99
00:05:42.730 --> 00:05:47.200
I guess based on this person's Facebook data there,
you know,
likely to not crash,

100
00:05:47.410 --> 00:05:50.170
you can say,
you know,
a car insurer can say,
well,

101
00:05:50.171 --> 00:05:52.090
based on this person's entire history,

102
00:05:52.210 --> 00:05:55.630
I can give them the right type of insurance loan,
underwriting,

103
00:05:55.830 --> 00:05:57.380
psychographic hiring.
You know,

104
00:05:57.381 --> 00:06:02.300
anytime that a company or a person is trying to assess you for whatever reason,

105
00:06:02.301 --> 00:06:03.290
whether you're willing to,

106
00:06:03.620 --> 00:06:08.620
you're able to properly pay a loan back or pay the rent on time or do a job

107
00:06:09.050 --> 00:06:12.710
instead of just taking these fragmented data pieces like a resume for example,

108
00:06:12.711 --> 00:06:13.940
it's just one data point,

109
00:06:14.300 --> 00:06:18.050
they can get all of that and you can give them the permission to do that and you

110
00:06:18.051 --> 00:06:20.960
can get crucially paid for it,
right?
So that's,
that's the key here.

111
00:06:21.320 --> 00:06:24.290
So let's look at the tech stack that they are employing right here.

112
00:06:24.650 --> 00:06:27.170
So what you're seeing here is a model for how this works,
right?

113
00:06:27.171 --> 00:06:30.890
So on the far left,
you see all of your,
you know,
different data points.

114
00:06:31.040 --> 00:06:34.550
It goes into your data wallet profile as you know,
you opt into it,

115
00:06:34.880 --> 00:06:37.700
that data is processed and then you can exchange that.

116
00:06:37.701 --> 00:06:42.450
And this is where the smart contracts come in for um,
for money.
Right.

117
00:06:42.451 --> 00:06:42.880
And for,
for,

118
00:06:42.880 --> 00:06:46.550
for actual value and give it to these customized products and enterprise

119
00:06:46.551 --> 00:06:50.630
customers.
Right.
So what,

120
00:06:50.660 --> 00:06:55.220
what the what the tech stack a data exchange uses?
It's using posts gray.

121
00:06:55.221 --> 00:06:58.730
So that's,
that's a database.
Um,
it's,
it's using,

122
00:06:58.760 --> 00:07:01.760
its front end is via javascript very,
you know that standard.

123
00:07:02.030 --> 00:07:06.500
It's the backend is using node python and Golang shout out to Golang Bray choice

124
00:07:06.501 --> 00:07:10.490
of language.
The front end is using cloudfront.
S three.
Okay.
Hold on a second.

125
00:07:10.640 --> 00:07:14.480
We'll talk about this back end is using ECC to monitorings using cloudwatch

126
00:07:14.510 --> 00:07:17.330
deployment,
terraform and of course blockchain.
Is it theory up?

127
00:07:17.750 --> 00:07:21.110
You might be asking,
wait a second.
All the data's stored in a single server.

128
00:07:21.350 --> 00:07:24.800
It can be so that the user is provided with two options.

129
00:07:24.830 --> 00:07:27.380
Option one is they can store that data locally.

130
00:07:27.381 --> 00:07:30.590
So you could store it on your own computer and then allow access to it.

131
00:07:30.980 --> 00:07:35.330
Or You can store it on their server,
but it's encrypted client side.
So they,

132
00:07:35.600 --> 00:07:37.670
they are not able to see what that data is.

133
00:07:37.671 --> 00:07:39.530
You can encrypt it on your local machine,

134
00:07:39.710 --> 00:07:42.860
then send it up and only you have that private key.

135
00:07:43.070 --> 00:07:46.130
So a lot of services already do this,
but it's like,
you know,

136
00:07:46.160 --> 00:07:48.800
like a private version of Dropbox for example.

137
00:07:49.070 --> 00:07:52.430
But basically you encrypt that data locally,
then you send it to the server.

138
00:07:53.510 --> 00:07:56.750
So you can consider Dana,
Dana Wallet adapt,
you know,

139
00:07:56.751 --> 00:08:00.620
mostly it's mostly decentralized service that is production ready.
Right.

140
00:08:00.800 --> 00:08:04.260
And of course they could use,
they could have used IPFS for this,
but you know,

141
00:08:04.360 --> 00:08:08.570
there's still steps to go and maybe in the future they'll,
they'll use that.
Okay.

142
00:08:08.571 --> 00:08:09.291
So,
uh,

143
00:08:09.291 --> 00:08:14.000
what I want to do now is I want to build an example of an exchange contract and

144
00:08:14.001 --> 00:08:16.610
I don't,
I'll tell you what I mean by that,
to give you an idea of,

145
00:08:16.810 --> 00:08:21.140
of how they're doing this and what an exchange looks like on the blockchain,

146
00:08:21.141 --> 00:08:24.260
right?
So there's a reason they're using the ethereum blockchain for this,
right?

147
00:08:24.261 --> 00:08:26.810
Because if they didn't use the ethereum blockchain,

148
00:08:26.840 --> 00:08:31.160
if that exchange code was all on a central server,
if it was closed source,

149
00:08:31.400 --> 00:08:34.700
then no one could see what they're really doing with your data rights.

150
00:08:35.000 --> 00:08:37.550
Are they really giving it to that party that you authorize?

151
00:08:37.710 --> 00:08:39.800
Are they selling it to other third parties?
You don't know.

152
00:08:40.100 --> 00:08:43.130
But if that code is open source and runs on a blockchain,

153
00:08:43.340 --> 00:08:47.900
it is publicly verifiable.
You know exactly where your data is going,
right?

154
00:08:48.110 --> 00:08:51.560
And yes,
it's stored on a central server,
but it's encrypted client's side.

155
00:08:51.561 --> 00:08:52.880
So you're secure in that way.

156
00:08:53.090 --> 00:08:57.300
So what I want to do is write a very simple exchange contract in solidity to

157
00:08:57.301 --> 00:09:00.510
show you exactly what I mean when I say that.
You know,

158
00:09:00.990 --> 00:09:04.020
solidity is a great language for,
for doing these kinds of things,
okay?

159
00:09:04.021 --> 00:09:08.520
So I'm going to write this code in the online solidity browser called remix.

160
00:09:08.521 --> 00:09:10.890
It's,
it runs on the test,
ethereum blockchain.

161
00:09:11.220 --> 00:09:16.220
So what this contract is going to do is it's going to allow to people to

162
00:09:16.261 --> 00:09:19.650
exchange goods over the internet in a trustless way,
okay?

163
00:09:19.651 --> 00:09:20.550
So if you think about it,

164
00:09:20.820 --> 00:09:25.140
how do I ensure without a third party that if I sell you a good,

165
00:09:25.410 --> 00:09:28.200
how do I ensure that you will pay me for it,
right?

166
00:09:28.440 --> 00:09:30.750
Instead of just receiving it and keeping the money for yourself,

167
00:09:31.080 --> 00:09:32.280
while there has to be a way to do this.

168
00:09:32.281 --> 00:09:34.170
Now I'm going to explain to you before I called this out,
right?

169
00:09:34.171 --> 00:09:37.800
So two people per person,
a and person,
B buyer and a seller,
okay?

170
00:09:38.100 --> 00:09:43.100
So what happens is the seller and the buyer will both deposit two x the amount,

171
00:09:43.860 --> 00:09:48.690
okay?
Into an escrow.
So two x,
the amount of the,
of the item that they want to,

172
00:09:48.750 --> 00:09:51.660
you know,
sell,
right?
They both deposit it into escrow.

173
00:09:52.140 --> 00:09:54.480
The seller will then send the item to the buyer.

174
00:09:55.380 --> 00:09:59.580
The buyer then receives the item.
Okay.
The only way that the,

175
00:09:59.790 --> 00:10:03.140
that the buyer can then retrieve their own funds is if they,

176
00:10:03.570 --> 00:10:07.020
if they unlock their funds and the second day and lock their funds,

177
00:10:07.170 --> 00:10:10.410
automatically the seller's funds are back,
are unlocked again.

178
00:10:10.910 --> 00:10:13.620
You see what I'm saying?
So there's no way to cheat the system.

179
00:10:13.770 --> 00:10:17.520
If I send you a good,
before I sent it to you,
you have to deposit two x,

180
00:10:17.521 --> 00:10:20.950
that amount,
I have to deposit to x,
that amount you receive it.

181
00:10:20.960 --> 00:10:23.940
And the only way to get back that amount,
that two x,

182
00:10:23.941 --> 00:10:25.380
that there's a reason it's two x.

183
00:10:25.530 --> 00:10:28.380
So you can game the system by selling that item later because you've already

184
00:10:28.381 --> 00:10:32.610
deposited two x that is by unlocking your amount and then it automatically

185
00:10:32.640 --> 00:10:36.180
unlocks my amount.
You see what I'm saying?
And it's,
there's two x for the,

186
00:10:36.320 --> 00:10:37.110
for the seller,

187
00:10:37.110 --> 00:10:40.650
because then they get both the amount that the item was worth and their original

188
00:10:40.651 --> 00:10:41.484
deposit back.

189
00:10:41.670 --> 00:10:45.090
So what we're gonna do is we're going to programmatically code this APP,
right?

190
00:10:45.091 --> 00:10:47.970
So we always have to define the version of solidity first.

191
00:10:48.090 --> 00:10:52.890
So that's what I'm going to first do here though.
It's going to be 0.042021.

192
00:10:52.920 --> 00:10:55.760
Okay.
And so this is going to be a purchase contract,
right?

193
00:10:55.770 --> 00:10:59.100
I sold find that class as a purchase class.

194
00:10:59.250 --> 00:11:03.330
Now the first thing we want to do in these contracts is write out those values

195
00:11:03.331 --> 00:11:05.910
that we're going to repeatedly use throughout the code.

196
00:11:06.060 --> 00:11:09.720
The first is the value itself,
right?
So the value of the item,

197
00:11:09.990 --> 00:11:12.670
we're going to have an address for both the buyer and the seller.

198
00:11:12.671 --> 00:11:16.350
So these are going to be public addresses that I can tie pal right here.

199
00:11:16.800 --> 00:11:17.611
And then lastly,

200
00:11:17.611 --> 00:11:21.430
we're going to have some states' rights and we have to tell you know whether,
uh,

201
00:11:21.510 --> 00:11:24.120
this contract has been created,
whether it's been locked,

202
00:11:24.300 --> 00:11:29.220
whether it's been inactive,
and this is going to represent that.
And lastly,

203
00:11:29.221 --> 00:11:33.000
we're going to have that state,
um,
variable as well.

204
00:11:33.300 --> 00:11:37.800
So now let's write out our most crucial function first,

205
00:11:38.010 --> 00:11:41.340
which is the purchase function.
Okay?
It's a public function.

206
00:11:41.341 --> 00:11:42.930
It is payable of course,

207
00:11:43.080 --> 00:11:47.940
because we want these buyers and sellers to be able to send that function some

208
00:11:47.941 --> 00:11:51.060
money,
right?
In this case it's going to say,
well who is the seller?

209
00:11:51.090 --> 00:11:53.830
Well it's going to be the sender and is the value?

210
00:11:53.831 --> 00:11:56.620
Well the value's going to be that amount

211
00:11:57.260 --> 00:12:02.260
divided by two that the seller is going to send and it's going to require two

212
00:12:02.510 --> 00:12:07.310
times,
like I said before,
two times that value to get the message value.

213
00:12:08.190 --> 00:12:09.023
<v 1>Okay?</v>

214
00:12:09.440 --> 00:12:11.240
<v 0>And that's it for that.</v>

215
00:12:11.300 --> 00:12:14.090
So this ensures that the message on values and even number,

216
00:12:14.091 --> 00:12:17.240
that's why I did the divide by two.
The division's going to truncate it.

217
00:12:17.241 --> 00:12:20.660
So even if it is an odd number and that's going to check the multiplication if

218
00:12:20.661 --> 00:12:24.110
it wasn't an hod number.
So that's the purchased function.
Okay,

219
00:12:24.380 --> 00:12:26.150
now we can move on to the

220
00:12:28.210 --> 00:12:33.190
d a condition function.
It actually,
there's,
there's actually several of these um,

221
00:12:35.320 --> 00:12:37.770
modifiers.
I'm just going to paste right here.
So the,

222
00:12:37.771 --> 00:12:41.530
what the modifiers are responsible we're responsible for is just checking for

223
00:12:41.531 --> 00:12:45.670
conditions.
Is it only the,
is it the buyer who's sending this?
Is it the seller?

224
00:12:45.850 --> 00:12:47.320
Is it,
is this the correct state?

225
00:12:47.321 --> 00:12:52.010
So this is just verifying where we are in the APP.
And once we do that,

226
00:12:52.280 --> 00:12:56.240
then we can add in more functions.
Okay.
So one,
uh,

227
00:12:56.450 --> 00:12:59.710
one event that could occur is that this whole exchange is a boarded,

228
00:12:59.720 --> 00:13:01.040
so we'll have that on.

229
00:13:01.060 --> 00:13:03.590
Another event that occur is that the purchase has been confirmed.

230
00:13:03.800 --> 00:13:07.730
Another event that could occur is it the item was indeed received,
right?

231
00:13:07.731 --> 00:13:10.220
So different events can occur at different times.

232
00:13:10.760 --> 00:13:14.930
So now what I'm going to do is I'm going to write out or just pasting the rest

233
00:13:14.931 --> 00:13:17.360
of this so we can see what it looks like.
But okay.

234
00:13:17.361 --> 00:13:20.210
So the abort function is very crucial here.

235
00:13:20.780 --> 00:13:24.950
What it does is it imports a purchase and you can reclaim the ether and it can

236
00:13:24.951 --> 00:13:28.460
only be called by the seller before the contract is a lot.

237
00:13:28.461 --> 00:13:30.560
So this is before the contract is locked.

238
00:13:30.950 --> 00:13:33.830
So what that means is no one has deposited anything.
Okay?

239
00:13:33.831 --> 00:13:35.840
Then let the seller go ahead and abort this.
Right?

240
00:13:35.841 --> 00:13:38.900
But once you deposit something,
you cannot aboard it,
right?

241
00:13:38.901 --> 00:13:42.230
That's the whole point of an escrow.
You cannot aboard that escrow.

242
00:13:42.710 --> 00:13:46.370
Now the confirm purchase is also very crucial because what it does is it

243
00:13:46.371 --> 00:13:50.480
confirms the purchase as the buyer.
The transaction has to include two x,

244
00:13:50.481 --> 00:13:55.190
the value in ether and the ether will be locked until confirm received his call,

245
00:13:55.191 --> 00:13:58.100
which we'll look at in a second.
So it says,
okay,
what's the state,

246
00:13:58.490 --> 00:14:02.690
what's the condition and is this payable?
Then emit the purchase confirmed,

247
00:14:02.900 --> 00:14:06.590
set the buyer and set the state to locked.
Now confirm received.

248
00:14:06.620 --> 00:14:11.060
We'll tell this the contract that the buyer has indeed received the item.

249
00:14:11.061 --> 00:14:15.020
That's that's that crucial points,
right?
Did the buyer received it?

250
00:14:15.630 --> 00:14:20.040
And the buyer is the one who unlocks this by sending ether rights.
They say,
okay,

251
00:14:20.070 --> 00:14:23.310
well I received the item,
let's,
let's confirm that I've received it.

252
00:14:23.370 --> 00:14:25.050
So if you have some kind of user interface,

253
00:14:25.200 --> 00:14:28.650
you can easily switch that up and you can just have it be a button for that user

254
00:14:28.651 --> 00:14:31.620
so they don't have to worry about anything else.
But we're just riding up to,

255
00:14:31.650 --> 00:14:33.720
you know,
strict code here.
There's also e.
Dot.

256
00:14:33.721 --> 00:14:36.870
JS that allows you to make a web app.
Beautiful Web App,

257
00:14:36.871 --> 00:14:40.080
like I showed you for Tic Tac toe as a beautiful interface.
But this is just,

258
00:14:40.110 --> 00:14:43.800
you know,
happening on the blockchain.
So once the item has been received,

259
00:14:43.920 --> 00:14:46.020
we have to change the state to inactive.

260
00:14:46.230 --> 00:14:49.680
The buyer then transfers that value and the seller transfers that,

261
00:14:49.681 --> 00:14:51.810
that value as well.
So they both received their funds,

262
00:14:51.910 --> 00:14:55.560
the funds that they deposited.
Okay.
Okay.
So that's it for this example.

263
00:14:55.561 --> 00:14:57.720
I hope you found it useful and yeah,

264
00:14:58.020 --> 00:15:00.570
please subscribe for more programming videos.
And for now,

265
00:15:00.630 --> 00:15:03.150
I've got to own my data.
Dope.
Thanks for watching.

