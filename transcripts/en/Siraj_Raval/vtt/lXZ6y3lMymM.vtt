WEBVTT

1
00:00:00.300 --> 00:00:01.140
No,
no,
no,
no,
no.

2
00:00:01.870 --> 00:00:06.870
The infinity war begins hello world it Saroj and a robotics company called

3
00:00:08.011 --> 00:00:13.011
Boston dynamics released yet another incredible video demonstrating its flagship

4
00:00:13.681 --> 00:00:16.050
robot,
the Atlas Doing Par Corp,

5
00:00:16.230 --> 00:00:20.220
and I'm going to explain the technical details of how it works in this video.

6
00:00:20.640 --> 00:00:23.670
This thing can now literally jump upstairs like a human.

7
00:00:23.671 --> 00:00:28.440
In addition to being able to run in the forest without any tethers and perform a

8
00:00:28.441 --> 00:00:31.770
bunch of acrobatic balancing acts,
this is so dope.

9
00:00:31.800 --> 00:00:36.800
We can use humanoid robots like atlas to perform rescue operations in scenarios

10
00:00:37.321 --> 00:00:42.321
that would otherwise be deadly for humans like firefighting or bomb disposal.

11
00:00:42.780 --> 00:00:47.610
They can perform entertaining live shows involving wild stunts and maybe even

12
00:00:47.611 --> 00:00:52.611
someday act as a personal companion performing chores for us humans and helping

13
00:00:52.771 --> 00:00:54.390
us out in various ways.

14
00:00:54.690 --> 00:00:58.230
If we read through the comments section though of these videos,

15
00:00:58.500 --> 00:01:02.700
every other comment is something about terminator robots or some kind of

16
00:01:02.850 --> 00:01:04.980
military usage.
Yes,

17
00:01:05.010 --> 00:01:07.980
Darpa did fund the development of this robot,

18
00:01:07.981 --> 00:01:12.981
but for performing search and rescue missions not combat and the United Nations

19
00:01:13.441 --> 00:01:18.441
has already begun important and promising discussions on what a proper set of

20
00:01:18.661 --> 00:01:23.661
regulations look like that prevents these robots from being used for homicide.

21
00:01:24.030 --> 00:01:28.860
Boston dynamics began as a spinoff from MIT in [inaudible] 92 and thinks of its

22
00:01:28.861 --> 00:01:33.660
robot,
the software and the physical world as one holistic pipeline.

23
00:01:33.990 --> 00:01:38.010
Physical forces like the kinetic energy of motion and the force of gravity from

24
00:01:38.011 --> 00:01:42.960
the world because the springs and gears of the robot to react in certain ways

25
00:01:43.200 --> 00:01:44.820
and the robot response to this,

26
00:01:45.180 --> 00:01:49.350
they also have this rapid experimentation mentality that I love,
build it,

27
00:01:49.351 --> 00:01:53.190
break it,
fix it,
which is why we see them kicking their robots a lot.

28
00:01:53.340 --> 00:01:57.480
So let's start off with the hardware of the latest version of atlas.

29
00:01:57.600 --> 00:02:00.870
It's 1.5 meters tall and weighs 80 kilograms.

30
00:02:01.110 --> 00:02:03.930
It has 28 degrees of freedom throughout its body.

31
00:02:04.260 --> 00:02:09.000
Each degree of freedom is a different kind of motion the robot can make along an

32
00:02:09.001 --> 00:02:13.380
axis,
say it's elbow or knee.
Think of them like the robotic analog,

33
00:02:13.381 --> 00:02:15.930
two joints to power all of these joints.

34
00:02:15.960 --> 00:02:20.490
The atlas robot uses a hydraulic power unit with high pressure oil.

35
00:02:20.670 --> 00:02:24.300
Hydraulic systems convert mechanical energy into hydraulic energy.

36
00:02:24.510 --> 00:02:29.040
When a hydraulic pump operates,
it performs two functions.
First,

37
00:02:29.070 --> 00:02:32.790
it's mechanical action,
creates a vacuum at the inlet of the pump,

38
00:02:32.940 --> 00:02:37.560
which allows atmospheric pressure to force liquid from the reservoir into the

39
00:02:37.561 --> 00:02:39.540
inlet of the pump.
Next,

40
00:02:39.570 --> 00:02:44.340
it's mechanical action delivers this liquid to the pump outlet and forces it

41
00:02:44.341 --> 00:02:47.010
into the hydraulic system.
Besides robotics,

42
00:02:47.011 --> 00:02:52.011
they're also using a wide range of applications from factory machinery to giant

43
00:02:52.171 --> 00:02:54.540
Japanese mech robots.
Basically,

44
00:02:54.541 --> 00:02:59.541
anytime an application requires heavy and systematic lifting or repeated use of

45
00:02:59.771 --> 00:03:01.810
powerful and directional force,

46
00:03:02.200 --> 00:03:07.200
bds hydraulic system can run for about half an hour up to a full hour without

47
00:03:07.271 --> 00:03:11.500
needing to be tethered to a power source.
It consists mainly of a motor,

48
00:03:11.680 --> 00:03:13.660
a reservoir,
and a hydraulic pump.

49
00:03:13.990 --> 00:03:18.610
The system can generate a tremendous amount of power and is based on Pascal's

50
00:03:18.611 --> 00:03:23.230
law of physics,
drawing its power from ratios of area and pressure.

51
00:03:23.560 --> 00:03:27.760
The major difference between atlas and the vast majority of other humanoid

52
00:03:27.761 --> 00:03:31.060
robots is that it's not powered by electric motors,

53
00:03:31.150 --> 00:03:35.710
but by these hydraulic actuators driven by a battery powered electric pump.

54
00:03:36.010 --> 00:03:39.640
Even though hydraulic actuation is more complex to set up,

55
00:03:39.900 --> 00:03:44.350
it gives them way more power than electric motors and more compliance to absorb

56
00:03:44.351 --> 00:03:48.130
shocks,
which is crucial to perform highly dynamic motions.

57
00:03:48.490 --> 00:03:52.840
Atlas also uses a lidar to create a three map of its environment.

58
00:03:53.110 --> 00:03:57.640
This is an imaging system that makes sense of an environment by bouncing lasers

59
00:03:57.641 --> 00:04:00.610
off of it.
Then analyzing how they reflect back.

60
00:04:00.880 --> 00:04:05.470
It's a precise range finder that operates in three d space.
Additionally,

61
00:04:05.500 --> 00:04:09.490
it uses some stereo proximity cameras for situational awareness,

62
00:04:09.640 --> 00:04:12.950
each pointed in different directions,
so don't try to surprise it.

63
00:04:13.360 --> 00:04:17.770
All of these components are controlled by its onboard realtime control computer

64
00:04:17.980 --> 00:04:21.100
and cooled by the onboard thermal management system.

65
00:04:21.550 --> 00:04:25.330
One more thing to note here is that a lot of the parts were three d printed

66
00:04:25.331 --> 00:04:27.070
because it's fast and efficient.

67
00:04:27.580 --> 00:04:32.350
Darpa funded a robotics challenge for a couple of years and the atlas robot was

68
00:04:32.351 --> 00:04:34.990
given to test to different academic teams.

69
00:04:35.350 --> 00:04:39.310
The goal was to get a robot to perform eight tasks in different tracks,

70
00:04:39.520 --> 00:04:42.070
including driving a vehicle and climbing a ladder.

71
00:04:42.190 --> 00:04:46.540
It was a very difficult challenge and resulted in a lot of hilarious robot fail

72
00:04:46.541 --> 00:04:51.541
videos for us to watch on youtube that dozens of teams that all had atlas robots

73
00:04:52.211 --> 00:04:54.430
could spend as much time as they want it,

74
00:04:54.610 --> 00:04:59.470
taking them apart and reverse engineering the hardware.
Despite this freedom,

75
00:04:59.620 --> 00:05:04.620
none of them achieved performance anywhere near what Boston dynamics was doing

76
00:05:04.810 --> 00:05:09.760
even before the challenge started.
Do you know what that means?
No.

77
00:05:10.750 --> 00:05:15.750
It means the value of Boston dynamics is almost entirely in their closed source

78
00:05:16.241 --> 00:05:17.410
control software.

79
00:05:17.710 --> 00:05:21.430
What sort of algorithm could they possibly be using that's giving them such

80
00:05:21.431 --> 00:05:22.540
amazing results?

81
00:05:23.020 --> 00:05:27.400
The first thing that comes to mind is deep reinforcement learning.
In fact,

82
00:05:27.401 --> 00:05:32.401
both Google and open AI have used deep RL to enable robots to manipulate

83
00:05:32.711 --> 00:05:37.540
physical objects with unprecedented dexterity.
Luckily for us,

84
00:05:37.570 --> 00:05:42.520
BDC CEO recently had a Q and a session at MIT where he was asked this question.

85
00:05:42.550 --> 00:05:43.780
Let's hear what he had to say.

86
00:05:44.820 --> 00:05:47.970
<v 1>I'm sure we will use learning before too long.
Uh,</v>

87
00:05:48.240 --> 00:05:51.690
I'm not sure whether it will be deep reinforcement learning or something else,

88
00:05:52.080 --> 00:05:57.080
but mostly we're interested in optimizing the complicated a stage space

89
00:05:58.040 --> 00:06:02.480
<v 0>partitioning.
We do know deep RL so far.
In fact,</v>

90
00:06:02.481 --> 00:06:06.560
they're not using any machine learning technology on that robot.
Incredibly.

91
00:06:06.800 --> 00:06:09.140
You heard the man,
so what are they using?

92
00:06:09.650 --> 00:06:14.390
They're likely using a sack of very carefully hand designed classic control

93
00:06:14.391 --> 00:06:15.170
laws.

94
00:06:15.170 --> 00:06:20.120
Classical control theory provides us with strong mathematical guarantees of

95
00:06:20.121 --> 00:06:24.350
stability and performance without requiring alerting process.

96
00:06:24.680 --> 00:06:28.400
It works out of the box if we've designed our control system properly,

97
00:06:28.880 --> 00:06:31.070
but the scope of its abilities are limited.

98
00:06:31.071 --> 00:06:36.071
Control Algorithms have to be designed specifically to perform a range of tasks.

99
00:06:36.500 --> 00:06:39.830
If we change the task,
we need to redesign the control laws.

100
00:06:40.160 --> 00:06:45.160
We can see on the web that Boston Dynamics developed a simulated atlas software

101
00:06:45.351 --> 00:06:49.730
package for the Popular Gazebo robotics simulation environment.

102
00:06:50.060 --> 00:06:54.500
This acts as a high level controller that lets developers make a set of joints

103
00:06:54.650 --> 00:06:59.650
follow a desire trajectory specified as joint angles and it's a part of Ros,

104
00:06:59.840 --> 00:07:01.430
the robot operating system,

105
00:07:01.610 --> 00:07:04.730
which Alice has physical version probably uses as well.

106
00:07:05.060 --> 00:07:09.740
Ross is a collection of software libraries aimed at simplifying the task of

107
00:07:09.741 --> 00:07:11.000
creating robot behavior.

108
00:07:11.360 --> 00:07:16.360
It allows us to create a control system where individual robotic components are

109
00:07:16.371 --> 00:07:21.371
defined as nodes and can communicate data between each other at the protocol

110
00:07:21.561 --> 00:07:22.340
level.

111
00:07:22.340 --> 00:07:27.340
Framing our system this way is also beneficial for enabling concurrent movement

112
00:07:27.590 --> 00:07:32.590
across the distributed set of components on the robot like moving an arm while

113
00:07:33.260 --> 00:07:34.093
moving a leg.

114
00:07:34.190 --> 00:07:39.080
If we know what the hardware components are and we can use Ross to create a

115
00:07:39.170 --> 00:07:42.170
control system that encapsulates each component.

116
00:07:42.560 --> 00:07:46.310
Then comes the question of the control algorithm to use on the system.

117
00:07:46.760 --> 00:07:50.390
Like the CEO said an end to end approach is not used,

118
00:07:50.391 --> 00:07:54.920
but instead several control algorithms each suited for different tasks probably

119
00:07:54.921 --> 00:07:59.690
are the one they're using for walking looks pretty sick and a similar humanoid

120
00:07:59.691 --> 00:08:04.520
robot.
Honda's Acimo a delightful human size lego piece.
Open source.

121
00:08:04.550 --> 00:08:07.610
It's walking algorithm called zero moment point.

122
00:08:07.760 --> 00:08:12.020
So let's start with that moment refers to a moment of inertia.

123
00:08:12.080 --> 00:08:12.913
It's a tensor.

124
00:08:13.160 --> 00:08:17.390
The amount of torque needed to cause any given angular acceleration is

125
00:08:17.391 --> 00:08:20.060
proportional to the moment of inertia of a body.

126
00:08:20.540 --> 00:08:23.720
Since robots have two points of contact with the floor,

127
00:08:23.750 --> 00:08:27.080
their feet and they're supposed to walk,
run,
or jump.

128
00:08:27.320 --> 00:08:31.670
Their motion needs to be planned in regard to the dynamical stability of their

129
00:08:31.671 --> 00:08:34.580
whole body.
All the positions,
velocities,

130
00:08:34.581 --> 00:08:37.460
and joint angles need to be taken into account.

131
00:08:37.790 --> 00:08:42.080
This is nontrivial especially because the torso of the robot has a larger mass

132
00:08:42.110 --> 00:08:45.800
and inertia than the legs which are supposed to support and move the robot.

133
00:08:46.130 --> 00:08:50.240
It's like the problem of balancing an inverted pendulum.
It's heavier up top.

134
00:08:50.270 --> 00:08:51.103
Then below,

135
00:08:51.440 --> 00:08:56.440
the trajectory of a walking robot is planned using the angular momentum equation

136
00:08:56.850 --> 00:09:01.680
to ensure that the generated joint trajectories allow for dynamical postural

137
00:09:01.681 --> 00:09:06.660
stability and this is quantified by the distance of the zero moment point in the

138
00:09:06.661 --> 00:09:09.480
boundaries of a predefined stability region.

139
00:09:09.990 --> 00:09:14.430
The position of the ZMP is effected by the referred mass and inertia.

140
00:09:14.490 --> 00:09:15.660
The robots torso,

141
00:09:15.840 --> 00:09:20.160
since its motions generally require a large ankle torques to maintain stability,

142
00:09:20.580 --> 00:09:24.750
ZMP accounts for the inertia of the robot and can tell when it's about to fall.

143
00:09:24.930 --> 00:09:29.130
It's dynamically stable.
If we paused it in the middle of a step,
it could fall.

144
00:09:29.340 --> 00:09:32.100
It works by calculating the zero point moment,

145
00:09:32.250 --> 00:09:36.990
which is the spot at which all your inertia is canceled out by the angle at

146
00:09:36.991 --> 00:09:40.770
which you catch yourself.
It's like sticking your foot out to catch a fall.

147
00:09:40.860 --> 00:09:44.490
That's what the robot is doing.
ZMP is still inefficient.

148
00:09:44.520 --> 00:09:48.930
It requires a very large ankle torques because it's in a near constant state of

149
00:09:48.931 --> 00:09:52.950
fall.
If we walk slowly with a 20 degree bend at our knees,

150
00:09:53.100 --> 00:09:56.940
keeping our feet as flat as possible,
we can simulate what it's like.

151
00:09:57.120 --> 00:10:01.370
Basically the ankles are responsible for pushing the robot up,
but two,

152
00:10:01.380 --> 00:10:04.860
they probably aren't using ZMP at least anymore.

153
00:10:05.040 --> 00:10:09.630
They've got to be using a combination of more dynamical control strategies.

154
00:10:09.990 --> 00:10:14.850
There's actually been a lot of work in this space capture point,
control model,

155
00:10:14.851 --> 00:10:18.690
predictive control,
quadratic programming,
direct inverse,

156
00:10:18.691 --> 00:10:20.340
dynamical optimization.

157
00:10:20.580 --> 00:10:24.090
All of these strategies are worthy of a full course in robotics.

158
00:10:24.240 --> 00:10:28.530
It's too much to fit into one video and that's not even including any machine

159
00:10:28.531 --> 00:10:32.010
learning,
which is exciting.
There are three things to remember.

160
00:10:32.250 --> 00:10:37.250
Austin dynamics is powered using a very efficient hydraulic power unit which

161
00:10:37.411 --> 00:10:40.770
Converts Mechanical Energy into hydraulic energy.

162
00:10:41.130 --> 00:10:45.990
The zero moment point algorithm is used to help bipedal robots walk,

163
00:10:46.050 --> 00:10:46.500
run,

164
00:10:46.500 --> 00:10:51.420
and jump by computing a stabilized trajectory for the robot and Boston dynamics

165
00:10:51.421 --> 00:10:56.421
likely uses a stack of different dynamical control algorithms to help it's robot

166
00:10:56.611 --> 00:10:57.600
perform motion.

167
00:10:58.210 --> 00:11:01.270
<v 2>What was your first reaction when you saw Apolis to par core?</v>

168
00:11:01.540 --> 00:11:04.510
Let me know in the comments section and hit subscribe if you want to see more

169
00:11:04.511 --> 00:11:08.660
educational videos.
For now,
I've got to run to really sell.

170
00:11:08.980 --> 00:11:09.550
Thanks for watching.

