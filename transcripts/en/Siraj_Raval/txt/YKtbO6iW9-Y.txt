Speaker 1:          00:00          Hello world, it's Suraj and I'm here with my friend at town. Hey, I'm a tine, I make interactive multimedia art and uh, we're gonna work on a robotics project together. Yeah. So I had the idea for a hardware video and hey, ton came to mind. So it's on, you want to say what the project for sure. So it's this idea that I've been thinking about for awhile, how the Internet is very voyeuristic and we're constantly sort of looking through our screens at other people. But what happens if now the screen looks back, we're going to take a screen with a camera and put it behind the Venetian blinds. And then if this, if the camera picks up a face, that blinds will close and then as the blinds closed, they won't see a face and where so they'll open. So what happens with our screens? Look back at us instead of us just looking through our screens. Yeah, this is going to be awesome. So we're going to show you the hardware first and then the code. So shall we get started? Yeah, let's do it.

Speaker 1:          00:44          But there's the raspberry Pi we're going to use. What else? So we have the, the raspberry Pi camera it mega pixels. All right, we have a case for the camera also so it doesn't get ruined. Then we have this board over here, which is a, which is going to be a hat we put on top of the Raspberry Pi, which will let us control the service and the service are over here. I got an extra one just in case cause I didn't want to, I didn't want to mess up while we're doing it. And then finally here is the power supply for the service. I mean it configure the um, the operating system to be able to talk to this particular display. See, have to put a special config dot text file on the chip and a particular directory. And then when you boot up the raspberry Pi, this display will work and not just display a bunch of like random white lines. Okay. So we had the new config on the SD card and we're going to put it into the, into the raspberry Pi. And then know when we plug in the raspberry Pi with the screen over here,

Speaker 2:          01:51          it should turn on, let's see if it worked and didn't work. Oh, there we go. That's where, okay,

Speaker 1:          02:14          so I have everything working and Allison's working and my keyboard should be working in a second so we could open up terminal and start, start typing away.

Speaker 1:          02:26          So right here we have the uh, this integrated circuit, which will let us control the service. And with why this is important is it's I'm a pwn PWM controller since we're pulse with modulation. So the Servo, which is over here is controlled via a series of pulses from the, from the computer or the integrated circuit. The problem is raspberry Pi's integrated circuit, the raspberry Pi's Gpio output, which are these pins over here, which send signals to periphery devices. Um, there's only one I think that has the precision that we need to control the Servo that we have. So therefore they created this hat which just as a sort of, which is a device which will sit on top of the raspberry pie once we solder it and it will sort of sit right over here. Um, and once, and with this hat allows us to do is I have much more precise control through a series of libraries, uh, on the raspberry Pi to actually control the Servo as we desired. So once we have this working and we'll be able to, and these aren't, these aren't soldered in just yet, once we have this working, we'll be able to take the input from the camera when it detects a face and sends an output signal over the Gpio pins through this hat to control the servo how we want and we'll turn the blind accordingly. Yeah, we're just salary and the connections to, I was very fine.

Speaker 1:          03:56          I'm going to look at it to make sure I didn't like solder or any of the pins together because that would mess that up. So just making sure that all the salaries done well. So we'll put these characters in this way and then we'll show you once, once we saw her in, we'll be able to take the Servo and just slot it right on top. Sought it right on top of these connectors and we should be good to go.

Speaker 1:          04:28          So we're checking the raspberry Pi camera and now we're going to put it inside of the Raspberry Pi case just to protect it and make sure that what mean. So because this is a nice clean servant surface on the back to be able to stick it to the wall. Perfect. So we just popped the case. I don't want to break it. There we go. There we go. So on the camera there's this little blue tab and just pull it off. So we could actually, it's the camera. We don't ruin the camera so the camera could see out slided and over these little spokes and the buttons so it sort of sticks nicely. And then find the, the, um, and then I think we owe that. Oh yeah, the divot is in here. So just sort of this the tab which, which powers the camera sits in nicely and we slip on the cover and that's it.

Speaker 1:          05:27          There it is. Pi Camera is protected. So now we can play around with it and don't have to worry about bumping into it in any weird way and we'll be able to install it efficiently. So now we're going to install the camera through the hat because we finished all the soldering and we've done our single set of output pins. And by this, so we have the slide the camera right through here so we don't, uh, so you know, and we didn't want to do it while soldering, so we didn't want to stop it at the camera. So we want the blue side of the, of the, um, of the camera facing the black side of the, um, of the raspberry Pi because the, the connecting pins over here go up against the connecting pins on the inside of this connection. All we do is we slide it in gently uninsured, just slipped right into place up in.

Speaker 1:          06:21          There it goes. So now, now the camera's insecurity. So if you pull on it, it shouldn't slide out and we could, uh, now I'm going to add back the, the top of the breath of the raspberry Pi case. So it kills right over there the first thing. So it slides in nicely. Then this guy, this top piece also slides in really, really nicely and once one to after I agree, attach all the screws, this camera, this, this hat we'll slide in and it will attach into the Gpio pins on the Pi should just slip it in really nicely up and their clicks in. And now the how does attach and it's not going anywhere and we'll be able to control it from the Raspberry Pi.

Speaker 3:          07:07          Okay.

Speaker 1:          07:11          The question now that I'm talking with Siraj about is like how do we install open CV on the raspberry Pi because we're going to need it to use open CV to, um, determine if we'd see a face or not. The problem I've had and is that open CV three is there's no pre compiled binary on wn. So it's like such a pain to compile it from source, especially on a, this raspberry pie because it's just, it's a relatively slow, it's quick, but compared to the original raspberry Pi, but still a relatively slow computer. So I think what we're going to do is we're going to install an older version of open CV so that we could just get it pre compiled and sort of work in python two instead of python three even though that's what I would have loved to do. But so, so Raj has been videoing me, so I'm going to video Sarraj back video assumption. There we go. Look at that. Oh my God. Cameras work. Hey.

Speaker 4:          08:07          So there are two modules you'll need to install onto the raspberry pi open CV. You will let the camera to detect faces and I GPIO will control the service. And then for the code, we'll look in Maine dot. Py. So other than open CV and num py, we've got to help our libraries here. Hi, video stream. We'll read in our video stream and blinds will open and close the blind by issuing Servo commands. So named window, we'll initialize the frame that we can get the images from and then we can start the contents of that video stream using the start method of our helper class in, we'll initialize our blinds object, which we'll use to open and close your blinds in a second. And in this wild statement, we can continuously get the images from our video stream and we'll use the [inaudible] function of open CV to get the image from the frame. And then using the redirects function, we can detect if there's a face for knots and store that in the rex variable. If direct is not empty, that means that we detected a face so the blinds come close. Else that can open.

Speaker 1:          09:08          Cool. So I'll, I'll, what we're doing now is I'm up to the stage where I want to attach the blind to my wall. So I'm just gonna put it right here on the wall. Nothing special because the screen's going to be behind it. And in order to do this, we're going to use these handy mounts that come with a blind.

Speaker 1:          09:37          We have the, the side of Venetian blinds nail to my wall correctly on the studs so things don't fall down. Then up here we have the Servo, which is sort of gently attached to the turning motor, the turning mechanism of the blinds. So when the Servo turns, we'll, it'll turn the blind to mechanism instead of the standard like Steck that return then attach to the Servo, it goes directly into the breadboard. So I broke the little, um, the hat I had last time. And what this is, is just the breadboard, which has the five volt connection connected to the Red Servo vine. The ground connection to the brown sort of align and the data connection to the 18th pin on the, um, on the raspberry Pi. And this is, that's just the pin I've chosen to do the pulse with modulation, the PCM output on which will then control the servo accordingly. Uh, and I'm using the pig, uh, the Pi Pg Gio library, which works really well unless we do effective pulse with modulation. Then that connects the raspberry Pi, which, which controls both the camera, which will look at us when we were in the frame and the um, the raspberry Pi screen where we'll see ourselves and our picture. Um, now we'll close the blinds and get everything working gently. Very exciting, very exciting. So we've gotta make sure all the blinds are crafts. Sweet.

Speaker 1:          11:12          Cool. So now they're closed and we'll just run the, uh, the main program. So open CV should start working and my face is on the screen and it doesn't recognize me just, yeah. But if I take a step back, camera now sees me and the blinds closed. Now it won't see me anymore and the blinds open. But now my face is here so it closes again. So the cost, they'll go back and forth, blinds, opening and closing while I stand in the frame. If we, if I step out of the frame, both seraphs and I are outside of the frame. The blind shits they open because there's no, there's no face. But if we peek in, they close. Yeah, it's working. Please subscribe. And for now, we've got to clean up some hardware, so thanks for watching.