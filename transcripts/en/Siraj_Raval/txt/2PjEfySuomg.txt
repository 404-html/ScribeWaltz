Speaker 1:          00:00          Hello world, it's the Raj. And today I want to talk about a decentralized application called Ascensia. So what ascension is, is essentially a gateway to the decentralized web. So if you are familiar with the decentralized web, then you know that there are a bunch and what even if you're not familiar, there are a bunch of different apps that run on these protocols that are not a part of the traditional web that we're used to, right. So you know, Google, apple, Facebook, these are centralized apps, but there's a whole host of other types of apps, decentralized apps out there that normal people are not eight normal people, normal users of the Internet that are using a standard web browser like chrome or safari, they don't have access to them because in order to reach these decentralized apps, you need to a either download a chrome extension like Meta mask for example, for Atherium based apps or you to download, you know, a separate browser like brave or you know, whatever, um, missed.

Speaker 1:          00:59          And this is just not the way to move forward with this field. We need something that's going to act as a gateway between the centralized web and the decentralized web. And what Ascensia is, is that it is that gateway. It's this interoperability layer between the centralized web and decentralized web. So, um, we're going to learn about essential in this video and also we're going to learn about a cross protocol bridging blockchains seeds. A bunch of, you know, different things about the blockchain just by learning about essential multisignature transfers, encryption and cross chain atomic swaps. All of it to Mike is, is very technical jargon. But in this video we're going to cover those, those things as well. Okay? So I want to start off with a demo of this service so you can access it@asencia.one definitely check out the link link is going to be in the video description.

Speaker 1:          01:49          But what you can do is you can try it out immediately. So you can put, we can click on this tribe button. Essentially 1.0 15,000 users are already using this. Great. Um, so now I'm going to create a password, password, whatever I wanted it to be. And once I created a password, what is going to do is it's going to create my own profile in a decentralized way such that I own my data. And then if any service then wants to use my data, they have to ask me for that data. Okay. So it's a, it's a user owned, uh, the user owns their data in this gateway. And so the reason I call it a gateway is because there are so many different types of decentralized apps out there, right? There's steam it to, there's Khyber, there's Crypto Kitty's, there's, you know, whatever augur tube and there should be a way to access all of them.

Speaker 1:          02:36          Now some of them have this kind of bridge between http and whatever else they're storing their data on, you know, IPFS, Sia, what have you. But some of them don't. And so this is a way to kind of combine all of them into one, one kind of, yeah. Gateway or view that you can see them all. So the first part of ascentia is, it is, it is a wallet for all whites. So you can have your theory molen in here. You can have your bitcoin wallet, you can have whatever type of wallet, you can have it here and they're adding more over time, which I think is very cool. Like I want to use a service that can combine all these wallets together. So that's the first part. The second part is storage, right? So this is a decentralized storage platform. We can use IPFS, we can use swarm, we can use storage. And then once we have some file we can upload it. And so it's going to then store that file. And I'll talk about the use cases of this in a second, but that's one part of it. The other part is for us to be able to log in to any of these blockchains, you know, the theory and blockchain, what have you. And now, good. I successfully logged in with my address, continue. Great.

Speaker 1:          03:46          And there's also an exchange, right? So, um, this is, we're going to talk later about cross atomic swaps, but this is an exchange. We can exchange any kind of coin with any other coin. And lastly, it's, it's, it's uh, it's adapt store and not an APP store. But adapt store. So we can find other decentralized apps in this platform. We can see, you know, Aragon status. I can add status. Okay. So now I've added status and now, now that I've added status, it's here in my, in my dashboard. So now I can use status, I can send messages to people. Status, by the way, is a decentralized messaging platform. It's, and now I have access to that. Okay. So very, very cool stuff. Um, and right, so my point is, is that a decentralized web, he's fragmented and there are so many different protocols out there.

Speaker 1:          04:33          And just because there are so many different protocols that all, you know, say, say different things, it doesn't mean that one is any better than the other. There should be a way to combine all of them together, right? We're talking about not just us as developers or you know, enthusiasts in this technology using this we're talking about are, you know, grandmas and our grandpas and just everybody, people who are not as familiar with technology, being able to access these services. And, and this really does that in a great way. And so one thing I found very, you know, very cool about this was that when we log in, what it does is it creates a unique seed for us, right? So it's a unique seed that acts as our identity. Now this is an identity. And so first of all, many companies and people have tried to create one identity that accesses all the different services, right? All the way back to the nineties. Microsoft tried this with their, I think it was called one service or one something. Anyway, it didn't work out. But now that we have the blockchain and we have these new methods of distributed consensus, that vision, that dream is now possible. So there's one, um, one log in that you can use for all of these services. And so that's, that's a great feature of essential, right? So, and

Speaker 2:          05:45          yeah,

Speaker 1:          05:46          what would it also lets us do is it also lets us bridge protocols together. For example, http and say IPFS we are accessing this Ascensia app using http and we are then able to upload our data to say IPFS, which is its own protocol, right? It's IPFS, colon slash slash, whatever it is, the content address, not the http address or the Ip address. So this is very cool. And I want to, I want to show you for a second how this works, how this kind of cross bridging works. So essentially uses this, but if we look, you know, deep down the stack into how this works inside of IPFS is go a repository. We can see this. Um, we can see this file called gateway dot. Go. So if you haven't done, go before, don't worry about it. And Go is a very beautiful, elegant, simple language which will learn, um, which we'll see why, you know, as the video progresses, but essentially think about it.

Speaker 1:          06:41          So you can be an IPFS node. Anybody can be an IPFS, no, they can store data on their computer. And so there has to be some bridge to be, to, to be able to access that IPFS data from the http web. And so this is one way to do that with this gateway. And so the, what the gateway is, is it says, let's see, we can see inside of this function that any node can be a gateway. They have that option to be a gateway. So in the handler we can see that we have these Heteros for http that are being sent from this IPFS node. So it's essentially an IPFS node can double as an http node. So they have their own HTP server and they act as the bridge. So whenever you're accessing this HTP server slash IPFS node, you are then able to access everything that that IPFS can note is connected to, which is every other IPFS node.

Speaker 1:          07:30          Now, so does this take away from some of the benefits of decentralization? Yes. But does it take away all of the benefits? No. Can, what I mean is, can you censor that HTP node? Yes. But the data will still live right, so that HDP website can be censored, but the data will still live, which is, um, which is a great thing. Anyway, just wanted to talk a bit about why bridging is important in how Ascensia does that, you know, by, by implementing this. Okay. So I'm one. So it's got its, it's got some great features, right? So it's, it, it, it does a lot. It's not just like a, you know, one wallet for everything. It's, it's a wallet for different cryptocurrencies. There's voting's there's a voting system. You don't have to use a password for all of the, all of these decentralized apps. It's multi-device.

Speaker 1:          08:16          So because it, because it runs in the browser and you don't need a chrome extension. You can run it on a phone, you can run it on a desktop app, you can run it in your browser. A lot of different options here. And, uh, one thing I think is very cool is that because it's got this decentralized storage option, you can upload your KYC information to it and then participate in multiple ICO shows with just a few clicks. So if you are a crypto investor, then you can invest in all of them with just a few clicks. It's a very simple way to do that. And so, um, also because these different blockchains are integrated, you can program scripts in a single language, which is very useful. And you can orchestrate operations between services. So they're working on an API and that's coming out soon, but that's going to let you, you know, work with these different blockchains.

Speaker 2:          09:05          Okay.

Speaker 1:          09:06          So if you think about it, like, okay, so it's got a lot of features. So where does it fit into this space? Right? We have different options for, you know, different things like, you know, a social network, decentralize a steam it for messaging. It's not whatsapp, it's status for remote jobs on upwork. It's Eith Lance, uh, for storage. It's not Google drive, it's IPFS. Um, where does this fit in? What it's kind of at the operating system layer, right? If you think about it, it's, it's a gateway. It stores your identity and your data. That's something you want to keep really close to you. Right? So what, what, what do you keep closer to you? What's, what's that? The lowest level of the stack, right? It's your operating system. And so this acts as a, as an operating system layer. And um, right. So all of these different cryptocurrencies they use, they use a seed. They use a seed to verify that you are the unique owner up some wallets, right? So what essentially does is it creates a seed and that seed acts as your id for all of your wallets. And um, it doesn't in a very interesting way. So what I want to do is I wanted to

Speaker 1:          10:10          talk about seeds. So we're going to coat a seed in a second. Okay. We are going to code a seed and we're going to do this in javascript. I still got this evolution simulator up. I've got to remove that.

Speaker 2:          10:25          Okay? Okay.

Speaker 1:          10:29          So we're going to code this in, in solidity. To give you an example of, you know, how seating works in, in the, in the context of ascentia and just in general because it's a great learning exercise. So if we have a contract, and this is in solidity by the way, but this is just like, you can use any language for this. But so if we have a contract and we want to say generate a random number, okay? So I see it is a random number. Okay. And so one way we can do that is inside of a blockchain by looking at the blocks themselves and then model and then using those values to create a random number. So I'll show you how to do that. So we can create a function that is called random number, Jen. It's, it's very, it's just one line. It's a one liner function, right? So we have the header, which is random, Jen, and it's going to generate a random number, uh, given some seats. So I'm just going to say some value, like two, three, four, some scalar value. And what it's going to do is it's going to, to return a random number. So I'll call this again, this integer, a random number. That's it. Okay. So how do we do this?

Speaker 2:          11:28          Okay,

Speaker 1:          11:29          I'm going to get in one line. I'm going to return. Okay? It's going to be an integer, unsigned integer. That's what that you means. And I'm going to use Sha three, which is a, which is an encryption protocol to then encrypt the contents of this. And what is this? This is a block. This is not just a block in the blockchain, this is that blocks hash. And if we're going to take that blocks number, we're going to subtract one it, combine that with the seed value that we had before run modular 100 which means that this is going to create a random number between zero and a hundred based on the last block Hash. That's it. Okay. So we're going to do, um, modular 100 and that's it. This single line of code in solidity, we'll generate a random number based on the lax blocks hash between zero and 100.

Speaker 1:          12:20          See how simple that was. And this lives on the blockchain. It's using the randomness or the, uh, the d, The determinism of the blockchain to then create numbers. That's our non deterministic, which you can do it in a single line of code. So I just wanted to show that for a second. Uh, and there are different ways of generating unique numbers anyway, technical overview, time of essential. So there's a lot of modules here. If we look in the white paper, there are quite a lot of modules or 29 different modules in this white paper, which is very ambitious. And if we look into it, you can see a list of all these boxes are the modules yet ESF as home s Corp Essbase as off as you know, as config. And etherium is also very complex and a lot of blockchains are very complex. So, and they've integrated with ethereum.

Speaker 1:          13:11          So, so core is really interesting. So core is, you know, as you would think the core of the application, um, it, it allows the ID to destroy, restore and backup, you know, itself. Um, it also allows for the creation of multisignature capabilities. So multisignature transactions are very popular in the blockchain community and this allows for that. So the idea is that if I want to send you some money and I don't know you, I would need a third party to be that intermediary, Amazon, Ebay, you know, upwork, what have you. But if we can automate that process, then that would make our lives easier and we can do this faster. So it multisignature transactions originated in the Bitcoin blockchain. The idea is that you have three people and it requires to have three signatures to then make that transaction happen, right? So the third person would be a third party.

Speaker 1:          14:09          It could be a single person, it can be your friend, it could be anybody. It doesn't have to be a single, you know, company. It could be any person. And so here's an example, uh, in Java script using the Bitcoin library to show you an example of multisignature transactions, which Ascensia uses. Essentially we see this list of private keys right here, okay? These are my, these are some private keys and we're going to take three of them. So right, it's for taking three of those keys and we're creating a script using those. Or in this script, we're going to perform multisig, right? So now we're going to add an input and an output and sign, uh, one of those transactions. Okay? So right here we're going to push that transaction to the network, right? So we've created a single transaction. We pushed it to the network.

Speaker 1:          14:57          Now we're going to do the same thing for another transaction right here, right? The same exact thing. And then we're going to do that for a third transaction just like that. And the, the unique part here is this bitcoin dot script stop multisig output. So because we pushed all three of those transactions to the Blockchain, we've also signify to the blockchain that, hey, this is a multisignature output. So we have three transactions multisignature output on the blockchain, and now are each two of those three, uh, addresses has to then send a transaction to the blockchain saying that, yes, I agree. And because of that, that, you know, multisig output function there, if two of those three send that transaction, the funds are unlocked and that's multisignature. Okay. So, um, yeah. Anyway, so about ess base, so there's a, there's a base module as well, and it basically you can, it acts as Api to court.

Speaker 1:          15:55          So it's this high level Api to what's essentially the core of the, of the system. Also for authentication there, there's this, there's this off module that lets you control a different parts of this very complex network of modules which, which, which you need. And then there's a bridge, right? So there should be some way either off chain on chain and a hybrid approach to be able to transfer value between all of these different blockchains that are integrated into ascension. And so the way to do this is an atomic cross chain swaps. And I want to talk about that at the end. And, but there's one more module ess pay, which uh, it encrypts the, it encrypts the wallets. Um, it acts as a plug in to connect and manage other payment processors and it, it's basically like the store of value for all of your different cryptocurrencies. So essentially has its own cryptocurrency as well. And there's going to be an ICO on June 25th, which is surprisingly soon. And you can see a link to that in the description.

Speaker 1:          17:00          And when it comes to encryption, there's a lot of different ways to encrypt a, a payment or in general anything. And this was what, this is what I mean when I say go is a great language because you can, you can encrypt so many different ways using the built in libraries. I mean look in this single crypto library that go has, we can use Sha two, five, six random a, he has cipher hacks, you know, and a bunch of different encryption algorithms and a single line, right? So encrypt just means run these functions on this data essentially. And that's why if there were any, um, um, IPFS and a bunch of other blockchain protocols that essentially has integrated, has used go,

Speaker 1:          17:42          right. So the last thing I want to talk about our atomic cross chain swaps, which are essential to this. And in general it's a very important topic. So the idea is that if I, if I have some etherium and you have some bitcoin and I want to transfer some ethereum to you and you want to transfer some bitcoin to meet, how do we do that? So the way that traditional, I guess you would say traditional, it's only been five years or whatever way to do this in cryptocurrency, is to have an exchange, right? So Coinbase or you know what APP, whatever cracking and they act as a third party. So we got rid of banks, but we still have this third party. So the way to get over that is to implement what's called an atomic cross chain swaps. And so this is a protocol of saying I'm person a, you're person B, I want to transfer value to you.

Speaker 1:          18:30          You want to transfer value to me. How do we do that with in an automated way so that what happens is person a me, my funds are sent to this escrow in the blockchain person, B's funds are sent to the escrow on their blockchain. Okay? So then their funds are locked, your funds are locked. We both receive a message that you know, each other's funds are locked. And then off chain, we're both going to agree on an exchange rate. Okay? So we'll say, you know what, let's, let's do it for this much. Two bitcoins is worth one ether or whatever. We'll then we'll then send a message to our, to our blockchains that indeed we did get it. And because that they got that message, the funds will be transferred. And so cross chain atomic swaps are a subject that is, it's a, it's a very interesting subject. If you want to see an example of this in solidity, you know, this, this is the most simple example I could find a, but check out this example. It's written in solidity, very simple stuff. Uh, but yeah, anyway, so decentralized gateways are very important to this space, essentially is a great example of that. Uh, links to everything I've talked about are going to be in the video description. Please subscribe for more programming videos. And for now I've got a link all the blockchains. So thanks for watching.