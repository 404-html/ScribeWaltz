Speaker 1:          00:00          Hello world. It's a Raj and cryptocurrencies are fast going mainstream. I'll show you how to use python to perform sentiment analysis on reddit and put her data and predict whether the price of bitcoin will go up or down on a given day. When people share data online, there's usually some attitude or opinion, some kind of emotion that's expressed with their share. If we read their data, be it a tweet or a comment, we can pretty much glean what that emotion is by looking at their context and wording. Sentiment analysis is the process of automating this kind of analysis using artificial intelligence, which allows us to scale it massively. The applications of this process are pretty broad. Many organizations across the world are using this ability to extract insights from social data to better target customers, predict market trends and exploit emotionally vulnerable youth. Some day we will dethrone news Zuckerberg, the Obama administration, for example, used sentiment analysis to gauge public policy opinion during announcements ahead of the 2012 presidential election.

Speaker 1:          01:08          The travel company. Expedia use it to realize that their customers didn't like the music behind their ad campaign, which resulted in a new virgin that was received very well. Investment firms use it to understand how shareholders are feeling about a certain company's stock when deciding whether to buy or sell and this lets them stay a step ahead of the competition. Ever since Bitcoin's price began to skyrocket, there has been this constant hype surrounding the cryptocurrency market. All coins are popping up every day. Some are scams, some make it to the top of the coin list in months. The topic is coming up everywhere. Radio, Twitter, the awkward bathroom stall conversations, but what is causing these digital currencies to fluctuate in price? Right now? The answer is mostly speculation. Crypto prices right now are being driven by network usage. They're being driven by speculation that the tokens are going to appreciate.

Speaker 1:          02:04          It's a gold rush mentality. If people expect the price of a cryptocurrency to increase due to a utility increase over time, like more merchants accepting it, a growth in transaction volume or a larger ecosystem of developers building on top of it, there will be a rise in demand, assuming that the supply does not increase in the same proportion, the price will go up. But if the utility decreases because of reasons like mobile platforms blocking it, technical issues, governments banning it or exchange markets getting shut down, the demand will decrease, but the supply will increase since more people are willing to sell. So the price will go down in the long term. The value of digital currencies will be way more determined by their utility and less so by speculation. But we can take advantage of this speculation driven market by analyzing the sentiment of the speculators on social media using machine learning.

Speaker 1:          03:02          So for this demo, we're going to aggregate data from people about bitcoin from reddit and Twitter. We'll also collect bitcoin price data from coindesk.com then we'll use a recurrent neural network that try and find a correlation between social media sentiment and the bitcoin price. Once trained, we can use our model to make predictions about the future price. The bitcoin subreddit is one of the biggest big coin communities in the world. Everyday people share news articles, tutorials, and events related to bitcoin and the top posts get up voted accordingly. Yes, it's a bunch of handlers. We can use a red at API to pull the top posts from this subreddit for the past 30 days. We can combine this data with data from Twitter, specifically tweets that used the word bitcoin using the Twitter Api. It's essentially going to be a lot of text data, so to clean this up, we'll use a prebuilt dictionary with a top 10 k most common words to remove words that are not in the dictionary will also use the coindesk API to pull the bitcoin price from the past 30 days and generate two classes using this data because zero means a price went up.

Speaker 1:          04:14          One means the price went down. Now that we've compiled the Dataset, we can build an appropriate model for this data. One thing we could do is build a bag of words. This means attempting to separate each word in a data point into a list of words, Aka a bag so that each word carries meaning with respect to the overall reddit or Twitter posts. And we could use a simple deep neural network to predict the price of bitcoin goes up or down based on this. But the problem with this model is that it doesn't preserve the ordering between words, meaning the network won't recognize complex ideas that span many words. We need a model that will let us input words in order that will understand that our data is sequential. That's why we'll use a recurrent network at every time step. We're inputting not just the next data point, but the hidden state from the previous time step.

Speaker 1:          05:07          And when it comes to price prediction, long short term memory, recurrent networks or lsms have been shown to give the best results because they remember longterm sequences, which is what we have LSTM networks. He's a special cell structure involving three gates, which stores the gradient during the optimization process in a way that allows it to fully update all the layers of the network instead of diminishing over time. A common problem when training recurrent networks, these dates are essentially a form of memory and their weights are updated as well. During the optimization process, gates are way to optionally let information through. They are composed of a sigmoid neural net layer and a point wise multiplication operation. The sigmoid layer outputs numbers between zero and one describing how much of each component should be let through a value of zero means let nothing through. While a value of one means let everything through.

Speaker 1:          06:05          So an Lstm has three of these gates to protect and control the cell state. They're like plumbing valves without the, you know. Yeah. You know what I mean? So we can vectorize each of our social media posts using word two VEC. This is a pre trained a neural network that we can use to immediately turn our words into vectors. These vectors are representations of words and allow us to measure how similar words are. Mathematically. It's a better, more machine readable representation of text that we can correlate with bitcoin prices. Once vectorized we'll feed our input data to our model with the associated binary labels in batches. Care Os allows us to build complex deep networks quite easily, so we'll use it with a tensorflow backend for our training process. We'll let our network make predictions about the price for each input data point. Then compare that prediction with the actual label.

Speaker 1:          07:02          That result is our error value, which we'll use grading dissent to optimize automatically by computing a gradient. Of course this gradient is a signal that tells our network how much do you update it's wade values to make it better. Once trained we can visualize how well our network predicted at the price went up or down on a given day. And luckily for us it's a better than 50% prediction. Obviously with more data our network will be more robust and while overfitting is a common problem in price prediction, we can use techniques like drop out and regularization to prevent this from happening in future versions. So what should you remember? Crypto currency prices are highly driven by speculation, and we can use sentiment analysis from social media to help predict future prices. Sentiment analysis is the process of using machine learning algorithms to analyze the emotions behind data from people and LSTM networks proved to be a useful model to help analyze sequential data. Please subscribe for more programming videos. And for now, I've got to predict the future, so thanks for watching.