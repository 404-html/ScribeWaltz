Speaker 1:          00:00          Oh world. It's the Raj and initial coin offerings. There's lots of misinformation out there, so let's talk about what they really are and then we'll create our own ICO using a newer programming language called solidity. There's a reason that there is a really high concentration of startups and the SF bay area raising venture capital. Money is much easier there than anywhere else in the world, but if we look at the data, there isn't a corresponding large concentration of blockchain startups there. Those are way more distributed globally. That's because token sales have democratized funding for startups. Anyone anywhere can now raise insane amounts of capital ics or a new way to fund projects through the sale of crypto coins, also called Tokens and the rabbit hole goes deep learning. So let's start with some cryptocurrency one-on-one. As the Internet became mainstream in the nineties innovation absolutely flourished.

Speaker 1:          00:56          People started realizing that the Internet enabled the creation of new types of businesses with global reach. The need for an online payment network became apparent and software was created to incorporate legacy money transfer systems like ACH and visa online. This worked well enough, but payments needed a clearinghouse, a middleman to facilitate all transactions. Because of this, transactions were slow and required a fee. A few early pioneers realize that a payment protocol could transmit value directly without middlemen and that would be a faster and cheaper solution. A few attempts at this were made. A computer scientist named Nick Sabo created big gold, but none of them were able to succeed because they didn't utilize the correct combination of technical ideas. Then in 2008 on unknown programmer named Satoshi Nakamoto released a white paper and associated code for a digital currency he called bitcoin. Bitcoin is a peer to peer protocol.

Speaker 1:          01:52          It's a set of rules that govern the storage creation and transmission of monetary value online. It's not owned by anyone, but anyone can build applications on top of it. Similar to how no one owns email protocols like I map and pump three, but Google and Yahoo have built email services on top of them. The bitcoin protocol uses public key cryptography to create a key pair that controls access to bitcoins. The key pair consists of a private key and derived from it. A unique public key. The public key is used to receive bitcoins and the private key is use it signed transactions to spend those bitcoins. Think of the public key as similar to a bank account number and the private key as similar to the secret pin. All transactions are arranged into chunks of data called blocks. These blocks linked to one another, thus forming a chain of blocks or a blockchain.

Speaker 1:          02:43          Computers that verify and record these transactions called miners store a copy of this blockchain. They solve random useless but difficult math problems using their computing power and get paid in Bitcoin by offering proof of their computational work. This is how the network is secure. It's what makes the blockchain immutable. An attacker would need more computing power than 51% of the network to manipulate the blockchain and spend money they don't actually own and it's remained secure all these years. So illuminati confirmed developers immediately saw the potential of blockchain technology for other use cases and many of them forked the bitcoin source code, added some new features to it and launch their own cryptocurrencies like light coin and mastercoin. But creating, securing and maintaining a blockchain network from scratch is hard AAF. So in late 2013 a developer named Vitalik Buterin created a new blockchain called Atherium to make it easy for anyone to create blockchain applications on top of it without having to bootstrap a blockchain network themselves.

Speaker 1:          03:51          Etherium has its own built in programming language that is touring complete. That means you can write software with it that can solve any reasonable computational problem. Bitcoin also has its own scripting language, but Sitoshi limited its functionality for security reasons. It can't perform looping or recursion, for example, with etherium is language solidity. Anyone can create what are called smart contracts. A smart contract is a protocol that defines financial rules. Would they clear cryptographic way of verifying transactions in a De centralized way? That means without the use of a central server. It's a network that proves it's fair red, just we don't need of God in encryption, we trust so bitcoin and in fact every cryptocurrency can each be considered a smart contract. Smart contracts can also be used to create all sorts of decentralized applications. These are pure to pure autonomous applications that are owned by the community rather than a central group theory and blockchain calls.

Speaker 1:          04:54          It's intrinsic token ether and like bitcoin. It also contains a log of transaction like events, but it can be filled with a much wider variety of event information when a transaction is sent to a contract account, the code associated with the contract account is executed by the etherium virtual machine run by minors. Each miner goes through the transactions listed in a block, runs the associated code and stores the resulting values getting rewarded with ether. That's why ethereum is sometimes called a world computer. It's like a decentralized Horoku. This means you can programmatically create any kind of financial contract like a derivative or a bond or insurance in any legal jurisdiction without needing to pay millions in legal fees. Software is eating both finance and law and as these technologies come to fruition, we've seen an absolute explosion in a type of smart contract called an initial coin offering.

Speaker 1:          05:55          It's a way to crowd fund by issuance of a Tolkien. This token could be used to access some scarce resource of the project, like in the case of file, coin storage space, or in the case of open mind datasets, you can create your own economic model, defining economic incentives using a token. This is really important because we live in a world where being able to generate a lot of capital doesn't necessarily mean creating a lot of value. Take Nikki Minaj for example, or the fact that some companies generate lots of capital for wrecking the ocean and on the flip side, lots of open source projects like the Linux distro generate a lot of value, but the creators didn't generate a lot of capital. In Ai, we call this the credit assignment problem. How do we properly propagate, reward back? I can help better approximate the relationship between the two bitcoin and ethereum where the first examples of that early developers got rewarded big time.

Speaker 1:          06:52          Anyone with a nice landing page and a white paper detailing their project can potentially raise tens of millions of dollars in seconds leading to a lot of scam attempts. The space definitely has all the characteristics of a bubble right now as governments are still trying to figure out how to regulate it. It is the wild west of fundraising that can be open to both accredited and nonaccredited investors. Unlike an IPO that requires up to six months of filing requirements and professional oversight by the Sec, anyone can perform an ICO, but the successful ISOS are the product of careful thoughts on economics and game theory. They are well planned events that have generated interest beforehand. Nonprofits, open source projects, things that provide real value to the world that aren't necessarily heavily incentivized right now are great opportunities to Ico n, so let's create a token and an ICO contract for it.

Speaker 1:          07:47          With the help us some tools, we'll use a framework called truffle that makes building apps on top of ethereum. Very simple. We'll also use open Zeplin for its ability to help us create secure smart contracts. One small bug in a smart contract. Could mean we could lose a lot of money, so it's best to use tried and trusted solutions. Rather than reinventing the wheel for our blockchain node, we'll just use test RPC. Since it's fast and developer friendly in terminal, we'll install our packages using npm. We'll install each package and create directories for our ICO and initialize our project. This adds the Zeplin solidity folder to node modules and inside we'll find smart contract templates from the Open Zeplin Library r Tolkien. We'll have an emergency stop mechanism, which means we'll be able to pause transfers with the token so if something happens during the crowdfund, we can halt the process to better understand what's going on.

Speaker 1:          08:46          Will first create the token contract. This is solidity, this smart contract language of etherium. It looks a lot like Java script open provides a nice token creation template for us. We just need to define some key attributes of our token, like its name, symbol and supply. Now we'll create a crowd sale contract. Again, we have a template for this. We just need to call the token we've named previously, as well as give a few parameters to the constructor function. One hour is estimated to be about 212 blocks, the rate of token per ether and the wallet address of the contract owner. Now we'll want to deploy this contract to the test chain, so let's first run it. Then in the deploy contract javascript file, we'll modify it to include our custom parameters. The crowd sale contract is what we will deploy and it will create our token back in terminal.

Speaker 1:          09:39          We'll compile truffle and migrate it. We can see it in the test RPC tab that the contract was successfully deployed. Let's open the truffle console and interact with the deployed contract via the web three dot js Api from our account. We'll buy some tokens and check our account to see if we bought them. And yes we did. It worked. Moving forward, we could build a web app around this that lets users interact with the crowd sale token contract and add more functionality to the contract itself. I could deadline and a token cap. So what have we learned? Bitcoin's blockchain for the first time provides an immutable peer to peer database. Etherium built on that idea by creating a Turing complete version of the blockchain that lets developers create peer to peer applications on top of it easily. And an initial coin offering is a token sale that people can use to crowd fund their project, which ethereum makes very easy to do.

Speaker 2:          10:33          Wizard of the week is out that his toe got shit. He builds accustomed. Quantum circuit demonstrate the bell states the simplest example of entanglement between a pair of cubits. Make sure to give it a star in second place goes to Eric Al Qaeda. He eliminated Grover's out rhythm, a quantum search algorithm that runs quadratically faster than any equivalent classical algorithm. Great work.

Speaker 1:          10:55          This week's challenge is to create a more advanced token sale contract using solidity details are in the read me get humbling scope in the comments and what is announced next Friday. Please subscribe for more programming videos. And for now I've got to get sec regulation, so thanks for watching.