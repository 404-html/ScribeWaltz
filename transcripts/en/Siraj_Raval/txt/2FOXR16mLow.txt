Speaker 1:          00:00          Hello world. Welcome to throw geology. Ever wonder how Netflix recommends often shows you like or how Facebook can auto tag your face or how Google's self driving cars work or how big can, what's that? You don't care what [inaudible] does, it's okay. Nobody does. Anyways, the answer is machine learning. Machine learning is a study of algorithms that learn from examples and experience instead of hard coded rules. So let's say you want to build an app that can recognize an image of a specific species of flower called Iris. If you decide to code this without machine learning, you'd have to write a bunch of different functions to detect all the different features of an iris flower. The problem is there are a bunch of corner cases and there's no way you can account for all of them ahead of time. Like what if one of the leads is partially obstructed or a flower is a certain color that you didn't account for or the shape is totally different than what you expected.

Speaker 1:          00:48          You can't just code all that up beforehand unless you're Jeff Dean. Just kidding. Jeff Dean can't do it. Nobody can. You have to use machine learning to solve this problem and here's the best part. It's actually super easy and you don't need to be a math person to do it. They're just four steps involved in the process. Collect data, pick the model, train the model and test the model. We'll basically just add data to a model and it will start to find patterns in the data for us. We're going to make this Irish flower recognition APP, which has seven lines of python using two dope libraries, psychic learn and tensorflow which will important right at the start. So let's do this. The first step is to get our data. Data sets come in, all different kinds of formats, pdf, CSVs, holograms. It doesn't matter the format. We can easily parse it in our code to get the relevant details.

Speaker 1:          01:35          We'll be using a well known data set that contains 150 samples of Iris Flowers. Luckily for us, this data set comes preloaded with psychic learn, so we can just load it here. Each sample has a label, one of three types of Iris, toasted, Virginica or versicolor. And instead of features, Sepa Lang Sipa with pedaling and pedal with, because our data is labeled, the type of learning we're doing is called supervised learning. If we didn't have labels for our data, just features, they don't want to be called unsupervised learning. So yeah, these are good features there. Simple, independent and informative as all features should be. By the way, if you're ever deciding on what kind of features you should look for in a Dataset, a good rule of thumb is thinking about what features you personally would need to figure out to determine whatever your goal is. So if you're trying to determine Jedi or sith given a data set of lightsabers, don't pick something like weapons status as a feature.

Speaker 1:          02:23          Use Blade colors and curvature as your feature. So now that we have our Dataset, the next step is to pick the model. To do that, you just have to calculate the multivariate equation for discriminant analysis by squaring the delta. That just kidding. You literally just pace in a single line of code. The real question is how do you know which of the [inaudible] machine learning models to use? Well, we're trying to classify an image as either an iris flour or not an Irish flour, so we know that this is a classification problem, therefore we'll need to use a classify or okay, that narrows our options, but what type? Like there are a lot of those to my gut reaction is to use a deep neural network because it just sounds dope. You know what I mean? But there are countless others. The answer is it depends.

Speaker 1:          03:03          It depends on the size of your data and your application requirements. Currently, if you have a lot of data, deep neural networks pretty much outperform every other machine learning model across a wide variety of use cases. But in our case, we only have 150 samples. So use something simple and standard. A linear classifier will set the preclass parameter to three. You can also easily just switch out the model with another one and see the difference in accuracy. It's just one line of code, like that's all it would take to use a deep neural net to classify this if we want it to. That way you'll know which one works best. Now we picked our model. It's time to train it. Training is the actual learning step. As your model iterates with the Dataset, it gets better and better at prediction. Since we're using a classifier, we've seen a called the [inaudible] method on our object to train.

Speaker 1:          03:45          Our model is our training algorithm. This meant that will input the training data set into our model, finding patterns in the data boom, done. Now, whenever we input a new flower farmer testing data set, it'll automatically be able to classify it as one of the three types of iris flour. We can see internal at the accuracy score for classification is pretty high. How easy was that? Just seven lines of code and now you have your first model trained and ready to recognize flowers. You just made a learning machine and you can use the same model to classify other things like cars and dresses and Republican candidates. Machine learning can be applied to so many different things from fraud detection to generating paintings like the Casa. If you'd like to see more machine learning videos, please subscribe. I'm going to release a lot of them, and for now I've got to go fix a runtime error, so thanks for watching.