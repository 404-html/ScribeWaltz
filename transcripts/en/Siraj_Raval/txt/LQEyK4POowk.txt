Speaker 1:          00:01          No, I don't need help. What's going on? Hello world, it's Saroj and one of the most popular services for cloud computing is Microsoft's Azure. It's got everything. A business needs to run all parts of its computing operations, virtually meaning servers, storage, analytics, Api Apis, all that stuff. I'll use it to predict the price of a car using it's drag and drop interface and if you're new here, hit the subscribe button to keep up with my AI content in this age of cloud computing, it's crazy to think that just over a decade ago, if we wanted to serve a website to people on the web, we had to build and manage the physical hardware needed for computing like servers, red bull and Ethernet switches. Now it's all about renting the hardware resources as we need it. This pay as you go model has been wildly successful with most major cloud providers now offering it.

Speaker 1:          01:03          If we look at the marketplace for cloud computing, it's clear that a zero is only surpassed by AWS in quarterly revenue. Another incredible statistic is that 85% of fortune 500 companies from a Yoda to NBC universal use Azure. Clearly Microsoft dominates in the enterprise market. Most of their servers are running windows anyway and Azure makes that integration very simple. Uh, zero has its own version of all the standard cloud services available under the categories of compute, storage, databases, networking Api Apis, each with a unique name, even blockchain. What I've attached a sheet that maps out every service name to its competitors to help familiarize yourself with what each tool does. It'll be in the video description, but what makes a zero unique? It's blue. Well, for starters it's dedication to the hybrid cloud is definitely worth noting. A private cloud is a set of computing services that are offered either over the internet or a private internal network and only to select users instead of the general public.

Speaker 1:          02:16          This can also be called an internal or corporate cloud. This gives businesses the benefits of a public cloud like elasticity and self service with the additional customization and control available from a dedicated computing infrastructure hosted on premises. And don't forget the leveled up security that a company can implement through both company firewalls and internal hosting to ensure that sensitive data is not accessible to third party providers. The con here is that private clouds require the same staffing management and maintenance expenses as traditional data center ownership. A hybrid cloud allows a business to take advantage of cloud bursting to free up more space and scale computing services to the public cloud. When computing demands increase, hybrid clouds are easier with a zero because Microsoft for saw the need for hybrid clouds early on, we can use onsite servers to run our applications on the Azure stack and set our computing resources to tap into cloud based resources when necessary.

Speaker 1:          03:28          Several a zero offerings like the hybrid CQL server and a zero store simple help with this. Microsoft's a long history of working on enterprise. It gives them this edge, but let's talk about its machine learning offerings since that's what we care about the most. A [inaudible] machine learning offering has five components, a workbench and experimentation service, a model management service, a set of libraries and visual studio tools for AI. Together. A developer can use these tools to train and deploy machine learning models in the cloud on premise or at the edge. It fully supports open sores, python libraries so we can use tensorflow, psychic learn, Pi Torch and others to build our models and experiments can be executed in a managed environment like a docker container or a spark cluster with plenty of gps to help accelerate execution. It's custom. M M L spark framework provides integration with Apache spark and their cognitive toolkit as well as open CV.

Speaker 1:          04:34          This lets developers quickly create scalable predictive models for large images and text datasets. They've got some extensive documentation about this in their get hub repository, which is pretty lit. Spark by the way, is a unified analytics engine for machine learning developed at UC Berkeley a decade ago. Big companies have rapidly adopted and deployed spark at massive scale collectively processing petabytes of data on clusters, over 8,000 nodes and in the process helped make it one of the largest open source communities on the web. It's a framework for efficiently processing large amounts of data in parallel. It's built in libraries for ml are well made and it turns out to be much easier to work with than traditional MapReduce and with project brainwave, you can deploy your model to be trained on not just a CPU or GPU, but if field programmable gate array or FPGA, this is a customized circuit that's highly efficient and flexible.

Speaker 1:          05:37          A trained neural network can be run as quickly as possible on an FPGA and can you me paralyzed across multiple ones? The scale of service, it makes it possible to achieve low latency for real time inferencing requests. Microsoft made the world's largest cloud investment into these FPG A's and although right now it's limited to just tensorflow deployment, you can try out image classification and recognition models with it immediately. The ML workbench is a desktop application with command line tool support on windows and Mac. The entire ml pipeline is supported including data, preprocessing model development and model deployment. Using the built in Jupiter Notebook and native get integration. It makes it easy to get started when it comes to execution. The experimentation service supports the workbench by providing you with the ability to execute experiments across a range of compute environment options, local native, local docker container, remote docker container, a spark cluster.

Speaker 1:          06:46          This is where that focus on hybrid computing Microsoft has I mentioned earlier comes into play, but keep in mind that models need to be updated over time on new data. They need to be retrained and sometimes different versions need to be served. Two different segments of an audience. The model management service allows us to use simple cli commands to containerize our model and deploy it to all types of computing environments and if you do use visual studio, the tools for AI extension lets you see a history of past training runs a gallery of projects and an explorer view for selecting compute targets for your script to execute. But the unique feature about Azure I find most interesting is the machine learning studio. It's a browser based, visual drag and drop environment where code isn't even necessary. It takes you from idea to deployment in a few clicks.

Speaker 1:          07:45          Let's try out a demo and try to predict the price of a car in the future. Using a Dataset of car prices, our first step will be to retrieve the relevant Dataset. We can use one of the sample datasets included with the studio or import data from our local machine drag and drop interface. Since our data set is included in the workspace, we can create a new experiment, then name it something meaningful. On the left of the experiment canvas is a pallet of datasets and modules. Once we type automobile in the search box, we'll see our dataset. We can drag it into the experiments canvas. Once there we can visualize it by selecting the visualize button on the output. Port datasets and modules have input and output ports represented by small circles and put at the top output at the bottom. As we create a data flow, we'll connect an output port of one module to an input port of another.

Speaker 1:          08:44          In our sample Dataset, each sentence of an automobile appears as a row and the variables associated with each appear as columns. The price in the far right column. That's our target variable to predict given the rest. Let's close out of the visualization and prepare our data for machine learning. There are some missing values present in the columns of different rows and the normalized losses column has a large proportion of missing values, so we'll exclude that column from the model as well. We'll find these select columns in Dataset module. Then drag gets into the experiments canvas. Once we connect our ports, we can find the column in question and remove it swiftly. Now we can drag the clean missing data module to the canvas connected to our select columns module. Using the remove entire row mode, we can automate removing rows that have any missing values.

Speaker 1:          09:42          When that's done running, we can define what some good features from our data set would be. For machine learning. We can select features for prediction inside of the select columns in datasets module. Now we can set some custom rules, specifically the features we want to include that we think are relevant to the target price of variable when selecting features for machine learning. Usually those that we personally would use to differentiate something are the ones that tend to be the best features. Once we've selected that, we can choose a machine learning algorithm to apply because we want to predict a price which is a number, not a category. We can consider this a regression, not a classification problem. We can first split our data into training and testing datasets. Then initialize a linear regression module, which we can find under the regression category. This will create the line of best fit across our dataset.

Speaker 1:          10:40          Once we click a train model set our target variable and features, we can run the experiment. Once our model is trained, we can use it to predict new car prices. We can connect the score model module to both the train model and split data modules, run the experiment and view the output from the score model module. It shows the predicted values for price and the known values from the test data. From there, we can iterate to try and improve the model using different ml algorithms and deploy it as a predictive web service. Overall, [inaudible] is definitely a useful cloud solution for enterprises and the ML studio. Drag and drop interface is a unique offering that lets entry level developers intuitively and easily build ml models. Welcome to the beginning. I mean the end. Hit subscribe and I'll love you forever. For now, how can I try to interview Satya Nadella? So thanks for watching.