Speaker 1:          00:00          Hello world it Saroj. And today we're going to talk about a cryptocurrency called car Dano. Well, the coin itself is called Adda by the blockchain that it's a ports is called Cardinal. And it was created by the co founders of etherium. You've got Charles Hoskinson, which is, he's basically like the Steve Jobs of Crypto and you've got Jeremy would. So both of these guys have been in the space for five plus years and they've seen a lot of the problems that happen with cryptocurrencies and they took all of those problems and they decided to make one single solution called court car Dano, which I've been researching a lot lately. And I think the platform is very, very cool. So in this video I'm going to talk about its architecture, how it works, how it's delegated, proof of stake algorithm works, and how it's different from bitcoin and ethereum.

Speaker 1:          00:45          So let's start off with bitcoin. You always got to start off with Bitcoin, right when it comes to cryptocurrencies. So there've been three generations of distributed ledger technology so far. The first generation was obviously Bitcoin, right? And You got light coin and all the initial, all coins. But the idea was always the same. Can we create decentralized money? And the answer was yes. Right? So money that doesn't require a trusted third party. No, I'm not going to explain how bitcoin works. I've done that in previous videos, but I will say that bitcoin allows Alice to send money to Bob without needing a trusted third party, right? We had the traditional way to do this and involved a bank, a clearinghouse, the ACH network, all of these different networks that were pre-internet, right? And so it took, it takes some time for Alison, send money to Bob if he's in a different country because it's requiring all these different old, old world protocols.

Speaker 1:          01:37          But there's one thing that bitcoin cannot do. What if Alice wants to send money to Bob? Only if Bob Mo's her lawn, right? So you've got to have a network that's able to communicate with the real world, some kind of lawn mowed API or something like that where the transaction can tell if a Bob mode Ellis his lawn and, and if, and only if that happened, it will release the funds and send them to [inaudible] from Alice. But bitcoin does not allow for this. However, a lot of people don't realize that bitcoin does have its own scripting language, right? So Toshi implemented a scripting language in Bitcoin, however, it's very limited. And that's for security reasons. Mostly. Uh, for example, the Bitcoin scripting language does not allow for looping at all. Uh, so this is an example of a bitcoin script. It's a very trivial example. You just have three variables here.

Speaker 1:          02:26          I add them together and then I returned them. So that's an example of bitcoin script. It's useful for things like escrows, but not very detailed. Escrows are anything more than just, you know, multiday multisignature transactions. So enter etherium. So a theory on came from a problem with bitcoin has in can we decentralize everything else in the way that we can decentralize transactions without the need for a third party? Can we also decentralized computation? Right? Can we decentralize the, the way of building an application in general. So I like to quote metallic, the founder of Etherium, when I say comparing bitcoin to ethereum is kind of like comparing an apple to a phone. They're just completely different technologies. So if you're in, for example, is if you're IOM is a programmable blockchain, that's the way you can think of it. It's a programmable blockchain. And you might be saying, wait a second.

Speaker 1:          03:16          Bitcoin has its own scripting language. It's programmable. It's, it is, but it's very, very limited. If barium is a, has a Turing complete programming language called solidity, Turing complete means it's able to do everything. Loops is one trivial example. Recursion is another one. But anything that any programming language can do, if they're eoms solidity can do. It's Kinda like when javascript came to the browser, for example, before Javascript, all web pages were static, right? You had html, you had CSS. But once javascript entered the browser, we were able to do dynamic things and had much, much, many more features than we could before, right? So it allows for customizable transactions. And what I mean by that is code on the blockchain. So Heroku is a great example. [inaudible] you've got Hiroku, you code some script, you upload it to Heroku. Heroku is that centralized source for that code.

Speaker 1:          04:08          It runs a computation. And then all nodes that are connecting to your web app with your Heroku backend have to connect to this central source. However, with etherium, you don't push that coat to Hiroku. You Post, you push it to all the nodes in the network via a transaction. That's your push, your push is a transaction. And then all the nodes that are running a full etherium, um, client have to process that computation, um, block. And so then once that code is run, all the nodes in the network have to compute that code, right? So it's decentralized computation. And this allows for unstoppable applications, applications that no one can shut down. This has a range of use cases from financial transactions to health care, all sorts of things. Um, but I won't go into that either. Here's an example of a theory. I'm script right here.

Speaker 1:          04:54          Solidity. It's much more readable. It looks kind of like python, but this is a proof of existence script in etherium. You've got one function that's returning, uh, another function. So that's an example of solidity. But etherium as awesome as it is, has its own problems, right? So etherium has governance problems, Aka the hard fork or in the soft fork, it's got security problems, Aka six. Scalability, how do we solve these problems, right? How do we solve scalability? How do we solve interoperability and how do we solve sustainability? I'm going to go into each of these three points in a second. But if we look at the blockchain history, Bitcoin allow for a distributed ledger and it allowed for the advent of cryptocurrency. Ethereum allowed for the same two things. In addition, it allowed for smart contracts. Now, the third generation of blockchain has to do more than both of them combined.

Speaker 1:          05:46          What can it do? Well, we know that any kind of programmable blockchain is touring complete. It allows for building all sorts of decentralized applications. However, the is not the number of features that the problem is. It's infrastructure. How do we improve that infrastructure? Right? So one huge problem when it comes to blockchain's a scalability. And these are the three points that cardinal aims to solve. I'm going to go into how it aims to solve all three of them, right? So for scalability, there are different proposals for solving Bitcoin scalability, right? What if we shift the burden onto the users via trusted intermediaries for etherium, what if we tweak the tuning parameters, limited head room, or do security margins? And then there's entirely different, um, uh, solutions like semi-closed groups like the ripple protocol or stellar, you lose your openness, but you have public transparency benefits.

Speaker 1:          06:42          And then the hardest solution is to rethink your architecture entirely. And that's where third generation cryptocurrencies are coming into play right? Now, I talked a bit about Ibotta, right? So I, Yoda just discards the idea of a blockchain entirely and moves to a directed [inaudible] graph, right? So it's, it's, it's instead of a linear data structure, it's a dag data structure, but that's just one way to solve it. It's not that the idea of a blockchain is inherently bad, it's just that the infrastructure around it can cause these problems, right? Having a blockchain that uses the proof of work, for example, requires huge amounts of computation, way too much, a lot of electricity, a lot of scalability problems, having all the nodes have to download a full copy of every transaction in and of itself is just not able to scale, right? What if we have, you know what, if in five years we have billions and trillions of transactions, you're telling me if I want to be a minor, I had to download all of those transactions to my laptop.

Speaker 1:          07:40          That's a lot of transactions. Hence the problem with scalability, right? And so that brought the blockchain protocol. The bitcoin protocol specifically relies upon many nodes pro possessing a full copy of the blockchain data, and so this restriction prevents cryptocurrencies from scaling to compete with legacy financial systems like visa for example. Right? The bitcoin network allows for seven transactions per second. Visa is something on the, you know, just orders of magnitude more like 10,000 plus transactions per second. So what cardinal offers as a solution to this is it's own proof of stake protocol. It's, it's actually a delegated proof of stake protocol and they call it aura boreaus, which I'm going to go into at the end of the video. There's another problem with scalability. It's not just about the number of transactions per second, it's also about bandwidth. So when it comes to bandwidth, how much data can we pipe through these networks all at once.

Speaker 1:          08:33          And so their solution for this is using a network architecture called Rena, which is short for recursive Internet work architecture, which I'll go into a bit as well at the end. And the last problem when it comes to scalability is data scale rights. How, how do we scale the amount of data that it's, that is in the network, how do we structure that data? So everything is as fast as possible. And there are several solutions for this. There's pruning, there's compression, there's partitioning. So there's a lot of problems when it comes to this and there's a lot of proposals on how to fix this. So interoperability, right? So this is the second major problem we've got scalability, interoperability, and the last one, which is sustainability. So when it comes to interoperability, whenever we want to send cross border payments using the legacy financial system, one bank will send money to another bank, right?

Speaker 1:          09:22          And if they have this partnership, right? They have these protocols to send money between different banks. They have partnerships, and they have all these, you know, Kyc and all these different compliance protocols. So they'd been around for a while. And so it's very difficult for Bitcoin to communicate with the theory. [inaudible] for example, and other old coins. However, for banks it's easy because they built these protocols over many, many decades. Um, and so in the traditional financial world, how is a bank supposed to talk to Bitcoin? Forget about Bitcoin, talking to about talking to other altcoins. How do you get a bank like ing to talk to the bitcoin network, for example? This is very hard, right? Banks need these compliance regulations. Kyc, you know, there's all these different compliance regulations at other banks are really good at complying with that. Cryptocurrencies are not, they're just these networks run by developers and they're not as mature.

Speaker 1:          10:13          So we would need these compliance protocols built into these cryptocurrencies for the traditional financial world to be able to talk to the new financial world. And we need cross chain transactions without the need for a third party, right? So right now the way that bitcoin can talk to theory them is by using a centralized party like Coinbase for example, or crack in or any of these exchanges. So these are kind of temporary solutions to transfer of value between different currencies, but they're centralized solution in and of themselves, right? So we need a way to allow for value transfer between cryptocurrencies without the need for a third party. And we also need three other kind of smaller details. We need metadata. That is who we sending the transaction and have that be opt in or opt out based on whether or not you want to be visible.

Speaker 1:          11:04          We need attribution who sent what rights and we need compliance. Like I talked about before, a Kyc. And so for Bitcoin, there's this idea of the side chain proposal where you peg an alt coin to bitcoin and this would require a change inside of the bitcoin network that did the developers have to accept. And there's this whole theory behind how side chains can work, et cetera. Uh, but it's in the works. Now lastly, there's one more problem when it comes to cryptocurrencies in general and that's sustainability. Okay? So how do we sustain a network over a period of years, if not decades? So one way to do this is by using the ICO model, right? So the initial coin offering model, this is a way for the network to gain a huge sum of money all at once. But the problem is that this is a huge sum of money all at once, right?

Speaker 1:          11:52          This can walk up, no matter how big it is, eventually it's going to run out. So it's not a very sustainable model for fundraising, for the developer to the network and for the users and the contributors. It's just not sustainable. So a better way of sustainably funding a network is to the idea of of a treasury, right? A treasury system. So one cryptocurrency that did this very well is the dash protocol. So with the Dash Protocol did is it has this treasury that is this kind of volt of savings that the network holds. And so the users can vote on how that and how the money in the Treasury is spent through voting, right? So you have all these different proposals for things that would grow the dash network like launching dash in Zimbabwe promoting dash to 200,000 people, let millions of Chinese investors on who'll be invest in Dash, all these different things, right dash documentary and users can vote on how much cryptocurrency they want have to be allocated towards these proposals.

Speaker 1:          12:55          So that's just a more sustainable way of doing things. And cardinal has adapted this model of using a treasury, right? So you know, how should we go about something, how do we solve the problem of governance? And this is a, this is a very hard problem, right? With, even with etherium, there has been this idea of the hard fork and the soft fork. To explain a little bit about the difference between the two. Hard forking is not backwards compatible. So it's a completely different type of network. Soft forking is right. So it's a, it's, it's a change to the network that the old nodes would have to upgrade too or else they're not a part of the network ever anymore. So let's talk a bit about cardinal and now that we've talked about the problems with blockchains so far. So the team so far consists of Charles Hoskinson and Jeremy would, both of these are cofounders of Atherium.

Speaker 1:          13:41          These guys have been around for a while. So they've, they've seen the problems that come from both Turing complete and non complete blockchains. And so they claim that it's the first blockchain platform to evolve out of a scientific philosophy, philosophy and a research first driven approach. I mean, if you look at their team, they've got a bunch of PHD's. Um, it's a, it's a very solid team, which is, which is cool. And it's backed by three independent entities. The car, Donald Foundation, which is a nonprofit, um, the Io aged k, which is a crypto studio, started by both of these two and Emergo, which is a cardinal specific blockchain studio. So it's got a lot of money that's been funded into a lot of resources, development and, and funds. So when it comes to it to architecture, one thing that I think is very interesting is the fact that it uses, Haskell has a programming language.

Speaker 1:          14:29          It's the first blockchain to be coated in Haskell and in Haskell. If you're, if you love math, Haskell is a language for you. But basically, uh, Haskell is a language that allows for a prototyping. Very complicated math equation is very fast. And I've got a little example for you here that I just pulled from their repository to see. Just so you can see what Haskell looks like in the context of a blockchain. So it's the first cryptocurrency to be written in Haskell. It also has to scripting languages. One of them is solidity. So this is another example of solidity. Very readable language. Looks a lot like python. And if you're familiar with python, you'll, you'll catch up with solidity very fast. Also, it's composed of two independent blockchain layers. You've got the settlement layer, and then you've got the control layer, and I'll talk about the difference between the two.

Speaker 1:          15:19          Cardinal separates the accounting from the story behind it by creating two protocol layers. The settlement and the control layer. That settlement layer will have. The unit will have a unit of account or value while the control layer runs computations in the form of smart contracts. So right now we can look at the settlement layer. The computation layer is still in the works. It's still to be built. So let's take a look at the settlement layer, which we can look at on get hub right now, but it's a standalone blockchain powered by the actual Ada token, which you can buy right now and or boreaus there. A proof of stake algorithm allows for features such as delegation and side chains, which allows for interoperability. So if we look at this a get hub repository right now, we can see the wood, the settlement layer looks like the whole thing is coated in Haskell.

Speaker 1:          16:04          Uh, it doesn't have that much internal talky documentation on the get hub website. But if you want to see documentation, they've got the separate website called Card Donald Docs, which we can look at. A lot of it is just reasons why you'd want to use card Donno, but it's also got installation instructions as well for supporting platforms. You can install their, uh, their wallet on windows and Mac Os. Uh, and it's got a bunch of descriptions of how APIs work, how the, how the transactions work, how the steak is distributed. It's got a lot. So it's got a lot of documentation, which is a good thing. Uh, and I can make another video on that to go really into those technical details, but check out the get hub repository and check out that technical documentation. Now the computation layer is what they want to build. So this is kind of a future thing, but it's where information contained in this settlement layer is processed or computed in particular transactions.

Speaker 1:          16:56          So it's this smart contract layer. Tbd is just, I mean Tldr, it's a smart contract layer and so it never touches or wait for the CSL layer except for when a reference point is necessary and runs an implementation of their proof of stake algorithm just like the settlement layer. So they both do. So let me talk a bit about Ora Boris. Now they're their consensus algorithm. So when it comes to proof of work, the way proof of work works is you have the probability of mining a block depending on how much computational work a minor does. And so payout becomes smaller and smaller for bitcoin miners and there's less incentive to avoid a 51% attack. And they, these POW systems become these powerful mining communities that tend to become centralized. So the way proof of stake works is instead of saying it's all about computing power, it's about how much money you have in the network, how much stake you have in the network.

Speaker 1:          17:51          So a person can mind, depending on how many coins they ho hold. So depending on how much stake they have in the network, and the POS system makes any 51% attack more expensive. And so pos systems are more decentralized, but must work hard to build communities around their coins, right? You don't want centralization in terms of only these people have, you know, this much steak. So when it comes to delegated proof of stake, and this is what Ora boreaus implements, voting power is determined by how much stake you have. It's not just about how much mining power, it's about voting power, right? So a whale that owns 100,000 tokens has much more voting power than a minnow that only owns a hundred tokens. Right? And so based on how many tokens do you have, your voting power increases, right? So it's, it's kind of, it's, it's, it facilitates the decentralized elections, have a quorum of consensus notes.

Speaker 1:          18:46          So it's not completely decentralized. It's not totally centralized. It's a mix between the two. It's kind of like liquid democracy, if you've heard that term before, but it's delegated proof of stake. You've got some delegates ride that people vote for in the network, and if the delegate is corrupt, everything is transparent, then you just fire the delegate and find a new delegate, right? So that, that's kind of what they do. Bad actors are fired and it removes the requirements for widespread storage of the entire chain. So not every node has to download a full copy of the blockchain, which speeds up speeds up transactions, right? It solves that scalability issue. And so these consensus Dodes can run more traditional protocols developed over the last 20 years to accommodate the needs of large infrastructure providers like Google and Facebook that are more centralized because these notes have been elected democratically by the network

Speaker 1:          19:37          and it reduces resource requirements, which makes it easier to, for multiple quorums concurrently to partition transactions. Two different forums. So, uh, the, the other part is the recursive internet work architecture. And this solves the problem of bandwidth. So Rina is actually pretty complex. There's a lot of, there's, there's a lot of theory behind it and they're actually still developing it, but it's been around for 10 years. But essentially it's an alternative to TCP IP that is more suited for decentralized applications. So it's, it's better suited in TCP IP is four nodes that are completely decentralized, right? So in the end of this video, I want to go into how you can buy car Dano. So there's this great link here called get crypto.info/car Dano and they've got the step by step tutorial on how to buy car Donno. But the first, the first step is you want to download their wallet, which is data list. I hope I said that right data list. Uh, but you've the first seconds for you to download their wallet. Don't worry, they have it for windows, they have it for Mac. So go ahead and download their wallet. You can run the program and once you've synced with the blockchain, you've created your personal wallet,

Speaker 1:          20:46          you created your pass phrase, then you can go, you can pick any theory. I'm exchange to buy some material. Or You could buy some bitcoin and then exchange it from their Coinbase is another example. But this is a great link for that. Get the wallet download it. I think this is, this cryptocurrency has a lot of promise and I hope you found this video useful. Please subscribe for more programming videos, and for now I'm going to study some networking protocols, so thanks for watching.