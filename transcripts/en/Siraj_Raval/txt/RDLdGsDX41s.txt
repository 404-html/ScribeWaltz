Speaker 1:          00:00          Hello world, it's Saroj and hash graph. I've had so many requests for this video. What I'm going to do in this video is explain what Hash graph is, how it works, where it's from, how it differs from a blockchain. And we're going to at the end, go over the demo code that you're seeing behind me right now, which is a visualization of the hash graph. Uh, David structure. Okay, so that's the demo that we're going to be you today. You can see the code for this in the video description, and I'll go over a bit of it at the very end. But the start off, let's quotes none other than the CEO of Hash graph. As he says, Hash graph is an alternative to blockchain, a first generation tech with severe constraints in terms of speed, fairness, costs and security. He's talking about the blockchain right here.

Speaker 1:          00:46          A fundamental bottleneck has been the performance of the blockchain. How many applications are there that can run on a database that can do just five transactions a second? Not many. So that was his critique of the blockchain. And he was saying that Hash graph is better in all of these features in terms of speed and fairness causing and security. But is he correct? Well, let's find out ourselves. I'm going to try to be as, as non biased as I can be in this video because I'm, I, uh, you know what, I just can't even do that. I'm going to be biased. I, I think it's a cool technology for sure. But, uh, I'm skeptical. I'm just going to say I'm skeptical right at the start. But let's just go into this and let's, let's, let's talk about it here. Right? So they've got this cool little picture hash graph versus blockchain.

Speaker 1:          01:32          It is a data structure, right? It is just like the blockchain in that a hash graph is a data structure with an associated distributed consensus algorithm. Right. So what is that consensus algorithm we'd have to ask ourselves when it comes to any kind of blockchain? Is it proof of work? Is it proof of stake? No. In this case it's neither. It's a proprietary, I'm not a proprietary, but a patented algorithm. Okay. And its uses two techniques. The first is called gossip about gossip and the second is called virtual voting. I'll go into both after this. But hatch was developed by a cool dude. His name was limit, his name is Lehman Baird who he has a phd from Carnegie Mellon while educated dude. He's a worked for a couple of cool companies in his lifetime as a research engineer. He's been Linda's blockchain space for about three years now.

Speaker 1:          02:20          Um, and he founded this company called swirled, uh, which patented, uh, the Hash graph algorithm. Oh, so that's strike one for me. You don't want just patent software in this open source space, right. And goes against the whole open source protocol thing. But look, it's cool. He's, he's a kind guy. Here's another thing, the, so Ashcraft is very similar to Ibotta checkout this meme, by the way, Hash craft is very similar to iota in that it offers a solution to scalability, right? So bitcoin and ethereum and all these different blockchains, they have a problem when it comes to scalability and there's a lot of different solutions that people are offering in the communities. The proof of safe for one example or delegated proof of stake, sharding, lightening network, state channels, all these different ways to get around the fact that blockchain's do not scale. And Iota said, let's just do away with uh, all of these different features.

Speaker 1:          03:15          Let's offer a different type of data structure. It's not even a blockchain. And I'll talk, it's called a tangle and I made a video on that. Check it out. Just search Saroj Iota on youtube you'll find it first link, but it's similar to iota in that way in that it doesn't use a blockchain. It uses its own data structure. So this meme is kind of like you guys when you guys have been asking me for this hash grab stuff, it's like, you know, blockchain's over here. It's like Yo, hold up. So it's considered fast. Okay, so it's considered fast because of its use of the gossip about gossip protocol, which spreads messages across the network fast and it works in a private permission based setting. Hold up, what did I just say for a second? Okay. They use these numbers, they say 500,000 transactions, a second, 600,000 transactions a second, you know, meanwhile bitcoin is doing what?

Speaker 1:          04:05          10 10 between 10 and 100 what does the theory I'm doing between 10 and 100 how could they possibly compete with Hash graph? Well guess what Hash [inaudible] is a private permission blockchain. Okay, so I'll go over what that means right here. So here's the difference here between public and private blockchains. Public block chains are, you know, public, anybody can read them. Anybody can become a node in this network. It's public, right? So it's open, read, write access to the database. The database is the blockchain. Private ones are permissioned reader, right? Access to the database. That means that all of the nodes in a private blockchain, our permission beforehand, that means their identity is no right? So you have to trust the nodes. All the nodes are already trusted. What that means is that there is no possibility of a civil attack. A civil attack is when an attacker gains the majority of the nodes in the network, right?

Speaker 1:          04:57          By creating a bunch of different accounts. And once it's attacker has the majority of the network that can approve their own transactions, right? And that causes the double spending problem. And bitcoin solve this by implementing what's called the proof of work algorithm. So all the people in the network, the miners, they have to solve these random mathematical problems. And then in order to have more than 51% of the network of that actor has to have more computing power than the majority of network, which nobody does because it's so vast. But when it comes to this, because it's private, uh, there is no need for proof of work. So of course it's going to scale. Proof of work is so expensive, right? So if you have a private blockchain and all the nodes are already trusted, then you would need proof of work. You wouldn't even need proof of stake.

Speaker 1:          05:44          You would need some different kind of consensus mechanism, which we're going to talk about. But of course it's going to be faster. Uh, and what is a use case for something like this? If you're IBM, if you're some kind of consortium of companies or banks for example, you know, like ripple was used with banks. If you have assessed a set of trusted nodes, these are branches of your brand bank. These are um, you know, maybe some kind of security device for your iot ecosystem that you're trying to build. You know, you've got some thermostats here, you've got some little bit of this here, a little bit this year, you know, different types of types of devices. Then of course you can trust all of those nodes because they belong to you. So something like this would be helpful. It's not to say that hash graph is not a useful protocol.

Speaker 1:          06:27          Of course it is. Uh, but it's, it, you have to be very specific. You can't, my gripe is that people compare it to bitcoin and ethereum don't do that. If Hash craft went public, then it would, it would be civil attacked in an in a day or less, right? Because there is no consensus mechanism that prevents that. And what's working in a private setting, this virtual voting and gossip about gossip protocol, consensus mechanism will work in a public setting. So I just wanted to make that very clear. It's not a bad protocol is actually pretty cool, but don't compare it to bitcoin and don't just say like, oh well bitcoin can't scale and your hash graph sprinkle some hash graph on it. You know, problems are over. It's not like that. So, um, in a non permission setting, like in Bitcoin, the nose participating in the consensus protocol are not known beforehand.

Speaker 1:          07:18          That's in the bitcoin protocol. So I can be someone who, nobody knows. I can be anonymous, I can be synonymous and I can just join and I can be a part of the bitcoin network, not. So when it comes to hash graph, Hash Trough is considered an asynchronous Byzantine fault tolerant, uh, protocol. And it is not deterministic. That is a mouthful to take in. But bitcoin solve this problem where you have two generals, right? There's a val valley in the middle and they're trying to decide when to attack. But they can't trust the other side. Like, well, I don't know if he's going to attack first. I don't know if the, he's going to attack first. They have to be able to attack in a trustless fashion. So that's why it's called the Byzantine General's problem. How do two nodes come to consensus, right? Even if one of the nose is adversarial, right?

Speaker 1:          08:06          So how do you create a network, a graph, a collection of nodes where you can operate this network? It will run, they can come to consensus on some state without having to trust all of them like one or two or three or you know, x number can be adversarial or bad notes. And so bitcoin solve that with the proof of work algorithm. Um, and so hash ref solves that with the, um, this gossip about gossip protocol slash a virtual voting algorithm is, uh, not deterministic. What do, what do I mean by that? Well, the deterministic algorithms are ones where you can predict how many steps that algorithm will take, how long it will take. You can determine them beforehand. But this is a probabilistic algorithm where you can't tell how many hops it's going to take or how many nodes that will connect to, to come to consensus or how long that will take.

Speaker 1:          08:57          It is probabilistic in that way. Like life is to, to get kind of Meta. Life is probabilistic, not deterministic, unless you believe in fate, which I don't. You've got to make your own destiny. Words of advice thrown into hash graph explanations. So how does this thing compared to blockchain? Really? Like why does it really compare to blockchain? So we know that the blockchain is a chain of blocks, right? Chains of blocks. These are data structures, objects. We could code one up in 80 lines of python and I have see my video, um, power of the blockchain. Suraj just youtube that. And so we have this blockchain, right? So each block has a hash of its transactions and it has a pointer to the previous block and it's just a chain of blocks like that, right? So the Hash scrap is different in that it's not a chain of blocks and it's, it, it stores what are called events.

Speaker 1:          09:44          I'm going to go into this in detail in five minutes. Let me just explain a few more things. Okay. Just, just a few more things. So, um, it's hash craft ward to be in a public setting, it would face the same scalability problems as bitcoin and ethereum and ethereum is, it uses pos for the Casper Protocol. Neo implements a decentralized Byzantine fault tolerance. Eos has delegated proof of stake. These are all different solutions for scaling, right? And so we also have to define what do we mean when we say scalability or are we talking about scaling the number of users or are we talking about scaling the number of transactions or how about the size of the network? There's a lot of different dimensions to scalability and when you increase one you could decrease the other. So there's not a silver bullet that is a catch all solution for scalability as of now.

Speaker 1:          10:34          And if I were to be working on blockchain research in blockchain consensus research specifically, I would focus nonstop on these scalability problem. How do we scale these things in a public way? Because if we do that, then we get to the world where, uh, amazing decentralized applications or possible, see crypto Kitty's for example, crypto kitties overloaded the ethereum blockchain at one point, almost a third of transactions, restoring these meaningless, not meaningless, but like meaningless. A cat, a tradables, right? So there's that. So anyway, uh, that's hash graph. Uh, so, so, right, so this is what the Hash graph looks like compared to the blockchain. It looks a lot more complex. There are a lot more connections. It's not as simple as just blocks connecting to each other. So let's just go into how this works, but actually one more really important bit to go over before we get into that.

Speaker 1:          11:28          Um, so characteristics between hash drop and a blockchain. Check out this awesome list. It goes over what we've already talked about. One is a chain of blocks. The other is a directed a cyclic graph that looks like a tree, a Dag, right? So iota is also a dag. Modes of operation. Blockchains are open source, permissionless public or private. Hash graph is, uh, well it says public or private. It can be. But right now this is, this is private. It's private. Uh, the, it is patented and it is governed by a com, a company. And this, it's got that legal patent on top, which I don't like. But anyway, anyway, so consensus models, they use proof of work versus proof of stake versus this cross of protocol. Probabilistic versus immediate trustless. They're both trustless. One is slow, one is fast, one is inefficient, one is cheap.

Speaker 1:          12:21          Yeah. Yada, Yada, Yada. Decentralization, questionable with the proof of work. Because you know, these miners are controlling all these gigabytes of hash rates and stuff versus, yes, this is decentralized. So how now for the key stuff, thank you for waiting for this. Now for the key stuff, how does it come to consensus? So here we go. Okay, so stay with me. All right, so here we go. Let's, let's get our brains. Let's get her brain's ready for this. So we've got four different nodes in this hash graph. We have Alice, Bob, Carol, and Dave, right? So A, B, c, and d. There are four nodes in our little hash draft right now. Okay. Here's how it works. Each member starts by creating an event, which is a small data structure in memory. Okay, this is an empty day structure. We've all got events, memory, good, four of us.

Speaker 1:          13:13          Let's go. Okay, so now what's going to happen is the community's going to run what's called a gossip protocol. This has been around in computer science for a while, but basically if you have a network of nodes, how do they talk to each other? How do they gossip? Oh, this person did this or this node did this. Oh, and then the other note is like, well, this, no did this. And you know, you know, it's like if you have a circle of people and you have a secret and you tell it to the next person and they tell it and they'd tell it. That's gossip in this case, right? It's just means messages being passed between nodes in a network, right? So here's what happens first. All of this is random. Remember, it's probabilistic, not deterministic. Some node will be chosen at random. It's going to be Bob in this.

Speaker 1:          13:54          In this case, Bob will choose to call Dave. Okay. So what that means is Bob is going to send a Dave in a message, gossip, all of the events that he knew that Dave did not know yet. So this could be a single transaction that Bob has made. Okay. So let's just say a single transaction. He's sending it to Dave. Dave then records the fact that this same happened by creating a new event. And this is the new circle. Okay. Which has lines going straight down to his last event. So there, so watch my mouse here. So there, so Bob now has a connection between himself and Dave and uh, from that down today, right? So there are two connections here. There's one, two, and then one, and then Bob back to himself. So both Dave and Bob now have two connections on both of their, in, in both of their histories, right?

Speaker 1:          14:43          So now this new event that Bob has just sent it today is called an event. So it's kind of like a block and that it's so it stores some transactions, it's going to be one transaction, it could be several transactions. And they all point back to it's two parents, right? So in a tree, you each, each leaf has to parent nodes. In this case case for this event that Bob passed to Dave, that those two parents will be Bob and Dave respectively. Okay. So that was that. Now, okay, so we had the first events happen, then Dave is going to send Bob all his events. Remember, this is just random that he could have sent it to Carol, whatever, Alice. But he then sends Bob all the events, including the new one he just created. So maybe Bob sent me, made a transaction, he gives it to Dave.

Speaker 1:          15:29          Dave then made another transaction, he gives it to Bob and so et cetera rights. And now they're passing all of these transactions, this history of transactions to each other in the form of events. Bob then randomly chooses Alice and sends over all four events he knows about to Alex, right? So let's say there are four transactions. It can be more than that, but now Alice has that ledger. Okay. So this just keeps continuing forever and ever and ever rent. Not Forever and ever. But yes, forever. As long as the network is operational to all the nodes, just randomly. And it creates this directed a cyclic graph or hash graph. Okay. And because all of these, uh, events contain hatches, it's called day hash graph, and each event contains it hatches and the event's below it, and it's digitally signed by it's creators similar to how blocks point back to previous blocks in the network.

Speaker 1:          16:22          And it's useful to define around created for each event. So we talked, so this, this part was like us talking about how the gossip protocol works, right? So how are these nodes gossiping? Now comes the virtual voting, right? So now what happens is all of these are, all of these transactions are split up into events. So in this case, I'll say one, two, three, four different events. And once we have these events, it's just a way of organizing all of these transactions. We're going to create what are called witnesses and witnesses. We'll vote on the validity of transactions. So, uh, the first, the first event for a single node will be called, it's witnessed. So for Alis Dlba one and in the first event, a two in the second 83 and then a, there's not an a four, right? So a no doesn't necessarily have to have a witness in a single round.

Speaker 1:          17:11          And then once we have all those witnesses, we have to determine if it is a famous witness. And in this case of famous witness is one that is used multiple times, right? So how many times, and once we have famous with a famous witness that can have an election in which each of those witnesses will vote on whether or not a certain witness is famous, right? So this is their voting mechanism between each of them. Is this witness famous? Is it not? How often has it been used? And what that means is how often is this transaction been passed, you know, between different nodes. And if it's valid, it's been passed quite a lot, right? It's been voted on quite a lot. So the longer, um, a note, the longer some transaction is, is maintained in this hash craft, the more trusted it can be because it's past this, both his virtual voting.

Speaker 1:          18:03          And this gossip protocol. Okay. So that's how it's used in a, at a very high level. There's, there are more details here, but I'll link to those in the video description. So who's using this thing? Well, I found one cool partnership with vms software. So vms software has a bunch of different clients for mission critical systems, stock exchanges, international banks, global retail chains, and Hash crap has partnered with them to allow them to give their customers the ability to securely implement and operate the next generation in distributed applications. So that is a cool application, right? This is a private company. They have their own private nodes and they want a way for their notes to be able to talk to each other in the fastest way possible and maintain a ledger. Oh, perfect. Use Case for a private blockchain now had there a hash graph is in the works, right?

Speaker 1:          18:57          So I am very skeptical because it's not done yet, right? So I'm not going to say, oh, this is amazing. Magical. But Haddara is the public version of the Hash graph, a protocol, right? So it is them saying, let's make a public Bach blockchain using our technology that I just talked that I just explained how it works to you. Right. But then wait a second, the consensus mechanism we just talked about wouldn't work in a public case because all of the nodes can't be trusted, right? These are random anonymous sometimes pseudonymous nodes. Well they, they, they are going to implement what's called, it's, it's essentially called delegated proof of stake. They're not calling it that, but it is delegated proof of stake in that they have a special counsel. This is a council of different organizations, which we'll vote on the validity of transactions. So it's not completely decentralized, it's not completely centralized.

Speaker 1:          19:49          It's somewhere in the middle. So I actually think delegated proof of stake is a pretty good idea and I'd like to see more, uh, blockchains use it. But anyway, uh, there they have some very ambitious aims for this Hadera platform where they want to offer smart contracts, um, micro storage, so decentralized storage and their own cryptocurrency for allowing for microtransactions. So that's in the works. So a lot of the problems I talk about, they're working on, we'll see if it works out. Um, but, um, I do think that it's cool that their founders are very nice in general nice people. The founders of iota are not, they tend to disc people on Twitter and if you and dis their competitors, and generally in this day and age, if you are putting your competitors down, you will not win because it's a very, it's a very tight knit ecosystem and you want to bring people up and not put people down.

Speaker 1:          20:39          And so I think that, uh, the founding team for Hash graph, they are good people and they'd never put people down. So that is one thing that I like and I, I do as a good thing. But anyway, let's, let's look at this demo, right? So I found this really cool python demo of it, right? So they haven't released their code will, but it is on get hub. It's just that it has a patented license, so you have to talk to them if you want to use it in some way. So that's the only caveat to, to, to, to think about. But let's go over some of this code here. So it's called twirled and it's in python and we can see what a note looks like here. Uh, but all the instructions are in the get hub remi, uh, and in the video description, but right here we can see what a node looks like, what's got head, it's got around consensus votes, witnesses.

Speaker 1:          21:27          These are all features that I talked about, right? So it has, um, it has attributes for all of these things. You can create a new event. Is this event valid? Let me add an event. And look at this just comes out to under 345 lines of code. I think this is the best code to look at if you want to get really technical understanding of this code base. Uh, but I think the, the most important bit here is this, um, let me see, is this algorithm I hear find order. What is the order of transactions? Right? So that's, that's what all of these, uh, consensus mechanism, these blockchains dogs, these ledgers, they all come down to what is the order of transactions? Can we agree on the order of transactions? And, uh, if, if they can come to an order, great, then they know that the network is going to maintain itself, that they can secure it at his trustless. Indeed. So that's, that's it for the code. I'm definitely check it out. And I hope you found this video useful. Please subscribe for more programming videos. And for now I'm going to do some research. So thanks for watching.