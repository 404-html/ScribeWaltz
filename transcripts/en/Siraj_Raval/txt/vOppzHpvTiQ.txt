Speaker 1:          00:00          Hello world. It's Saroj and welcome to intro to deep learning and this first episode will predict an animal's body weight given only the weight of its brain. This course will be four months long and it'll all be released on my channel. I'll have a live session every Wednesday at 10:00 AM pst. That explains every week's topic in depth and I'm collaborating with you Udacity to offer a nanodegree to those that successfully complete this course. This course is for anyone who wants to learn how to harness the incredible power of neural networks and become a deep learning engineer. You don't have to be an experienced developer or a mathematician. The only prerequisite for this course is knowing quantum mechanics. Just kidding. Only basic python syntax. We'll learn what we need to along the way by building an AI that can do everything from predicting the price of Tesla stock, the painting surrealists masterpieces.

Speaker 1:          00:47          Traditionally programming has been about defining every single step for program to reach an outcome, but machine learning flips that approach. With machine learning, we defined the outcome and the program learns the steps to get there. So if I want it to build an APP that can recognize California license plates instead of writing out coach, you recognize the hundreds of different features of a license plate, like the shape of certain letters and the colors. We just say, here are some examples of a California license plate. Learn the steps you need so that you can recognize it. Or if I wanted to make a Bot that can beat Super Mario instead of writing code for every possible scenario, like jump. If you see a coupon and it's running towards you, we'd say the goal is to get to the end point without dying. Learn the steps to get there and sometimes we don't even have an idea of what steps could possibly be.

Speaker 1:          01:33          Like if we're a bank and we suspect there's some kind of fraudulent activity happening, but we're not sure exactly how to detect that or even know what to look for, we can say, here's a log of all user activity. Find the users that are unlike the rest and it will learn the steps to detect the anomalies by itself. Machine learning is already everywhere on the Internet. Every major service uses it in some way. In fact, youtube using it right now to decide which other videos you might like. As you watch this and it's use as will only grow over time. It will be embedded in all of our internet connected devices. Everything from fridges, two cars, two personal assistants, we learning and adapting to our needs. And you know that rule that says you need 10,000 hours to master any skill? Well, we'll just be able to offload that training time to our machines and it'll give us superpowers instantly. Anyone will be able to compose a symphony. Alexa, I feel melancholy. Make me a piano piece for this and how to be to it. Anyone will be able to direct the movie. Okay Google, recreate star wars, but put me in it. I dockerize most of my code now.

Speaker 1:          02:37          Damn right. With machine learning, if you can dream it, it can exist and the field is currently advancing very fast as researchers build on each other's work. Ah, my neural nets sucks. Go deeper. Wow. I just achieved state of the art. There are a lot of machine learning models out there and one of them is called a neural network. When we use a neural network that's not just one or two but layers deep to make a prediction, we call that deep learning. It's a subset of machine learning that has outperformed almost every other type of model almost every time on a huge range of tasks. We'll dive into deep learning more next episode, but this video will just focus on machine learning in general. We usually class learning into three different styles. The first style is called supervised learning. It's where we give a model, a labeled Dataset like car pictures, so it gets feedback on what's correct and what's not.

Speaker 1:          03:26          It just had to learn the mapping between the labels and that data and then it can fall some given task like classifying the type of car and an image. It's all relatively straightforward and we've gotten incredible results from it. The second learning style is called unsupervised learning. This is when we give a model a dataset without labels. It gets no feedback on what's correct or not. It has to learn by itself what the structure of the data is to solve some given task. This is harder to do, but more convenient. Since not everyone has a perfectly labeled dataset sitting around. Most data is unlabeled, it's messy and complex, and the third type is reinforcement learning. This is where it model isn't given feedback right off the bat. It only gets it if it achieves its goal. So if we're trying to create a reinforcement learning Bot that can learn to beat humans at chess, it would only receive feedback if it won the game.

Speaker 1:          04:12          Whereas in the supervisor approach, we get feedback every move and in the unsupervised approach, we'd never get feedback even if it won, unlike the other two learning styles. Reinforcement learning is linked to the idea of interacting with an environment through trial and error. So I've got a data set of measurements of different animals and we want to predict an animal's body weight given its brain weight. Since our data is labeled. This will be a supervisor approach and the type of machine learning task will perform is called regression will write out a 10 line python script to do this and I'll explain things as we go. We'll start off by importing our three dependencies. The first one is pandas which will let us read our Dataset. The second one is psychic learn, which is the machine learning library we're using for this example and the third is map taught live which will let us visualize our model and data.

Speaker 1:          04:57          Now that we've imported our dependencies, we can read our dataset using pandas. We'll use the read FWF function to read our animal data, set a table, a fixed with formatted lines into a pen as data frame object which is a two d data structure of rows and columns are dataset contains the average brain and body weight for a number of animal species. Once our data is in our data frame variables, we can easily parse and read both measurements into two separate variables. We'll store our brain measurements and the x value is variable and the body measurements in the y value is variable. So if we were to plot this data right now on a standard two d graph, it would look like this. And our goal is that given a new animals bodyweight, we'll be able to predict what it's brain sizes. So how are we going to do that?

Speaker 2:          05:38          Yeah. Uh Huh. You know what it is independent, independent, independent and depend. What data's got the values for the brain and the body weight. And I'm wondering what to use to find that they relate. Linear regrets helps find the relationship. We're gunna measure it and find the only line of best fit the equation. Y equals Mx. Plus B is all we need is the y intercept and m measures. House deed plotted on the graph. Let's predict the body with the brain. Low Air ops, champagne. Well

Speaker 1:          06:08          you suck. It learns linear model object to initialize our linear regression and store it in the body regression variable. Then we can fit our model on our x, y value pairs. Now that we have the line of best fit, we can plot our x, y value pairs on a map, plot lives scatterplot, Ben, plot our regression line by saying for every x value we have predict the associated why value and draw a line that intersects all those points, we can then display it using the show function. Let's go ahead and compile this code in terminal. Our scatter plot will appear with all our data points mapped out. The x axis represents brain weights and the y axis represents body weights. Our regression line seems to fit most of the data pretty well and there seems to be a very strong correlation here between brainwave and bodyweight and as we move along the line given any brainwave, we can also predict the associated bodyweight.

Speaker 1:          06:52          So to break it down, while traditional programming is about defining the steps to reach an outcome, machine learning is about defining the outcome and our program will learn the steps to get there. There are three different learning styles, supervised, unsupervised and reinforcement learning and linear regression models. The relationship between an independent and dependent variable to create the line of best fit, which we can then use to make predictions. The winter of last week's coding challenge is Mick Fan Holt. He modified the game world to be more complex and his cue learning Bob was much more efficient and reaching the goal. Then my demo bought wizard of the week and the runner up is Michelle Batu. He generated maps using cellular automaton. The challenge for this video is to use psychic learn to create a regression line for a different dataset that all provide and print out the error between your prediction and the actual value. Details are in the read me posts or get help link in the comments and I'll announce the winner in one week. Please hit that subscribe button and for now I've got to feel the learn, so thanks for watching.