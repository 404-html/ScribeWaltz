Speaker 1:          00:00          Hello world it Saroj and math equations. How would the name of Pythagoras, are you supposed to read these things? I'm going to cover some crucial tips that you can use to be able to read and understand any math equation. A lot of people think math is difficult and their rights. That is inherently difficult. It's not as easy to relate it to your life like another topic like economics or sociology or Doug. You dancing think a bit like a foreign language. If you're a native English speaker and you come across a Japanese children's book for the first time, no matter how basic it is, all the squiggles will look very strange and you won't understand a single thing, but if you want to learn to read Japanese, you need to have committed to memory a few hundred symbols and several hundred words from those. Your mind will build a more general understanding.

Speaker 1:          00:55          When it comes to math. You also need to learn new symbols like Greek letters. There are quite a lot of them. It's important to recognize the names of them. When you see them else, when you see any of them your mind, we'll just label them squiggly thing much too ambiguous. You also need to learn new words like function and derivative and new grammar, a way to write equations in a logical and consistent way. So before you can understand math formulas, you need to learn what each of the symbols are and what they mean. Focus on the math terminology and learn how equations are structured. Sigma notation for example, represents a longer some, but this is an obvious. When you look at it you have to add another dimension of thought to what you see. It's an abstract concept, but once you can understand this way of thinking, you can apply it to other equations as well.

Speaker 1:          01:51          A little bit of effort on learning the basics goes a long way when it comes to math. A great course that will help you a lot with this is called introduction to mathematical thinking by Stanford University. You can find it on Coursera. It's totally free and I highly recommend it. When I say math is like a separate language, I really mean it. Symbols put together are able to conjure up concepts in the mind of a well versed reader. In fact, a lot of times it's best to understand math at a conceptual level than trying to translate it to English. A lot can be lost if you do that. One great analogy is the last supper. If you examine it very closely in three different parts, you'll be able to describe each part, but the whole painting has an entirely different meaning. You'll see the detail texture and color, but miss the portrait completely.

Speaker 1:          02:47          A math equation is similar in that it tells a story. Try to see what the story is before you delve into the details. You can go in for a closer look. Once you have built a framework for understanding, programmers can be particularly bad at math. We're trained to think linearly. It's a process, whereas a math expression is an entire concept and can not necessarily be written in a single line of code. Math is more like natural language than a programming language. Programming languages have a single, well-defined fixed syntax or particular grammatical constructs always have the same meanings, but math is a collection of rules and conventions sometimes in violates others less so with lots of idioms, some of which are mutually incompatible and lots of variation between dialects, meaning conventions within various fields, so there's not really a formal specification. You just have to keep reading and writing the language and allow yourself to absorb it through practice.

Speaker 1:          03:52          Learning math isn't something you just do and then finish it's discipline. It's a way of thinking and expression for the universe itself. No matter what you think of it, it doesn't change. It just is and you never completely learn it. Just a small subset of what is essentially infinity. The deeper you dive into it, the more you realize just how little you know. Computer Science is full of math, discrete math, probability, theory, number theory. These are used in general programming when it comes to the math of computer science, specifically MIT opencourseware has a great course on this. Videos, assignments and solutions all in one, check it out and when we start getting to the really cool parts of computer science like machine learning, cryptography, robotics, quantum computing and animation, math starts being used even more heavily. So if you're interested in say, machine learning and want to get up to speed on the math of it, the first step is to learn the formulas you already understand.

Speaker 1:          04:59          All math requires earlier math. It just build on top of itself. That is all the new things you are learning now depend on what you learned last week, last semester, last year and all the way back to the numbers you learned as a little kid. Maybe you understand how a two d graph works where it's possible to plot the relationship between two variables and draw the line of best fit. The equation of any straight line is called a linear equation and can be written as y equals mx plus B, where m is the slope of the line and B is the y intercept. This is useful for linear regression problems where we tried to predict the next data point in the sequence. Once you've learned some of the formulas for some of the concepts you already know, it's useful to find a cheat sheet of the charts that you'll need to know.

Speaker 1:          05:49          I've got a link to a really good one for you in the video description. Repetition is key to learning. If the only time you see your math formulas is when you open a textbook, there is a good chance that they're going to be unfamiliar when you need to start from scratch each time. A lot of the times you'll see the same concept over and over and over again. When it comes to machine learning, sometimes it's written in different ways. It often happens that you think you know and understand a formula and then you'll see it written in another way and panic. One major example of that would be gradient descent. The most popular optimization strategy for deep neural networks. Same concept, but it's written in different ways a lot of the time, so it's good to come to an intuition around a few key mathematical concepts that apply to your specific field like ml.

Speaker 1:          06:41          I recommend my own course right here on youtube called the math of intelligence to help you with this. You'll find it in the form of a playlist. Okay, you're ready. Let's go over to popular equations from machine learning and breakdown how to read them to develop some more intuition. The first is the formula for the Euclidean distance. First of all, what's the goal of this equation? Let's figure that out. In the context of this paper, it looks like the authors are trying to produce some sort of measurement that shows how different to learn features are in an n dimensional feature space. That way they can tell if these concepts are somewhat related or not related at all. It looks like there aren't any constants being used here. Just variables and each of these variables represents a coordinate 0.2 per feature. It's subtracting the coordinates of one feature from another.

Speaker 1:          07:37          Then squaring the result, summing them up, and then taking the square root of the whole thing. The result is a single scalar value that represents the distance. We can use this for sentiment analysis, generating similar words, lots of different applications. Cool. Right. All right now onto another popular equation called logistic regression. In general, in machine learning, we're trying to come up with a function that can predict for future inputs based on the experience it has gained through the pass inputs and their outputs via a training set. From this paper, we can glean that the authors are attempting to perform a multi-class classification with probabilities for each of the classes. Logistic Regression is coming up with a probability function that can give us the chance for an input to belong to any one of the various classes. Look at our training data. There are only two classes, a binary classification problem.

Speaker 1:          08:34          We need to come up with a probability function that takes in an input and returns the probability of Class A or B. This probability function is the sigmoid function. One great way to understand it is to just graph it. A picture is worth a thousand words, right? Since the probability of any event to happen is between zero and one, this function seems fit to be used as a probability function for logistic regression. We know of the constant e, but what's data? Well, the error function in logistic regression looks kind of like this. Don't be afraid where m is the number of elements in the training set. Why is either one or zero and h of x is nothing but the sigmoid function. Since sigmoid is a function of theta, then Jay is a function of data, so our error is a function of theta. We minimize Jay over data and find out the values of Feta for which our error is minimized.

Speaker 1:          09:28          This is done using gradient descent. Another very useful formula. Once we have feta and our probability function s ready, we can feed it any input data and it will give us a probability value. This equation can be applied to so many different industry problems, spam classification, probability of someone voting, classifying words, speech recognition, and a lot of times it's written a little differently, but the concept is always the same. Remember math is its own language. Memorize some of the symbols. Keep a formula sheet handy and build an intuition by repetitively learning and applying new concepts across a wide range of applications. Soon you'll be able to see a new problem. Know exactly how to categorize it into its proper type like optimization or boolean logic, and understand why the equation you read works for it. So get on that math grind wizard. I'm rooting for, you know, coding challenge this week. Subscribe if you want to learn now, let's spread this AI power for now. I've got to learn more. So thanks for watching.