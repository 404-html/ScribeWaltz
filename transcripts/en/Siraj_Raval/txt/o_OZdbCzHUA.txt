Speaker 1:          00:01          Check out the too many papers, youtube channel for some cool research videos. Hello world, it's Saroj. In this episode we're going to learn how to write a python script that uses Twitter to understand how people are feeling about a topic that we choose using the natural language library, text Blob, and just 14 lines of code. People really confused me like how does Donald Trump have so many supporters in 2016 and why our beers, manly and fruity drinks girly. Oh, and why do people think anything is beautiful like what even is beauty? The soundtrack is beauty. Human preferences are practically unpredictable and we've invented the sciences of psychology and sociology to help us study these things. Both are the scientific study of people and all the emotion and relationships and behaviors that they display. Traditionally, psychologists would formulate a hypothesis then to test it. They would find a subset of people that fit their category, bring them into the lab, then ask them to do some tasks while recording the results, but with data freely available. We data scientists can do the same thing with the best psychology tool out there. Twitter. Twitter is a treasure trove of sentiment. People around the world output thousands of reactions and opinions on every topic under the sun every second of every day. It's like one big psychological database that's constantly being updated and we can use it to analyze millions of text snippets in seconds with the power of machine learning.

Speaker 1:          01:24          So how does sentiment analysis work? Well, when we received some input text, like a tweet, we'll first want to split it up into several words or sentences. This process is called tokenization because we're creating small tokens from big text. We can just count the number of times each word shows up. Once a text is tokenized, this is called the bag of words model. Then we could look up the sentiment value for each word from a sentiment lexicon that has it all prerecorded to classify the total settlement value of our tweet. Okay, so our process will be to registered to access Twitter's Api, install our dependencies, then write our sentiment analyzer script. Let's start by signing up to use Twitter's API. An API or application programming interface is a gateway that lets you access some servers, internal functionality in our case Twitter, so we'll be able to read and write tweets right from our app using Twitter's Api.

Speaker 1:          02:13          Let's sign up for it in the browser. First of all, want to make sure that we have our own Twitter account set up with a verified phone number attached to it. Once we have that, we can create our first Twitter app. We'll select the create new APP icon and typing a name and description of our app as well as a website. The website field is kind of like a liberal arts degree. It doesn't really matter. Then we can click the create button at the bottom and our APP is created. We can click on our APP and go to the keys and access tokens tab. We're going to need to use these keys in our script to let us authenticate or verify our identity with Twitter. Okay. Let's move on to installing. Our dependencies are first dependency is called [inaudible], which is our library for accessing the Twitter API.

Speaker 1:          02:52          Our other dependency is called text blob, which will help us perform the actual sentiment analysis. Before we get to the code, let's do a text block demo right from the python interpreter in terminal, we can access the interpreter by typing in python. That's it. Now we can write python directly into terminal. We'll start off by importing text blob. Now let's create our first tech squad. This is just a piece of text we'll call our variable blog and assign it this value or rapid string. Using the textbook method in our string will be Saroj is angry. He never gets good matches on Tinder. Now that we have our blog variable, if we want to see parts of speech, we can just access the tags attribute. If we want to tokenize this text, we can just type in the words attribute and we can see the sentiment of this blog easily by accessing the sentiment.

Speaker 1:          03:34          That polarity attribute. That's on a scale between negative one and one. All right. First things first, we want to create four variables that authenticating with Twitter. We'll require. We'll find these in the dashboard and we can copy and paste each of them as strings. Let's authenticate with Twitter, which basically means login via code. To do that, we'll create a variable called off for authentication and use the off Hendler. Method of tweet by this method takes two arguments, that consumer key and the consumer secret. This method was written inside of the tweet Pie Library with a bunch of code that is hidden to us. We don't need to know the details for our use case. We can just name the method and all of its functionality is in our hands. The arguments are what the method uses to perform its internal calculation, whatever it is, we're halfway through authentication.

Speaker 1:          04:18          The other half is to call the set access token method on the author variable, which takes two arguments, the access token and the access token secret. That's it. We've created our authentication variable. Now we want to create our main variable from which we'll do all of our Twitter magic. We'll call it API and assign it a value from the tweet by API method, which takes a single authentication argument, which will fill in right here. Now that we have our API variable, we can perform a whole bunch of different possible methods, but we're, we're going to do is search for tweets. For our use case, we want to collect tweets that contain a certain keywords. So to do that, let's create a public tweets variable that is going to store a list of tweets to fill it. We'll call the search method of the API and variable. The search method takes a single argument. Let's make it Trump. This method is going to retrieve a bunch of tweets that contain the word Trump. From here, we can print them all out to terminal. To do that, we'll create a for loop for tweet in public tweets, colon, a four loop increments through every value in a list. So the question now is what do we want to do with each tweet?

Speaker 1:          05:21          Okay, let's print them out. Each tweet has a text attribute, which is the string version of it, so we'll print, tweak that text. It's time to perform our sentiment analysis or create an analysis variable that we'll store our analysis and called text glob with our tweet string as the only argument. Then we can print out the sentiment attribute of the analysis variable. We can see each tweet related to Trump as well as it's sentiment analysis, polarity measures, how positive or negative some text is and subjectivity measures how much of an opinion it is versus how factual. So to break it down, sentiment analysis is the process of extracting and understanding human feelings from data on Api lets you access a servers, internal functionality like Twitter, right from your app and the text Blob Python Library that you performed. Sentiment analysis and just a few lines of code.

Speaker 1:          06:06          There's a lot more we can do with our sentiment analyzer and the challenge for this week's video is to extend this code to make it create a labeled CSV file with the clean tweets of whatever topic selected details are in the code. Read me poster, get help, link in the comments and I'll announce the winner in next week's video. The winner for the gender classification challenge from the last episode is Naresh. Now Basha, I especially liked how he created a dictionary at the end to store the result from each of the three classifiers. Then use the Arg Max function to print out the one with the best result rather than doing a bunch of, if then statements, bad ass of the week. Also, the runner up is victor must say, very clean code. For more info, check out the links in the description and please subscribe for more programming videos. For now, I've got a surcharge. The president is on the line. You're our only hope. I've got to save the world, so thanks for watching.