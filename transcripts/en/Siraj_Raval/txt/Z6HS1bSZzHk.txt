Speaker 1:          00:00          Hello world, it's a Raj. And today I want to talk about blockchain for supply chain management. In this video I'll talk about the market for supply chain, how blockchain can affect it. Uh, I'll demo this APP that I've compiled and I've run locally called asset tracker that uses solidity, uh, to create an asset on the blockchain. This is on the test rink be etherium network and I'll talk about how that works. I'll go over the only legit blockchain supply company that I could find called Sync Fab, how they work, what they're doing with their version of an ERC 20 token. And then I'll cut it out. I'll code out in solidity and asset tracker that runs on the theory and blockchain. Okay, so that's what we're going to do in this video. We're going to create a decentralized supply chain app for asset tracking. Okay. So the supply chain industry is huge and it's only going to grow over time.

Speaker 1:          00:56          So the Americas, Asia, Africa, right? These are all markets that are big and the developing countries in particular, um, particularly on the coast of Africa are going to grow exponentially over time. And parts of Asia as well. So the supply chain industry is not going anywhere. It's been around for a while and it will be, it's here right now and it will be here in the future. Uh, and so this is a very big industry. And for those of you who don't know what the supply chain is, whenever you are the, the path that any product you have in your home, your shirt, your desk, your computer, you know, whatever, it follows a path of intermediaries to get from the factory where it was created to you. And that chain, uh, includes distributors. It includes, um, uh, procurement officers, people who are quality inspection officers.

Speaker 1:          01:50          It goes through different channels, right? It's not just like direct from manufacturer to the end user. The consumer rights, there's like four or five, six, sometimes, you know, a dozen intermediaries in between there. And that process, a lot of data can get lost in that process, right? Some quality assurance person could say, well, I thought that it was going to come yesterday, but it didn't. And someone delayed a shipment from this city, this city. And so that kind of, uh, that kind of error just trickles throughout the entire supply chain and can ruin everything, right? So, uh, there, there are big problems with the supply chain. But what I found very interesting is, you know, in a, in a survey that a bunch of professionals, a sea level professionals were asked, what is the aspect of digitization? Hilarious word that you believe will drive the most value in the future.

Speaker 1:          02:37          Most of them said supply chain visibility, right? So usually you don't hear that much about the supply chain. When you're thinking about applications of blockchain, you're, you're thinking about banking, you're thinking about, you know, perhaps real estate or betting or gambling. But I believe that the supply chain is, as of now, the biggest industry for blockchain, like this is where the, the, the most immediate real world use case comes from, right? And the reason is, is because there's so many problems with the supply chain as of now that blockchain could help fix a, so let's think about all the ways that the supply chain is wrong, right? The supply chain is a sub optimal. So one would be ocean frights for example. They account for 90% of goods traded globally as a huge number. 90% of goods traded globally. Enter the ocean fright, enter an ocean freight at some point.

Speaker 1:          03:36          Now the, the problem with ocean freights is shipping information usually traveled through numerous companies and contractors. And this can cause a delay and remember a delight anywhere in the supply chain, not just costs time. It costs real money, right? Because these intermediaries are all right now trying to predict what day something will come to them, the product, and when they can then inspect it or whatever, their job is a and then they can send it on throughout the rest of the chain. So there's a lot of problems here when it comes to planning and forecasting, asset management, visibility, procurement, manufacturing, financials, right? There's, there's a lot to keep track of, right? For APP, at least for one company. But the problem is when it comes to supply chain, there's not just one company involved, right? Ideally, you know, if I wanted a desk, I would just go directly to the factory or I would ping the factory and say I want a desk.

Speaker 1:          04:28          And that desk could just like be drone shipped over to me and that's it. But that's unfortunately not the way the world works. There's a lot of intermediaries there, right? How much are you supposed to pay a driver? When are they supposed to know when a certain product has been shipped? How can all of them trust each other to have done their job? Right? How can the driver trust that the package was delivered at this point? How can the consumer, the end consumer, no trust that the product that they're using is an actual quality product, right? Because if all this data is stored in a database on a website, any of the intermediaries could easily modify that data. Right. To, to fit their best interest. Right? Because remember, there's not one company in the supply chain, there are multiple companies. So the problem is that they all have competing interests.

Speaker 1:          05:16          So it, you have to trust all of them. And this is a problem, right? Because any of them can just modify something and say, Oh, you know what the date for this product was meant for this day. And then the other person will say, no, we had a deal. And they'll say, oh, well look at the database. And they changed it. And you just have to go with that, right? Because you can't, you, you just have to trust them as of now. Uh, and this is a problem. Right? And that's just, that's just based on trust alone, right? So trust is a big problem when it comes to supply chain. All of these intermediaries with competing interests, these businesses have to trust each other to create this cohesive chain of operations to get a product from the factory to the consumer. So there has to be a better way.

Speaker 1:          06:01          And that's just one problem, right? There's, there are other problems. It's difficult for small businesses to get into the game, right? Like if you're a small business, usually manufacturers only want to deal with big companies. Why? Again, it comes down to trust. There. There has to be some reputation because these big companies have been ripped off so many times. They want to trust a larger company with a huge history of clientele because they have to, or else they would lose money. But as a small business, you don't have that reputation. Number two is that there's an opaque procurement process. 31% of buyers site finding the right manufacturing suppliers is a standard issue in the production process. Okay? That's another one. Outdated technology, right? We're talking about decades old system. Some of these supply chain services are running on Ms dos. Yes. Really little to no Ip protection.

Speaker 1:          06:53          That's a, that's a whole nother can of worms, right? Ip, intellectual property. Who owns what, when was something created? Who's putting a timestamp and a creation stamp on what these are? These are stamps that should be immutable and right now they are totally mutable, mutable, or modifiable. So the solution to this is the blockchain. Okay? And I'm surprised that there aren't more companies that are using the blockchain to make the supply chain process more efficient, right? This is a huge opportunity to, to make, uh, a business, right? This is, this is an opportunity to create a sustainable business using blockchain technology, supply chain. There it is. Now there's, because there are so many different sub applications within the supply chain industry, right? Digital ownership. Who owns what proof of origin did this crop come at that was this crop organic? What that did? Was it handled properly?

Speaker 1:          07:49          Um, who handled it wa how many intermediaries did it go through? Trusted maintenance tracking. Did this product go through these specific intermediaries that we wanted it to? Did it go through this quality assurance process we wanted it to, did they water it? Did they peel it of any thing that it didn't need? You know, if it's a vegetable, there's a lot of things that you know, that there's a lot of issues regarding trust that all these intermediaries have to deal with. So what blockchain can do is, if we think about a blockchain, it is an immutable ledger. Okay. So it's just think of it as like a huge column of transactions, right? Like an excel spreadsheet. The best part about a blockchain is that nobody can modify it, right? Once it's been created, no one can modify it. It's read only access as a read only data structure.

Speaker 1:          08:39          Now this is perfect for the supply chain. Once one intermediary does their job, they can, they can send as a transaction that data to the blockchain. Then the second part, the second intermediary intermediary knows that this, this person timestamped on the, now I know, you know, whatever this person did, and then they'll do the same. And then that just keeps going. And when it gets to the end consumer, the end consumer can say, where did, where, where is my product from? And rather than having to trust the label on the product, they can literally look at the blockchain and it will show the history of where that product has been.

Speaker 2:          09:16          Okay.

Speaker 1:          09:17          But that's just for the consumer, right? We can think about the retailer. We can think about the store, we can think about the third party logistics companies. All of these intermediaries can benefit, uh, from, from the blockchain, like using the blockchain. In this case right there, the, the logistics companies are notified of the origin of a product. The retailer gets to, um, add updates to its data, rector records automatically because it's listening to the blockchain. A store has full transparency on every single delivery order. Uh, there's a lot there, you know, because consumers can just scan a QR code on some product and immediately know where, where it came from, which is a perfect use case.

Speaker 2:          10:00          Okay.

Speaker 1:          10:01          But the problem is that like not many companies have done this well by the way. Like there's so many companies that say we are supply chain for blockchain and they don't actually have any, uh, customers or clients, but I found s sync fab and sync. That seems pretty cool if we go to, let's see, blockchain documents.

Speaker 2:          10:21          Yeah.

Speaker 1:          10:22          And then in the presentation, see some of their clients, which I think is very, very cool.

Speaker 2:          10:30          Okay.

Speaker 1:          10:30          They've got some governments here, which is very cool. They're there. They've been working with some governments, uh, city of San Leandro, a city of San Francisco, uh, and some other ones. But yeah, these are real clients of this company has been tracking for years. They'd been working with these clients for years. And

Speaker 1:          10:49          yeah, I think that's pretty cool. So if you want to look at a real world use case, it's sync fab manufacturing, supply chain, blockchain. Very cool stuff. But uh, right. So, so instead of having multiple versions of truth, right, remember these companies are all silos with their own databases. What if there was one single force of truth that they all had to listen to? Right? This is the source of truth immutable. It will never change it. Records cords, everything that happens across the supply chain and you can read it and you can look at it and it's, it will never change and you can trust it. Why I've gone into that in other videos, why the blockchain is immutable, just a youtube search, Saroj blockchain

Speaker 1:          11:35          decentralized applications that that will get you the, the first link. So, so how, so how has a real world application like sync fab actually doing this? Like, what are they doing that makes, uh, that that gives them the ability to have clients and build an actual business around this? Right? So we think about the manufacturer and the buyer rights. So you have a manufacturer and they create these products and then you have the buyer. They're buying these products. What incentive does each of these parties have to, to, to deal with this service? Well, for the hardware buyer, right? The person who wants to buy some hardware for the manufacturer, it eliminates all the intermediaries and brokers in that process, which saves them money and they can go directly to the manufacturer. It's kind of like Uber for manufacturing on demand manufacturing. Now, if you've ever tried to contact a manufacturer or a factory, if you have a hardware startup for example, it's a lot of work and it's not easy and it's a very dated process, right?

Speaker 1:          12:34          Sometimes you have to fill out a form and then you have to wait like three weeks and then they'll get back to you. But with this, you just, you get a listing of them on demand, I want this. And then it comes back to you. Now on the manufacturer side, how were they incentivized? Well, it eliminates their marketing costs. Right now they have to find buyers. So they have to put real money into marketing their, their manufacturing service. But this, the smart contracts that sink that provides, connects them directly to the buyer and guarantees payment. So remember how I said how small businesses usually can't come into this game because there's a reputation system while, because of smart contracts, they can because they can trust that even small players will do their part because there's a trusted, uh, blockchain in the middle that is a smart contract that escrows the funds.

Speaker 1:          13:22          So you can't just back out of it because there's a two of three escrow signature, which we'll get into and they've got their own token. It's called Mfg. Uh, but I really found their smart contract architecture. Interesting. So a person has an identity, they'll make a purchase order. Now a purchase order can consist of so many different features, right from, from your id to your payment terms, whatever your inspection report, and then they'll make a payment using that. And it goes from in progress canceled to complete it. They can, a buyer can make a purchase order on a smart using a smart contract on an immutable blockchain. That's it. So if you've ever worked with the supply chain, that's a, that's a new concept. It's, it's never been that easy for a buyer to just make a poor purchase order without having to deal with at least two or three intermediaries when it comes to hardware manufacturing.

Speaker 1:          14:13          But with this, they can, right. So this provides a high quality quotes from the source on demand purchasing for the, for the hardware innovators and a direct connection to the manufacturing facility, which eliminates marketing costs for the manufacturers, which I think they even have an APP, which is super cool and it's, it's a pretty app, you know, et Cetera, et cetera. Uh, but yeah, that's the PR. It's, it's a, it's a 13 step process. If we look at the logic for the smart contract. Um, but I think a better way to explain this process is to really build a very bare bones version of an asset tracker. Okay. So let's do, we'll create a bare bones asset tracker, um, in Remix, which is the solidity compiler. Now, sink fab has built their token on if [inaudible] if your room's blockchain and it's an Erc 20 token, they also are using the ethereum blockchain to builders smart contracts.

Speaker 1:          15:08          So what we're going to try to do is replicate a version, a version of sync fabs code, but a very simple version of that code. And all this is going to do is it's going to track an assets on a blockchain. So where do we start? So the first thing we want to do if we're going to structure this smart contract is to say that we're going to do the pragma mark solidity and then, uh, say what version it is. So remember, uh, the pragmas are known from whom cut from compilers like GCC, you know, they give the compiler additional information on how to process the, the giving code that even tells the compiler to use the highest version available using this little mark above, above that mark. Okay. So, uh, once we have that, we can say, let's assume that we have are an asset's file. Now the assets file will contain more metadata about the assets that we have, assets that solidity.

Speaker 1:          16:08          Okay. So in our asset tracker, so this is, this is what it does. It's a tracker. Now normally we would have a database on a web app that does this, but because this contract will live on a blockchain, nobody owns this. So it's an unstoppable asset tracker, right? Nobody can modify it. Now this asset, this asset tracker will contain an ID for the asset, which we'll call, which is a string, which we'll call Id. And we'll create a getter and a setter for this so we can get and set this, um, whenever we create it, right? So we want to create an ID and then we want to get it later so we can verify

Speaker 2:          16:51          it.

Speaker 1:          16:53          So this ID is going to return a string.

Speaker 2:          16:57          Yeah.

Speaker 1:          16:58          Or it's got the string, which is the ID. Okay. So there's that part and there's a bunch of different types we could use whenever we're coding solidity, there's bools, there's, you know, there's static. Um, I've got a list of all the different solidity types for you in the video description. So when, when it comes to tracking the data structure that we're going to use, I'm going to say, let's create that data structure. That data structure has called an asset, right? So what is contained in an asset? Well, an asset has a name, right? And asset has a description. It has a source, or we can call it a manufacturer in this case. And we've have some bullying that says, has it been initialized? We're not, which will tell the rest of the smart contract whether or not it's been initialized. So, so this is just a simple example. Remember, assets can have so many different features as we saw before. And acid can have, you know, virgin control version numbers, it can have a report, you know, et cetera. But this is just a very simple example. But in order to store these assets were we are going to create these two mappings. That's going to allow us to store acid properties as well as the relation between assets and wallets based on the you, you ids, which are there unique identification strings. So it's a private asset store. So that's the first, um, mapping we'll create that's going to be used to store assets under their respective you, you id, and then we'll have another mapping that maps.

Speaker 2:          18:31          Okay.

Speaker 1:          18:32          The asset store from the name, the description, this is, I mean this is for the wallet store, right? So true. What else do we want to say? Manufacturer and, well, this is to store assets, seizing their respective you UID. And then we'll have one another mapping and then we'll have another mapping for the address,

Speaker 2:          19:21          uh,

Speaker 1:          19:22          to make an assignment of an asset to a wallet.

Speaker 2:          19:26          So,

Speaker 1:          19:35          and we can say message, just send her your you id.

Speaker 2:          19:46          Okay.

Speaker 1:          19:47          Equals true.

Speaker 1:          19:55          Okay, so that was, okay. So that's the first part. Now for different, there could be a number of real world events that could happen here. Writes like asset creation, asset transfer, and we're going to define counterparts for that in this smart contract. Right? So what are some possible things that could happen to an asset? Well, one could be the creation of an asset, right? So what would be the parameters for asset creation? Well, we want the address of the account, right? We want, it's it's Id, it's unique identifier. We want, what else do we want? We want its manufacturer and we want, I think that's it. Yeah, those are the three. Uh, what else do we want? So let's just, we want, uh, to be able to reject a creation. So we'll say event reject, create. Okay. And then we want another one that's going to be asset transfer, asset transfer. And we want one more, which is going to be reject transfer. And this is going to be addressed account. Of course there's going to be from, because the t because these last two are from,

Speaker 2:          21:08          mmm.

Speaker 1:          21:10          This is going to be a message. This is, we don't need one for a transfer. And then we have a message for reject rejection message and,

Speaker 2:          21:25          hmm.

Speaker 1:          21:26          Okay, cool. So there's that. Now we can create an asset. So let me just write out, um,

Speaker 2:          21:38          okay.

Speaker 1:          21:41          Okay. So now let me write out just a simple function for asset creation. Try. So if we want to create an asset, we can say, okay, so using what we've just created before, let's say to create an asset, we need snake, we needed a description for this, for the asset, and we need the manufacturer manufacturer. Now once we have that, we can

Speaker 2:          22:03          right this out.

Speaker 1:          22:06          So if the asset stores a unique identifier is initialized,

Speaker 2:          22:17          yeah,

Speaker 1:          22:18          then we're going to reject the creation step.

Speaker 2:          22:25          Okay.

Speaker 1:          22:26          Same to sender and the U U I d are going to be as as parameters. Um, and what that means is if it's already initialized asset with this you UID already created, it means it's already been created. Now, once we have that, that's just kind of our failure case. Then once we have that, then we can say, let's store if it, if it, if it hasn't been created before, then let's create the asset, the name description,

Speaker 2:          23:00          true.

Speaker 1:          23:04          And the Wallet Store, right? Cause we're going to store the asset, uh, we have, we're going to store it in our wallet and we're going to create,

Speaker 2:          23:20          that's factor there.

Speaker 1:          23:30          Okay. So what, okay, so what this is saying is that in order to, let me just make sure this is all good. Yup. So what is the saying is that in order to transfer an asset, uh, we're, we're going to create a function that takes the address, the target wallet along with the Asset Id. Okay. And we check those two preconditions. And the asset is if the asset actually exists, uh, then we don't want to recreate it. But if it doesn't, then we're going to create the asset ourselves. Now this is, this is the type of function that we would call from web three dot. Js. Right? So this is the, okay, this is the contract that we would deploy to the blockchain and then we would use wet three dot js. So then called this contract specifically create asset using the Nate, the description, the manufacturer. Okay. Sing Fab has their own smart contracts that we could look at on get hub. Um, they have quite a lot of smart contracts here, but if you're looking for a good source to learn about a production ready, smart contract code for supply chains, definitely check them out. Uh, yeah. So that's it for this video. I hope you found it useful and yeah.