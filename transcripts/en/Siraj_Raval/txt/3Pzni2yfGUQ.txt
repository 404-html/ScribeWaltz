Speaker 1:          00:00          The data ready to make the data wit hello world. It's Iraj and welcome to data lit my free 12 week intro to data science course, our release all my videos right here on my youtube channels. So if you're new, click subscribe to stay updated. If you want access to the weekly quizzes, supplementary content from my assistant instructors and support, you can register for the course on the school of AI website using the link in the video description. A quick Google search for the terms. Data scientist will bring up headlines like the job of the future or the sexiest job of the century. Smell like data science. The reason being, as more businesses come online every day, they're collecting more data. We're collectively generating over 28 k gigs of data every minute of every day and the businesses that are leading the charge in their industries are the ones using that data to make decisions and increase their revenue.

Speaker 1:          01:00          Unlike apple data, science is here to stay. It applies to virtually any industry. It pays very well and it's a respectable field to work in. What's not to like about it besides are the best part is that the tools of data science have been democratized to the point where anyone can do it if they have the drive to anywhere in the world, whether it's working with transactional data, social data, scientific data or sensor data. Being able to know how to properly extract insights is a primary skill for data scientists in this video will play the role of a data scientist at a startup making a new device that monitors a patient's heartbeat. Our job is to do some market research and figure out how consumers feel about the main competitor to our product. The Apple Watch, there are several ways to do this, but the most straightforward way is to go to Twitter and search for mentions of the Apple Watch.

Speaker 1:          01:54          We could naively just manually observed that data ourselves by scrolling endlessly to try to get a feel for people's opinions, but we're going to implement a more thorough scalable driven process by performing what's called sentiment analysis. Another word for this is opinion mining. This is a data science technique that centers around building systems that can identify and extract opinions within text, but usually besides just identifying an opinion, these systems can extract attributes of the expression like the polarity meaning if the speaker is expressing a positive or negative opinion since publicly and privately available, data over the Internet is growing exponentially. Huge amounts of texts expressing opinions are available on review sites, forums, blogs, social media, and the best dinosaur.com sentiment analysis can help craft this unstructured information into structured data on public opinions about products and brands. Any topic that people can express opinions about.

Speaker 1:          02:55          If you think about it, all texts information can be categorized, either fact or opinion. Sentiment analysis then can be modeled as a classification problem where to sub problems need to be resolved. The first being is this text and opinion or not and the second big, what is its polarity. There are different types of opinions as well. Direct opinions given an opinion about an entity directly. A comparative opinion is expressed by comparing one entity to another. On the explicit opinion on a subject is expressed directly on implicit opinion is implied. The most difficult type of opinion to analyze, we'd likely be metaphors and that they include a lot of related semantic information. We can choose to perform sentiment analysis at the document level, sentence level, or even sub sentence level, and we can focus on any number of ways of analyzing the sentiment. We can turn polarity into a larger, more detailed spectrum.

Speaker 1:          03:49          We can classify specific emotions like happiness and frustration. We can choose to analyze the sentiment of how a customer feels about only one aspect of a product. Try to decipher someone's intent and if we're feeling really ambitious, apply sentiment analysis across languages, Russian texts, we'll probably analyze you instead. Clearly there are a lot of ways of framing our task, so how do we do all of this? There are two major ways we can implement sentiment analysis. The first way is to use a rule based system. These perform sentiment analysis based on a set of manually crafted rules. These rules identify things like subjectivity and polarity. By utilizing a lexicon. A lexicon is a dictionary of positive and negative opinion words and expressions. There are several out there that are freely available to use. For example, the center words lexicon contains over one 55 k English words with their associated polarity scores. A basic example of a rule based method would be to defined two lists of polarized words, both negative and positive. Then given a text count the number of positive and negative words that appearance, if the number of positive words is greater than the negative word count, return a positive sentiment else return negative if it's the same amount, return neutral. See, that wasn't so hard yet. Obviously we can add support for new expressions and vocabulary by creating new rules, but that can serve as a basic example

Speaker 2:          05:22          snake to find the good and bad structured text. Good Ma analyzers somewhere on her rogue nags.

Speaker 1:          05:32          The second way to do sentiment analysis is to use an automatic method one that doesn't rely on rules, but instead on machine learning, we can model this as a classification problem where some given algorithm is fed text and returns a corresponding polarity. During the training process, the algorithm learns to associate a particular input with a particular output using an optimization strategy. There are several classification algorithms we could use for this, but for now let's stick with a rule based system. The automated approach is easier to scale and usually offers more accurate results, but it requires training. Data to learn from the rule based approach requires no training process and it's easier to debug. This is a good starting point. We're going to use Twitter as our data source here. It's rich with public opinion data, but in order to extract tweets for analysis, we to access our Twitter account and create an APP from apps.twitter.com from this app we're creating, we're going to save the following four variables, the consumer key consumer secret access token and access token secret, which we'll use to access the Twitter API.

Speaker 1:          06:45          Now we're going to write this script in the browser using Google's Colab, a python environment in the cloud. If this is the first time you've coated before, welcome to the wonderful world of programming in python. There's no turning back. We're going to first install several libraries that we'll use in our sentiment analysis app. Using the pip install command, pandas will help us perform data. Preprocessing tweet pie will let us access to Twitter, API and Bader. We'll let us perform the actual sentiment analysis by looking up words in. It's built in lexicon. Once we've installed our libraries, we can import them one by one. Then we can use the Twitter Api Library tweet pie to extract a list of tweets that mentioned the Apple Watch. By specifying it as a keyword. We can set this count to 200 so we'll get 200 tweets. If we print out the tweaks, we can see each of them in a list format.

Speaker 1:          07:36          This collection of tweets is our dataset. Now that we have that initial information, we need to reformat it so that it's easier to process for sentiment analysis. The pandas library will allow us to manipulate the info in a simple way by converting it into a data frame object. Think of it like a spreadsheet with rows and columns. Once we have a data frame, we can access some of the tweets metadata by using one of several attributes, so there's a lot of data that we can get from a single tweet but not all of this data is always useful for our goal, so if we'd like, we can remove some of this data before we perform sentiment analysis. We want to clean our text data so that any character that isn't an Alpha numeric value will be remapped into a new one that satisfies this condition.

Speaker 1:          08:23          To do that, we can use the real library which is used to work with regular expressions. This is a sequence of characters that define a search pattern. Usually this pattern is used by string searching algorithms for doing search and replace in strings. The Bader library is a lexicon and rule based sentiment analysis tool that is specifically attuned to sentiments expressed in social media. It actually stands for Bailyn's aware dictionary and sentiments reasoner. There is no machine learning occurring here. This library, we'll parse any string input by searching for polarity scores for each word and it's lexicon and return a full score. In order to place these results in our data frame, we'll just add an extra column to our data. This column is going to contain the sentiment analysis and we can plot the data frame to see the updates. Now we can print out our results and see what the overall score was.

Speaker 1:          09:17          It looks like people like their apple watches. We might need to think of a different product or do some more in depth market analysis by figuring out what part of the Apple Watch they dislike the most. That gave us pretty good signal, a public sentiment about the Apple Watch, but if we wanted to scale our app to apply sentiment analysis to millions of tweets, we'd probably want to use an automated approach instead of a rule based approach. There are a huge number of powerful tools that exist today that make this kind of capability really easy to implement from the psychic learn library in python to WeChat in Java, all we need is a Dataset with at least 10 k examples to learn from. But that's a topic for another lesson. There are three points to remember from this video. Sentiment analysis is a technique that involves building systems that can identify and extract opinions from text. It can be rule based matching words with sentiment scores from a lexicon or automated, where a trained pattern matching algorithm will predict a words that sentiment. And we can build a sentiment analyzer in a few lines of python using the Twitter Api and debater python framework. And what do you want to use sentiment analysis for? And let me know in the comments section and please subscribe for more programming videos. For now, I'm going to find my polarity. So thanks for watching.