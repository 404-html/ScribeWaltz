Speaker 1:          00:00          Hello world. It's Saroj and it seems like these days everybody is creating some kind of cryptocurrency token for their business or research or even just for fun. Pot coined sponsored a celebrity's trip to North Korea. What the fuck? In this video, I'll show you how you can make your own token using the etherium platform. When bitcoin launched in 2009 as the world's first cryptocurrency, it had the single goal of allowing for value transfer without the need for a middleman. Bitcoin's blockchain data structure is essentially a worldwide excel spreadsheet that is formed by lots of computers talking to each other. This blockchain is a digital ledger continuously recording and verifying records. It's used to track and verify bitcoin transactions. Etherium is also a public blockchain network and its appeal is that it has its own Turing complete scripting language that lets developers build what are called smart contracts.

Speaker 1:          00:57          Smart contracts are strings of computer code capable of automatically executing when certain predetermined conditions are met. Instead of requiring a single central authority to say Yay or Nay, these contracts are self operated. For example, a smart contract could say, pay Joe $10 every time he watches Oprah speech and cries and it would pay Joe once those conditions are met because all the nodes run this code, etherium can be considered a worldwide computer that no one can turn off and that no one can tamper with. It runs exactly as programmed. It's like using a service like Amazon or digital ocean to upload programs and run them, except there isn't a single party behind it. Sorry, not sorry, Mr Bayzos. Ether is the cryptocurrency that powers this network by allowing users to pay for smart contract transaction fees. So one type of smart contract that's gotten really popular recently is the token smart contract tokens or digital assets that can represent anything from loyalty points to vouchers to IOUs, to securities to actual physical objects like vibrators.

Speaker 1:          02:07          A token is nothing more than a smart contract running on top of the etherium blockchain. It's a set of functions with an associated database. The code describes the behavior of the token and the database is just a table of rows and columns tracking who owns how many tokens. If a user or another smart contract in etherium sends a message to that tokens contract in the form of the transaction, the code updates it's database, so let's say a wallet APP sends a message to a tokens contract to transfer funds from Joe to Jack the tokens contract. We'll first check that the message was signed by Joe and that he has sufficient funds to cover the payment. Then it moves the funds from Joe's account to Jack's account in the database. It will then send a response letting the wallet, no, that transaction was a success in order to create a user friendly and broadly accessible system per token creation.

Speaker 1:          03:03          A set of standards called Erc 20 was created by the etherium developers. Erc 20 defines a set of six functions that other smart contracts within the etherium ecosystem will understand and recognize. These include for instance, how to transfer a token by the owner or on behalf of the owner and how to access data like name, symbol, supply and balance about the token. Together these functions and events make etherium tokens work the same almost everywhere within the etherium ecosystem. This interoperability is important to spur an ecosystem. As a result, nearly all wallets that support ether now also support Erc 20 compliant tokens, so let's create a standard Erc 20 token. A set amount will be created and we won't have any fancy rules like finance skynet to with all the profits. The first step is to decide what we want our token to be. We'll decide a name, symbol, number of decimal places, and the number of tokens in circulation.

Speaker 1:          04:01          Most tokens have 18 decimal places. Let's keep it simple. We want people to either have a token or not, nothing in between, so we'll choose zero. Our next step is to actually code this token contract. Luckily for us, we can just copy and paste a standard Erc 20 token template contract written in solidity etherium scripting language. It's a token contract with functions that defined the total amount of tokens balance. The act of transferring funds and approving transactions will inherit from the initial token class. To add the details of how our specific token will work. Using custom variables, we can replace the filler words with the values we find to be best in our text editor. The supply we set for our token is correlated to the amount of decimal places we set. So if we had a token with zero decimal places and a hundred tokens, then the supply would be a hundred but if we had 18 decimal places and a hundred tokens, then the supply would be a much bigger number.

Speaker 1:          04:59          We also set the amount of tokens we receive as a creator of the contract. For now, we'll just set it equal to the supply. So we receive all the tokens. We could set it with different rules, so different founders of our project could receive different amounts, but we're going lone wolf right now. All right, now we'll deploy this token to the etherium test net just to see if it works. We can download metta mask since it has an easy to use interface to test this out. Once installed, we'll set up the rops, didn't test network. Then we'll head to the solidity remix compiler, which is an online compiler that publishes smart contracts straight to the blockchain. We can copy and paste the source code of our contract into the main window. We can go to the setting and select the latest release compiler version and uncheck enable optimization.

Speaker 1:          05:48          We'll go back to the contract tab and hit create. Under the name of the token function. We create Mehta mask will then pop up asking us to hit submit to pay for the transaction. Of course we will. It's not real ether. It's a test net and when we hit submit it'll say contract pending in metal mask. When we click the date, it'll bring up a screen that details the transaction. Now we can see if it actually created the tokens and sent them to our wallet. We'll copy the contract address and add it to the Metta Mask Tokens Tab. It says we have a hundred tokens, so it worked. Now we can send those tokens or sell them on a market if we decide to. We can also create another contract that automatically sends these tokens of people. If they send us a certain amount of ether, which could power your next ICO like Jesus coin.

Speaker 1:          06:34          We'll also want to verify the source code so that the public knows we're not doing anything shady. We can deploy our token to the main net so people can actually use it. So we'll basically do the same thing we just did, except instead of being connected to the rob test network will be connected to the main net. Will need to fund our contract with real ether. To do this, it can cost anywhere from 20 to $50 worth of ether. As of now is summarize. A token is a digital asset that can represent anything from loyalty points to vouchers to securities. Tokens are smart contracts and we can easily create them using the etherium blockchains, Turing complete scripting language called solidity. And to create a token, we just fill in a smart contract template written in solidity with our details and deploy it to the theory and blockchain the a tool called Metta mask. Please subscribe for more programming videos. And for now, I've got a great Suraj Goin, so thanks for watching.