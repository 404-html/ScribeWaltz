Speaker 1:          00:00          Hello world. It's a Raj and quantum computers. How do they work and how do they benefit AI? Let's talk a little bit about the theory and then we'll build a very simple quantum algorithm. By the way, the machine that you're using to watch this video, whether it's a laptop or a phone, is an example of a classical computer. It's a general purpose machine. We can code up an algorithm, give it some quality data, and theoretically it can accomplish pretty much any task. We'd like streaming live video, creating immersive three dimensional environments, eliminating existential dread. Actually it doesn't do that yet, but at their core, all classical computers do something really basic under the hood. Behind every software application is a series of simple math operations. Any task we want to perform on a computer like booking a flight or playing a game is translated into a string of ones and Zeros, which act as input that is processed by an algorithm which then outputs a new string of ones and Zeros, algorithms in all their complexity.

Speaker 1:          01:19          In the end just manipulate strings of bits where each bit is either a one or a zero. We use ones and Zeros because there a way of representing information such that it can only be in one of two different states. Computers run on electricity de when a computer wants to send information from one place to another, it sends pulses of electricity over a wire. Computers use transistors that can either be closed so that a current flows or open, which means there isn't a current, both states are represented using either a one or zero. They're like light switches either on or off. So when these ones and Zeros are strings together, they can represent any number or letter using binary code computers you circuits called logic gates that are composed of transistors connected together and they compare patterns of bits to turn them into new patterns of bits using simple arithmetic, hard drives, store ones and Zeros.

Speaker 1:          02:26          By changing the magnetic poles of small parts of a metal disk. Positive and negative charges are represented by ones and Zeros respectively. So computers do these two things really well. They store numbers in memory and can process these numbers with simple math operations. I'm just like, you vote for Sirajuddin? Let's make binary great again. In 1965 the founder of Intel Gordon Moore predicted that the number of transistors per square on integrated circuits what continue to double every 18 months. So far it's proven to be true, but there is a coming plateau and transistor density. We can only make them so small before the laws of physics stop us. The idea of quantum computing is a potential solution and that's why interest in it has increased in recent years. The word quantum in physics means the minimum amount of any physical entity involved in interaction. So a photon is a single quantum of light. For example. That's its real scientific definition, but it's also used colloquially sometimes to mean the opposite like quantum leap or buy anything. Deepak Chopra says

Speaker 2:          03:48          the Aficionados in the world of quantum physics, I have somehow hijack the word for their own use.

Speaker 1:          03:57          Quantum physics deals with the world of atoms and the subatomic particles inside of them. It's really a bad ass because on the atomic scale, the laws of classical physics no longer apply. Richard Fineman put it best when he said things on a very small scale, behave like nothing you have any direct experience about or like anything that you have ever seen. Tiny particles like electrons and photons can take on several states at the same time that a larger scale would be mutually exclusive. They can be in several places at once or exhibit two kinds of polarization. At the same time, we're not able to see this super position of different states because it disappears once someone tries to measure it. Nobody really knows how that happens, but it does. We can use this concept of super position to free computers from having binary constraints. Quantum computers use particles magnetically suspended in near absolute zero temperatures to represent not bits but Q bits instead of representing either one or zero.

Speaker 1:          05:15          They can also represent them both simultaneously. Okay, so you might be thinking big deal. Could you just achieve super position on a classical computer by just using two ordinary bits at the same time? No need for a cubit? No, because there's more to quantum physics then just super position. There's also the idea of entanglement. If we have a system of more than one cubit, these particles are not independent of each other. They're entangles. So in a system of two cubits, the outcome of one cubit tells you what you will see when you measure the other cubits. Particles can be entangles even if they are separated in space by huge distances. Einstein called entanglement, spooky action at a distance. That's my Einstein voice. What that means is that you can't just describe a system of several cubits using descriptions of individual cubits. You have to describe the correlations between two cubits, and as you increase the number of them, the number of correlations grows exponentially.

Speaker 1:          06:23          So for a system of just 300 cubits, you'd need more numbers than there are atoms in the visible universe to describe. Think about that for a second. So because we can't just write down the info contained in a system of a few hundred cubits using classical bits, maybe a computer running on these cubits can perform tasks that classical computers couldn't achieve. That's why people think quantum computing holds a lot of promise. So let's build a simple quantum algorithm in python using IBM's quantum API to learn more. You can sign up for access to their API easily on their website. Then download the Sdk to use it in python. After we import it, we're going to build the Deutsche Jasa Algorithm, one of the first quantum algos to be proposed. We are given a quantum computer known as an oracle that implements some function f. It takes end digit binary values as input and produces either a zero or one is output for each value.

Speaker 1:          07:31          The function is constant zero on all inputs or one on all inputs. It could also be balanced so it returns one for half of the input domain and zero for the other half. The task is to decide if f is constant or balanced by using the oracle. First, we'll initialize a quantum program object with a quantum and classical register holding three bits. The program lets us manipulate quantum circuits and each circuit has a set of data registers, will apply what's called a Hattah marred gates to every cubit. So now all the possible states are equally likely to be observed. For every possible state will apply the Oracle. In our case the oracle is a balanced function. Then we'll apply the HK two, all the cubits once more and that's it for our algorithm. For a constant function, we can expect a 100% chance of observing all zeros and for balance function.

Speaker 1:          08:26          We can expect anything else. This shows that a black box problem can be solved efficiently by a quantum computer with no error, whereas a classical computer would need way more queries to the black box to solve the problem. I just sacrificed relationships for greatness. These hands have yet to create their masterpiece intelligence Zuma class. So there are three takeaways here. Quantum is the study of physical phenomena that happened at the atomic or subatomic level. Quantum computing takes advantage of quantum physics to allow for more efficient algorithms and cubits. Not Bits are the fundamental unit of quantum computing capable of simultaneously representing both a one and a zero. The wizard of the week is no one would doubt. The challenge was to build a queue learning bond and you know he used care Os. It trained a DQ learner in the carpool environment until it was able to successfully balance itself. Loved animation at the end, great work and run around his fee. John Won. He use tensor flow to build a Dq, enter the gate breakout with no high level raptors. Nicely done. The coding challenge for this week is to try your hand at building a simple quantum algorithm using IBM's Api. Details are in the read me posts or get help link in the comments and I'll announce a winner next week. I hope you like this video. Please subscribe for more like it if you did, and for now I've got a quantum teleport, so thanks for watching.