Speaker 1:          00:06          Hello.

Speaker 2:          00:13          Okay,

Speaker 1:          00:15          let's see. Hello world. It's the Raj, welcome to this live stream. Today I'm going to be a visualizing data with d three dot. Js, which is a data visualization library. I don't normally do,

Speaker 3:          00:44          uh,

Speaker 1:          00:45          anything with javascript for this channel, but I've done a lot of javascript in the past. When I worked at Twilio, when I worked on my own side projects, javascript is a great language for hackathons or hacking up anything really quickly to, to show off. And data visualization is really important, uh, for Demo and what you've done. So that's what we're going to be talking about that. So I'm going to start off this, uh, livestream with a five minute Q and a and then we'll get right to the code. And what we're going to be doing is visualizing the survivor Dataset, uh, for the titanic.

Speaker 3:          01:24          MMM.

Speaker 1:          01:25          Kaggle Dataset. All right, so let's start off with the Q and. A. Hi everybody. How's it going? Good to see you guys.

Speaker 1:          01:35          Um, what are my thoughts on neural networks for F PGA? Um, FPG A's operate on a completely different, uh, architecture, like a computing architecture. And I think that there's a lot of space for experimentation with that. I've only seen one tutorial on f F PGS in neural networks on the machine learning sub reddit and that was like a few months ago. Um, but I, I definitely think there's a lot of work to do there. A data visualization with the unity and d three I would pick one or the other. I don't see how both of them would work together. Unity is like something entirely different. It's for three d graphics and in d three is more for two d a neural net for Pokemon would be awesome. That's actually been done before. Actually if you look today on the machine learning sub Reddit, there is a, there's a guy who di just colorized Pokemon blue for uh, using a convolutional neural network.

Speaker 1:          02:32          How should I prepare for a thesis interview on autonomous driving? Uh, you should take the self driving car nanodegree that I'm working on with you, Udacity. It's totally worth it. A bunch of car companies are going to look at this as a valid thing. So you should totally look at that for an amateur. I would say start with d three, not okay. If you want to get into data visualization using javascript and any code pat podcast or youtube channels that I recommend, I would say, um, my own, uh, let's see. I really like, um, let's see there, there are a couple, but I think one that comes to mind is, um, one for Ios. Uh, it's uh, the guy who made a half networking, so search Ahab networking, uh, blog. His name's Matt. Any book from machine learning? I'm really excited for Andrew [inaudible] machine learning yearning a, that's coming out in like a month. I think that's going to be super cool. Where do I work? I do this youtube channel fulltime. I don't that, that's, that's all I do. A, I'm not going to work for anybody. Do I classify d three. Dot. JS is a low level graphics library. Um, I classify it as lower level than a lot of javascript libraries because it works in, manipulates the dom directly, which is the elements that you see on the page. The document object model. The dom is just an, is a fancy way of saying what you see on a page. Are you using d three Pi Library? No, I'm just working directly with d three

Speaker 1:          04:14          and, uh, also I just want it to say, uh, about the whole Trump election. Everything's gonna be okay. Don't worry about it. If you look at the data, the majority of people, 18 to 25, like nine, 96% of millennial voters voted for Hillary. So the future is still bright and, uh, you know, if we just keep going in this bad direction, I'll just run for president and like 20 years. So. Well, you know what I'm saying? So anyway, what data, uh, just, it's, it's all over Twitter. I mean, just like, yeah. Anyway. All right, two more questions and then we're going to get started this. Let's see. Um,

Speaker 1:          04:58          what will the schedule for today be? It's going to be a schedule for today will be, uh, using d three dot js to visualize, to visualize data for the titanic survivor Dataset off of Kaggle. And I'm going to show you guys that. Okay, last question. How old are you? I am 25 years old, 25 years old. All right, that's all for um, okay, one more, uh, thoughts on self driving cars. They're coming really, really fast. Like next year I've actually saw a lot of self driving cars, uh, just here in San Francisco. Just like all around like they're like Uber is testing them. So anyway. Okay, so here we go. We're going to get started. I'm going to go ahead and screen cast. So, um, go ahead and I want you guys to work with me on this. Okay. If you have, all you need to do is have node installed node dot js. All right, so let's, I'm going to screen and we're going to get started. Here we go. Here we go. One more time. Everybody feel advanced screen share. All right. Okay. To share blah, blah, blah. Okay, so now you guys see a bunch of stuff here.

Speaker 2:          06:19          All right,

Speaker 1:          06:22          I'm going to put this in the corner

Speaker 1:          06:27          that, that, that uh, I thought about being a rapper, but you know, computer science is just my calling and I'm sure I can combine both. I'm actually going to La. Youtube is, I just wanted this youtube thing called next up for creators, like 20 creators. And I'm going to go to, they're paying for the flight and the hotel and it's going to be really cool. I'm going to try to make a, not try and wait to make a machine learning music video. So, oh, I just admitted that. Say you guys get to know the details because you're watching me live and then really tell anybody this, but okay, so here we go. Let me explain what I have here on the screen. Let me maximize this. Let me maximize this. Blah, blah, blah, blah, blah. Make it really big corner here. Uh, there I am. Really small, just like my

Speaker 1:          07:21          brain. Just kidding. Okay. So, all right, what do I have here? What do I have here? I have a node APP. Okay. And let me explain what's happening here. I have a few things pre coded so that we don't have to code that. I just have a few things pre coded right now. Uh, so we just kept right to the, the good stuff. So let's talk about what we have here. So in your, so what you want to do is you want to start off by creating a package dot Jason and in node. Well, actually let me just, let me start off with explaining, uh, what we're doing here. So we're going to visualize our data in the browser with d three. Okay. The data set we're using is the titanic survivor Dataset off of Kaggle. And let me just show you guys an example of that.

Speaker 1:          08:08          So the Kaggle Titanic Dataset, uh, is really popular. It's been in use in machine learning for quite a while. Um, let me have that show up on the screen right here. Okay. Where did that go? Where'd it go? Boom. Is it behind this? Where'd it go? Fuck, hold on. There it is. Okay. So yeah, this is, it is. You can find it on Kaggle. There's a, there's a bunch of great, um, data sets off of Kaggle on always using cake. All data sets. They're well documented and have a lot of people that are using them. And so with this one is, is it shows all the passengers off of titanic and it shows whether or not they survived and a bunch of features about them. So it's going to show things like their age, gender, uh, where they embarked from, uh, where they're from in general. Um, and whether or not they survived, which is a Boolean, like yes, they survived or no, they didn't survive.

Speaker 1:          09:05          And we can do a lot of things with this data. We can predict if somebody survived based on what their gender is. While we can predict whether it's not somebody survived based on where they're from. And so it's a really great data set to get started with learning about machine learning and predictive analytics. Okay. So that's the data set we're going to using. You were going to be using, you can get it from right here, right at this link. All right. Uh, so that's the Dataset. And uh, we're going to be using, uh, the node. We're going to be using Java script, by the way. And the reason we're using javascript, because javascript is the programming language of the web. Javascript is messy. It's ugly, it's been stretched and pulled to do things that no one ever intended for it to do. Yet it is the language of the web.

Speaker 1:          09:49          It is pervasive. It is everywhere. It is behind every single website you visit on the Internet, okay. And so javascript is a really, really important language and everybody should know at least a little bit of javascript. Okay. And uh, the data set is not formatted in Jason. It's formatted in CSV, okay. And I'm going to talk about that in a second, but we're, we're going to be using is the d three. Dot. JS Javascript Library d three is a javascript library that you can add to the front end of your web application. Okay? So d three stands for data driven documents. Let me show you God. And [inaudible] stands for data driven documents. It was a library that was created. Basically you showcase, uh, all the data that people have and it's, it's got this huge open source community. There's like 9,000 forks on get hub for the d three library.

Speaker 1:          10:38          It is the biggest data vis library in the world. And let me show you guys what I mean when I say that. Okay? If you just look on the Internet at a couple of examples of B3, you have literally thousands of examples, okay? Thousands of examples of all the different types of data visualization, things you can do with d three. It is extremely powerful, okay? You've, you can do pie charts, you can do Matrix sees, there's a lot of animations, uh, all sorts of things, bar charts, pie charts, court diagrams, lollipops, tables, bubbles, they're all over the place. And d three is a really great library for visualizing these things. All right? So that's why that's what we're going to be using or we going to be using a d three. And um, and what [inaudible] does. And the reason I chose it, besides it's huge open source community, uh, is it directly manipulates elements in the document object model, the Dawn, which is a fancy term for saying whatever you're showing on the current webpage, like the table, the head, things like that.

Speaker 1:          11:38          So if you're ever presenting at a conference or a hackathon class, you are going to get extra credit for knowing d three. Okay. Because it doesn't matter how good your workforce, you have to present it really well. And that's all about visualization. Okay, so let's get started. We're going to be using node to show this. It's going to be a web APP. And note is a javascript runtime. Uh, traditionally before node you would have to, when you create a Web App, you create your backend and your backend is going to be in some weird language like you know, Scala or something else. And then your front end's going to be in javascript. So you have to know two languages. But with node you can do the backend and the front end. In javascript you could do the entire stack in javascript. So the backend means things that are happening in the background, data manipulation, data storage, uh, you know, machine learning, you have to do all that in a different language.

Speaker 1:          12:27          But with Javascript, well, I mean with no, you could do it all in javascript. So we're going to be using no, go ahead and install node a and you can do that as a binary for any system you're on a and once you have note, it comes with NPM, which is the node package manager. You can install a bunch of javascript libraries just like you'd do with pythons package manager. Okay. Pip, NPM install. Okay, so this is our package dot Jason and it shows, uh, it shows what our dependencies are going to be. In this case, our dependency is just going to be expressed, which is key, which is uh, which is a dependency that allows you to create a skeleton for your note app automatically. All right. Uh, and, and uh, we also have our, uh, APP dot js. Okay. Which I've already coded a skeleton for us here.

Speaker 1:          13:17          I'm just going to quickly explain this so we can get to the biologic that we're going to be doing in this code. In the APP dot js we have three variables that we're going to start off with for express importer express module that we already installed as it dependencies. And then we're going to create our APP using the express. And then we have a path variable that uses, uh, the path dependencies, which is going to, we're going to have, I'll show you guys what we're going to do with that. The first line is going to be app dot use express static path joined public. What does that mean? It's, it says take whatever is in the public folder and use it in this app. So what do we have in our public folder? Let's check. And our public folder, I've got four items. Okay. I've got d three dot B3 Dot Min dot.

Speaker 1:          14:04          Js. What is this? This is a bunch of code, but what it is is the d three library. You can download this and we're going to, we're going to link to it in our index file. Index dot html. So we can use d three. This is all of the three. It, it's, it looks like it's not a lot, but it's a lot of code. You just can't see it because it's all happening horizontally. Okay. And then the next thing we're going to use is dimple. Dimple is a wrapper around d three that makes it easier to use. So let me show you guys what Timple looks like. Okay. We imple is an API there. Visualize me three and an easy way. So B three k, the learning curve for d three can be kind of intense. So, uh, we're going to just use dimple to have an easy wrapper around it.

Speaker 1:          14:51          So we're going to be able to use d three elements with an easy to use API. It's a great way to get started for data visualization. Alright, so dimple js.org check that out. So that's it. Those are, those are the things we're going to be using. And the last two, the last two call, uh, items are the titanic Dataset. The first one shows, uh, the passengers, their status, you know, whether or not they survived and the features about them, class sex and whether where they embarked from. And the next one shows a more information about them, like their ticket, the fair, the cabin, things like that, and their passenger id. These are, these are our two. Um, these are our two dependencies. Okay. Sorry, our two data datasets. The tank Dataset. All right. Um, so that's what we're going to be using in our app and that's where we're saying let's use whatever it is in the public folder.

Speaker 1:          15:39          Then we create our first route. All right. And in our first route, we're going to say, uh, debt, whatever it is, in the index one dot. Html file and show it on the page. So whenever we hit this, which is the main page, we're going to go to local host and we're going to hit it. It's going to show us whatever is in our index dot. Html. All right, so what is this last code? This last code is going to start our server. Okay. It's going to say start it at port 5,000 using the address and port and then, and then print it. The terminal. That's it. Okay. So let's, let's see what that looks like. I already ran it. So I already typed in node app dot js. That's all you have to type in. Node App node, APP dot js. Okay. And once you do that, it's going to see right here. Node App dot js. It's gonna Start, it's gonna start the APP at the, at port by thousands. So let's see what that looks like. Local host 5,000 I'm going to show this to you guys right here. Okay. All it says is data visualization. Why is that? Because in my index dot html, the page is showing. That's the only thing that I have show up. So what do we, what do we have here?

Speaker 2:          16:52          Okay,

Speaker 1:          16:53          so what do we have here? What we're starting off with, uh, our script. So we import d three and dimple, and we do that. You think the script keyword. All right, this is all html. What we're going to be writing javascript inside of html. And we can tell html to use javascript by pointing, by using the script keywords.

Speaker 1:          17:16          All right? So we've important d three and dimple, and now we're going to actually perform our data visualization. Okay? And so I've written out html here of what we're going to be doing. All right? So let's start off with cre by creating a bar chart or who plot survivors by, uh, their class. So whatever class they were in. All right, so let's do it. Okay, here we go. All right, so let's, let's type that out. So in html we're going to say we're going to create an h two tag, which is a header and say survivors. Uh, bye

Speaker 1:          17:55          passenger class and it's going to be a bar chart. So we'll say bar. All right, this is just text. This is just plain text. All right? Now we need to tell our html that we're about to write some javascript. Shit's about to get real. We're about threat. Some javascript. This isn't no html anymore. All right? So we'll start off by writing Java script by the script tag and then we'll close it. Okay. That means that we're ready to write our javascript. And what are we going to do? Well, we're going to put this inside of what we call a div. Div is an element that we group things, ads. And we're going to call this this the charts container too, because we're going to have another one later and we'll close the grip in html. You open and close everything just like this. All right.

Speaker 1:          18:47          Open and closed. All right, so let's start off by, um, oh, you guys are hilarious. Okay, so let's start off by doing this. All right, so let's go ahead and say we're going to create our first Sgt. Oh, closing. Because my age too, it's my age too. Oh yeah. Thank you. Appreciate it. So now let's do this. So we're going to, the first thing we're going to do is we want to say bar and we're going to call this SVG too. All right, our SPD to equals pimple dot. New SVG. And we're gonna call it an element that we want to use for this. And, um, let's see, uh, and then close it here in the printing. And then 600 400. So what did I just do here? Well, I'm creating an SP. SPG. SPG is a language for describing two d graphics in Xml.

Speaker 1:          19:46          All right. So we're going to create one here so that the arguments here are the parents. Elector, um, are the parents elector, which is doctor, which is what the element in the dom. We want to write this bar chart in and then, uh, the size and width of it. Okay, so it's an SVG element and it's going to be a chart. All right, so let's go ahead and do this. We're going to say we're going to, now we're going to use d three [inaudible] three dot CSV. So we're going to call our data data from our CSV file and then we're going to say, uh, we're going to say, hey, function, uh, data, what is this doing? Me Three has a bunch of file types it can support when loading data. And one of the most common ones is just plain old CSV, which is what we have our data in. So we're going to use the CSE function of d three to convert our data into an array of objects. And that array is going to be that data variable that's going to be stored in the data variable. All right? Uh, so, okay, so here we go.

Speaker 1:          20:48          Uh, we're going to, I have not seen Dr strange yet. I want to watch black mirror. So now we're going to create a chart by combining our SVG and our data variable and data variable. What am I doing with this? Uh, that's not, that was true. There we go. Now. All right, here we go. Here we go. So now we're going to create our chart. Am I going to say bar chart instance? Tart instance. Thank you, alon instance in equals new impulse. That chart. Okay, we're going to create a chart and we're going to use the SPD. We just created an Svg to variable and our Beta and we just created with that function that they're charging. Since now we're going to set our bounds set bounce.

Speaker 1:          21:37          I'm definitely gonna close this function in second. Yup. Uh, let's see. Set downs and so far balance we're going to say, um, we're going to say, we're going to take that chart instance and we're going to call this set bounds variable. And we're going to say the length, width, height and size and, and where, sorry, the length, width and the location on the screen. And we want this to be okay. So that's going to be the balance. And then we're going to say, uh, we want to add our accuracy's right to our variable. So we're going to say chart instance and we're going to add our category accents. We're going to add our category access cause that's going to be our x axis. Okay. And that's going to be our passenger class. So this is a bar chart. It's a bar chart. I'm going to call it passenger class. And uh, that's our x variable. And we want to order it. We're going to add order rule when to order it by type. So the type of data that it is, we could order it by number by value. We're going to order it by type. So now we did the x. Now let's do why. So for our y access, we're going to say chart instance,

Speaker 1:          22:50          uh, instance. Dot Add PCT access, which is going to create our y axis will label why. And that's going to be a count. Okay? So that's a number of people. So kept, so the passenger class and then the count, those are the are x and y variables. So, uh, now we're going to have one, one more variable, which is going to be status. And that's going to show up whenever we hover over one of the bars. Still, we're going to add a series and that's going to show up whenever we, I'll show you guys in a second. We're going to call it status. Um,

Speaker 2:          23:20          okay.

Speaker 1:          23:21          And then we're going to say,

Speaker 2:          23:23          okay,

Speaker 1:          23:24          a green ball dot plot got bar. So we're going to call that. Lastly, we're going to add a legend. So like we can see like what's happening here. We're going to add a legend, uh, and we're going to say, where do we want this legend to be? So let's say chart instance, uh, and then add a legend so that x, location, x and y, uh, the size of it, and then what part of the screen, uh, it's going to be the right side. Okay. So, right. Okay. So that's that. And now that's it. And now I think that's it. Oh No, no. One more thing. We have to dry it. So let's say tart instance, you are the legend answer to file. You are the legend chart. And since dot draw 1000, so the size, oh, okay. Now let's compile this shit and see what happens.

Speaker 3:          24:17          MMM.

Speaker 1:          24:18          Okay. Hold on. Something's wrong here. Let's see. Uh, I have to close this, right? I think somebody told me that. Now let's see what happens. Uh, nope. Not yet. Not yet. Okay. So now line 18, age too close, right? Exactly. Thank you. Yes. Right. Okay. So there is a problem here. Let's see. Let's figure this out. We can do this. Oh, I see. I closed the script tag. I am 43 is right a capitol here. Let's see what we got here. Nope. What else is going to line 41? Uh, I've got this, uh, camel casing.

Speaker 3:          25:05          MMM. [inaudible].

Speaker 1:          25:07          Let's see. Let's see. Let's see. Line 23.

Speaker 3:          25:12          MMM.

Speaker 1:          25:13          Svg to charred container too, I think. Right?

Speaker 2:          25:22          Okay.

Speaker 1:          25:24          Um, and Oh, and then I need to go ahead and add a bunch of these, uh, semi colons. At the end of everything, right? So one, two, three, four, five. I forgot about that. I'm still an iPhone mode, guys. Okay. So I'll add that everywhere. And boom, boom, boom, boom, boom, boom, boom, boom, boom, boom. All right. It's not needed, but like, okay, uh, where are we here? Okay, let's see. There's something we can, let's just inspect this using our chromate specter. What's the deal here? Where are we? Okay, hold on. All right. Whatever. Let's just x out of that.

Speaker 3:          26:10          MMM.

Speaker 1:          26:12          So let me remove these just so we could see what's happening here. We remove these comments were at second pop up, up, up, up, up.

Speaker 3:          26:19          MMM.

Speaker 1:          26:22          And all right, so what's the O'Hare? Okay, so line 24 I need to remove one of these. There we go. Um, let's see. And then in console, line 23 we've got,

Speaker 3:          26:39          MMM,

Speaker 1:          26:41          we've got dimple new and uh, I'm closing it. Oh, I need to add that. Oh, 24. And so in line 24, I've got,

Speaker 3:          26:57          mmm.

Speaker 1:          27:00          Titanic. Dot. CSV. And then, um, we got this, we got this, uh, this is how, what, what is happening here? I've got d three. Dot. CSV. And then, let's see, let's see, in console. So if we go to inspect and then we go to console type hair chart instance, I've add category is not a function,

Speaker 3:          27:27          uh,

Speaker 1:          27:29          add category axis. There it is.

Speaker 2:          27:34          Okay.

Speaker 1:          27:35          Oh, oh, boom, boom, boom, boom. Yes. Okay, cool. So let's see what that looks like. All right. Boom. So that's a nice little animation, right? Let me refresh that. So I go to the loo. So yeah, it goes up like that. And uh, let's see. So what happened here? So this is our, this is our, uh, access. I do need a linter, but like I don't have time for that. So these are our three classes, right? And we visualize these three classes. Let's look at our code and what fit, what specializing. Okay. And, uh, these are our three classes and then we're ordering them by the type. We have a legend survived and died. And, uh, we have ordered it by percentage. Uh, and we have our legend here surviving died. I remember that third thing that I added at the end of the, uh, what was it? The ad series, the status that's just survived or not. Okay. So that's that. Okay, so that was a bar chart. And now we want to do a pie chart and this is going to be easier, right? Okay. So let's go ahead and do that. We'll add a pie chart now.

Speaker 2:          28:45          Okay,

Speaker 1:          28:46          let's do that. Okay. So this is going to be the same thing. So, okay. Except we're going to do now a, we're going to show the share passengers has a pie chart. And so what's happening here? Okay, so for this, um, we're going to, uh, just create a different, so that's the first step. Well created this and for the stiff, uh, we're calling to, Oh man, you guys are so funny. Okay, let's see what people are saying here. Uh, I am a pro because I use lives. I, yeah. Okay, so now give,

Speaker 1:          29:29          I did vote. I did vote for Hillary. I did. I did, but it's okay. It'll be fine. So now we're going to do the same thing for the passenger of pie charts. So let's go, let's go. Let's go ahead and do this. So the idea of bit of this is going to be called high chart container 12. Let's just call it 12, uh, for no reason. Okay, so now we're going to say we're going to create our header for it. I wouldn't say passenger share, uh, fi class wine. These are, there are three classes, class one, class two, and class three and class three. And we'll close our bit. All right, so we had that. And now, uh, okay, so now we're going to say, uh, let's write our script. So George script tag again stripped and then type equals what is the type a javascript type, right? Text slash javascript. Um, and now, uh, there we go. So now we have arts script type and I need to close that. And so that is, uh, okay, we, so we did that. So now let's do that. So we'll do the same thing. We're going to create our SVG. So let's say SVG 12, because it's the container 12, right? And we're going to say simple. That's the library. We're using the as a wrapper around B3 to create a new SVG title. We're going to get our element for the dom, which we're going to call pie charts. We're going to call it high. It's not peace charts, pie charts, pie charts, all right? Container 12,

Speaker 1:          31:26          okay. And okay, some of you guys are like Javascript crows and that's awesome. And you have very opinionated views on, uh, syntax to use and that's fine and keep doing it. But I'm just going to keep going because this is about data visualization. Alright? So tank line, 38, line 38, uh, change it because I don't see a reason to change it. Okay? If I need to now build a wall in python, that might be a future video, a big wall for python. So now we're going to say, ah, this is the data set. We're using the titanic train about CSV. So this is a different bid, other Dataset, right? And we're going to say, uh, or our function, uh, thank you for our function that we're going to use and we're going to turn our data into an array. So we're going to take that whole, that whole thing and we're going to turn it into an array.

Speaker 1:          32:26          And we're going to say, um, or close the well what? This, go ahead and start off with it close, right? So we don't have to deal with that. And we're going to say, let's create our target instance. Just like last time, we'll create a chart instance. Uh, and actually I only need to get these two examples. I'm not going to do the other two. These are two, these two examples. Examples are good enough for this, for this video. Okay? So you're going to see a bar chart and a pie chart, okay? And you see how we're working with two different datasets. So dimple dot chart, uh, I'm going to say FEG 12th, right? So that, that variable we just declared, uh, and uh, and now we're going to, uh, set the bounds for this chart instance. So set bounds, set bounds just like we did last time. So where's it going to be on the screen or at 60 and three 60. And then we're going to say, what else do we want to do this? So this is a part pie chart, right? So when you can make sure that, uh, we add our accuracies, I mean, there, there were still accesses in a, in a pie chart, but we, they're just, they're not like a horizontal axis. So, so someone said something about 44 pies. A Capitol P. Thank you. All right, so now Parkinson's dot add.

Speaker 1:          33:50          Thank you John. I appreciate it. Uh, add measure access. Okay. So for our measure access, we're going to call it p and p stands for passenger class. And we're going to, we're going to see what that looks like in a second. Um, so now we're going to add a series. So that's going to be the passenger class.

Speaker 1:          34:15          Thanks. Leandro, uh, passenger class. And that's going to be a, what we call all of it. They'll the whole series of that pie chart. So we're almost done with this and it's going to be that pie chart pulled up, plot up pie. Uh, so now we have two more things, two more lines for this. And then we're done. So that's going to be, we're going to add a legend just like we did last time. Add legend. Uh, and it's going to be, let's see, the election's going to be 520 where on the screen, 9,300. And he's our absolute values and we want it to be on the left side of the street. Uh, and um, well now we can drive. That was, that's it. Now we'll go ahead and draw it. Boom. Now let's see what happens when we visualize. Okay. All right. Let's see it and our browser. Okay. So something went wrong. Let's go ahead and inspect the console. As you guys have suggested, very, the pie chart container 12 selector did not match any elements. Oh, oh, that's a piece chart. Oh, I think someone said that. I was just like not listening. Okay. Boom. I charred container 12 does not match any insight though. It started high chart container 12. There we go. There we go. Okay.

Speaker 2:          35:48          Yeah.

Speaker 1:          35:49          38. Let's see, what did someone say about 38. There we go. Thank you. Thank you. Okay, so, um,

Speaker 1:          36:00          right, so what do we have here? I feel like this needs to be more descriptive, but we have three classes and they're, they're all displayed here. Right? So that's, that's kind of the same of what we have here, but it's a pie chart. Right? And if we reload it, we can see that animation for the bar chart, but the pie chart doesn't really have that. We could add that if we want it to, but we're not going to, okay. So those are our two uh, sorry variables that we've done. Those are our two charts and,

Speaker 1:          36:30          and yeah, so that was my short video, my short little video on data visualization. Um, I want to do more on this stuff. Let me know what you guys think in the comments later. Uh, so now, so that, that was it. That was, I know this was a shorter video then the past two times, but I just wanted to show you guys what this looks like a, and now I'll do a closing five minute Q and a and then yeah, that'll be the end. So, okay. So let me show you guys the code as well. Let me make sure you guys get a full overview of what's happening here.

Speaker 2:          37:06          Okay.

Speaker 1:          37:07          Right. So we did, I did it in a bar chart and a pie chart and it showed up just like this. All right. All right. And Yeah, so definitely check out dimple a and d three. There's a lot of great visualizations that people have done with d three. Um, I'll take three questions. So what was my first machine learning project? My first machine learning project was, uh, I worked at the robotics lab at Columbia and they needed someone who was going to, uh, take the code date already written in c plus plus and convert it to Kuda so it could run on a Gpu. And that was like way in over my head, but I was just like, yeah, yeah, I can do that. I was like, inside, like, no, but I just really wanted to be in the robotics club. So I was just like, yeah, yeah, I can do this. I said, that was really hard, but basically I took c plus plus and I converted it to Kuta and that was a huge learning experience. Um, so that was my first machine learning project and what the code did was it just, it was a classifier and then this was before any machine learning libraries were, was out there. So it was like,

Speaker 2:          38:10          okay.

Speaker 1:          38:10          It was just like raw, um, uh, co it was just like raw c plus plus no libraries. Um, so that was my first project, but I wouldn't ever recommend that as a first machine learning project for you. If I were to start today, I would start with probably like psychic learn just to like, like before even neural networks, just like a linear regression. Okay. Um, how to connect d three. Dot. Js. Okay. Second of three questions before we're done. Can you explain how to connect d three dot js with python? Sure. So, okay, so there's a front end and a backend in a web app. Okay. So in the backend you want to use a language that will be able to store data and manipulate it. So Python has a framework for this called Django. Okay.

Speaker 1:          38:59          Uh, so Django is a great framework for this python and Django. Look up Django. Okay. Dj A. N. G. O. Okay. So with Django, you could create all of this backend manipulation. So entry, right? So maybe you just just start off with a Django web app that just shows up a little text entry form where you type in a name and then it shows the name. Okay, that's it. And so python would let you do that and you add d three to that, uh, Django repository, like the, you know, via npm and, or not the NPM, but just like pop pop, pop in that Minda JSD three file that I showed you here in this public folder right here. And then you can just manipulate, uh, elements directly, uh, using d three. So anything that you send back to you could send forward from the Django web APP. You can manipulate with d three and show in any way you want. Uh, so the last question is,

Speaker 3:          39:53          mmm,

Speaker 1:          39:55          is it possible to generate this chart directly in python language using a Django PLO plugin,

Speaker 3:          40:01          uh,

Speaker 1:          40:03          to generate this tried directly in the pipe? Yeah, it actually, there's, there's a, there's a library call, I think it's called Pi d three or d three Pi, which basically lets you do that.

Speaker 3:          40:12          MMM.

Speaker 1:          40:13          So yeah, you can totally do that.

Speaker 3:          40:16          MMM.

Speaker 1:          40:17          And I can definitely prepare description of what to code along with me next time. All right, so cool. So that's all for this livestream. Uh, I want to do these once a week, um, and we'll see how it goes because this is definitely like fun, but it's also like really intense. So the goal is to do it every week. I'm definitely gonna Release My, you know, main videos once a week as well. So, all right guys, so that's all. So, uh, for now I've got to learn more about javascript. Uh, so thanks for watching.

Speaker 2:          41:00          Okay.

Speaker 3:          41:06          MMM.

Speaker 1:          41:08          Right. And this, here it is.