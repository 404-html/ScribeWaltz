Speaker 1:          00:03          Let's see, am I live? Is the question. Okay. I just want to start off by giving a quick shout out to my friends. Oh, on, on Youtube. She makes some cool fashion and illustration educational videos. So check her out and link to her will be in the description. Anyway. Hello, we're all, it's Siraj let me mute that and it's good to see you guys. Glad to be back back in black. Not really black, but this is kind of like a shiny, if that's the color, it's not, anyway, I'm in this new space so that I'm, I'm happy about that. That's my picture. I just took her myself and I'm just kidding. That's just something that's been there. Uh, but yeah, I mean this is like virtual reality space right now. I've just moved into, so there's going to be a lot of cool, crazy videos that I'm going to make with mixed reality soon.

Speaker 1:          00:53          So get hyped. Uh, let me, let me refresh this page so I can see your comments because right now it's loading and I don't like loading. I don't like loading. I want to see, there we go. Okay. So now we've got some people. Okay. Wow. Hi Guys. Wow. Everybody's in the room right now. We've got 79 people. Um, so I'm going to start off this. It's 1:00 AM in India. Okay. Sorry guys, about this timing. Well, not next time. We're going to do it in an hour earlier. So for everybody in India and do an hour earlier, okay, next time. Anyway, so, uh, hi guys. Uh, let's do a five minute Q and a and then I'm going to explain the concepts and then I'm going to, uh, we're going to code this thing. And so what we're going to code this time is it, it's a python script that's going to pull 20 of the most popular words from a Wikipedia article and then it's going to display the frequency count of all of those works.

Speaker 1:          01:48          And this is going to be useful. And I'm going to talk about this. Why are we going to do this in a second? But first of all, five minute Q and a. Here we go. Uh, hi Sudarshan. Thanks Ted to Haas. Um, and Josh, this session is going to take 45 minutes. Um, if you want to do a masters in CS program at, uh, at Columbia or any school, uh, the rec prerequisites would do a computer science undergrad degree, um, cafe or tensorflow. We want to use tensorflow because cafe, uh, I actually have video on this called deep learning frameworks explained to check that out. All right. Uh, hey everybody. Where do I do my hair? I, uh, so there's a sky who, uh, he also does, uh, Travis colonics hair. Who's the Uber Ceo? I didn't know that. I just went through this so long. Like, Yo, what's good?

Speaker 1:          02:43          And then he's like cutting and he's like, oh, I do. Travis is, I was like, oh my God, I need to keep you, cause that's awesome. So that, that's the guy, his name is Antony. Anyway, okay. So, um, can I build my own neural network from scratch and dependencies? I'm going to do that in a later video. Um, if you want to do a master's in deep learning at Montreal, you should totally do that because that place is becoming a super cluster for machine learning research. Okay. You've got Yoshua Bengio over there and that guy's a g a bunch of cool stuff. Um, anyway, are you going to use beautiful soup? Yes, I akuno. Um,

Speaker 2:          03:20          okay.

Speaker 1:          03:20          How difficult is it to get into a Master's program? Uh, well it depends on the school. For the one in Montreal, I would say it's going to be pretty, pretty difficult. Yeah. I mean it's, it's, it's going to be world class, so the harder, I mean, the, the, the better the quality, the harder it's going to be too sick to get in. What's my favorite APP in machine learning? Um, wow. Uh, probably just chatbots in general. Like I want to see better and better a more human like chatbots. I'm really excited for that. Got Any tips for getting into deep learning research? Um, I would try to find a paper that you find to be interesting and replicate the results to find the source code and then replicate the results maybe in a different deep learning library or your own virgin. But if you can do that, uh, that would be a great demo coat to show a professor and say, hey look, I replicated this code.

Speaker 1:          04:11          I can do this stuff. And you know, a lot of the times, enthusiasm plus a resume on get up, it's enough to get it. Is it wise to go in deep and deep learning with very minimum machine learning experience? Uh, yeah, because I mean, machine learning is just a bunch of statistical methods of predicting the future using existing data. Deep learning is taking what's existed since the 50s. A neural network that's been around and applying it to huge datasets and lots of computing power. And guess what? Deep neural nets outperform almost every single machine learning model almost all the time. So you don't even need to really think about other things. If you can do other types of ml models, if you can do deep known as well, can you suggest any tutorial from machine learning? Noobs I would say my channel, my channel is the best stuff out there. Download the code, make sure to download the code associated with each video and run it locally. Okay. Um, any videos on Basie and approaches? I actually do have one on that is, it's called one shot learning. Um,

Speaker 2:          05:13          okay.

Speaker 1:          05:13          What do you think would be a good approach for doing sentiment analysis for plagiarism? Uh, sentiment analysis for plagiarism. Uh, I don't think that's actually sentiment analysis. That's, that's like, um, that's like Red Cross reference checking. There's, there's, there's an API for that actually, like just a Google plagiarism. All right, one more question before we get started.

Speaker 2:          05:33          MMM.

Speaker 1:          05:36          What is the most impact a chat bot has created to date to the best of your knowledge? Uh hmm. I think that the best one so far has been the most impactful chatbots so far. I mean, aside from Siri and Google now, uh, probably like, uh, in terms uses, like in terms of people using it, probably like sports, even though I'm not a sports fan, like sports chatbots because it gives you the game game time score. People who don't do this, like, look at chatbots. I've been using this stuff anyway. Uh, so that's had the most impact. Anyway, so, okay, so that was it for the Q and a. Now we're going to get started. One more. Actually, one more. What if I'm 16? If you're 16, you're at a perfect day. Should get started with this stuff. Don't hesitate. Don't wait, get started. You're going to be awesome by the time you're 21 plus.

Speaker 1:          06:26          Okay. Anyway, so now we're going to get started. What we're going to do in this video is we're going to write a 50 ish line script in python and that's going to get 20 of the most popular words from a Wikipedia article that we, that we choose. And it's going to list the frequency of those words in terminal a in terms of word count. All right? So that's what we're going to do. And uh, it's going to, uh, the 50th words. And, uh, the reason we won't, we won't, we even would want to do this is because recommender systems, uh, could highly benefit from this. We could have a recommender systems that, you know, if you have a user who like lights, you know, that meant, for example, we can then query Wikipedia yet the top 20 words in the Batman article and then show the users suggested things that they would like because, you know, it's related to Batman.

Speaker 1:          07:16          We could build chatbots, right? So if a user says something to Chat Bot could then pour your Wikipedia, get 20 related words, what the is feeling, and then, uh, use those to create an intent of what the next thing the chat Bot is going to do. Um, could do sentiment analysis. We could do data visualization, uh, we can do market research. There's a lot of possibilities. But the basic fundamental step here that I'm trying to teach in this video is how to scrape data from the web. Okay. That's what we're trying to, we're trying to scrape data from the web. And to do that efficiently in python, uh, is going to be a relatively easy, and we're going to get started. Okay. So here we go. I'm going to start to coding now. So let's see. Screensharing time desktop. Start the screen share. All right.

Speaker 1:          08:11          Boom. And let me show myself. All right. So here we go. With this. Hold on. I gotta make sure that I'm visible. I'm visible because I liked being visible. Unless her, my ex girlfriend who I just broke up with. Oh, I don't want to be miserable to her anyway because I don't have time for that. I have to do this. Okay, here we go. Here we go. Hold up. Move out of the way. Okay. Okay, so now, so here's what, here we go. So the first thing we're gonna do is we're going to import our dependencies, right? So let's import our dependencies and then we're going to, uh, uh, writer script, right? So let's import our dependencies. Uh, the, so the first thing we're going to do is, let me make sure this is a, you guys can see this, right? Like this is a good visible code. Like this decides this is good, right? Let me know. So, um,

Speaker 3:          09:17          okay.

Speaker 1:          09:18          The first dependency we're going to import is a beautiful suit, right? Beautiful suit is going to let us, uh, it's going to pull data out of html and it's going to, uh, it's going to an XML and so we can, we can parse it later. So when we pull the data from Wikipedia, it's going to be html and we want to parse it properly. So that's what beautiful soup is. Gonna help. It's gonna help us do that. The next one, we're going to import this called requests request gets over 7 million downloads a month. It is like the Python Library for, uh, dealing with the wet, like pulling data from the web, pushing it to the web. Next we're going to import re, which is going to help us perform regular expressions. Regular expressions are they describe a search pattern. So if anything we want to do to a word, like remove the second a character of a word every time, or add a period at the end or remove a space, that's what regular expressions help us do.

Speaker 1:          10:12          I'm going to make this code available later, so don't even worry about it. All right, so now we're going to import the operator. A module operator is basically a wrapper around functions that already exist in python, like addition, subtraction. We're going to, that's what offered is going to help us do. It's just a more readable way of doing these things for the sake of pretty supportive. Now we're gonna import dates on which is going to help us hearts are Jason, which is what we're going to retreat from the web. It's going to be Jason. She's a format for pulling data from the web. Okay? Uh, and now we're going to import tabulate. So what is tabulary calculates is it only has one function. That's it. That's the only thing this library does. Tabulate is going to take a list of lists and it's going to create a nice pretty table in terminal.

Speaker 1:          10:58          Where are we going to display all of our words? Okay, so that's what tabulate does. Thanks guys. Uh, and so now we're going to import six. We're just going to let us make sense. Some calls, uh, which, uh, specifically in this is going to let us get the user input, which is the user input is going to be what's the Wikipedia article that we want to get data from? Right? Okay. So that's just, uh, and now we're going to import the last library is called stop words. Well, what are stop ports? Stop words are words that don't matter. And natural language processing. We always want to remove our stock boards before we perform anything on our data, whether it's machine learning or you know, cleaning, whatever stop words are words like Duh. And to act and stop words. This libraries. Now let us remove all this software. It's at once. Okay, so that, those are our dependencies. Let's go ahead and get started with getting our data from Wikipedia. Okay? So the first step we want to do is say a quick are linked to though we could pee at Apr, right?

Speaker 1:          12:00          So here's our thing and it's going to be his variable. And I'm going to paste in the link right here cause I already have the link. Um, okay so here it is. So let's go over to this link for a second. So wikipedia.work, s w slash API or a PHP, that's going to let us access the API. The format is going to be Jason. So that's the first parameter. Um, the next is the action is going to be called query. Because we are querying that data from the web. The list type is going to be search. What does that mean? That means that whenever we type in a word like that, men, it's going to search for all the Wikipedia articles related to Batman and it's going to listen. And then the last parameter is going to be sr search, which is what we're going to add.

Speaker 1:          12:44          We're going to, that's going to be the name of our article, which we're going to add to this string later. Okay? So that's the string. Okay. So it's going to be a little long. So it's going to go over the page. If you want to see it again, just let me know. Okay, so that's a string. Let's make one more link, a Wikipedia link. So this is just the link to the Wikipedia page. Why do we need to as well? I'm going to explain that in a second, but right now, let's just type this in. Uh, in.wikipedia.org/wiki. All right, so those are our links. Uh, and now, uh, yeah, let me put the URL in the chat. That's a great idea. Let me just, you're watching this later. If it's recorded on any new or about it, just to me through seconds. Boom. There we go. Okay, so let's, okay, so that's the data from Wikipedia.

Speaker 1:          13:28          Oh, so those are our URLs. So now let's get the user inputs. So let's say, um, at the length of the user inputs, uh, is going to be small, then go ahead and print, enter a valid strength because you're not, you're, you haven't, you haven't typed in a valid string. And then we're going to exit the program. So this is an error. So if a search word is too small, throwing an error. Okay. And the next thing we're going to do is get to search for it. All right? So what does a search word, so the user typed in inter-terminal what type of uh, what type of article they want to search for it. So we're going to store that into the string query variable and we're going to retrieve that using the [inaudible] function and are the six modules, r and d function as the first parameter, okay?

Speaker 1:          14:17          And now we, we also want to say, by the way, this is what this is going to look like, right? So W so whenever we type in, you know, whenever we run this gonna look like this python made up by the name of the article and then yes or no. Okay? What does that mean? I mean this is going to pull all the top 20 words from the Batman article and yet, or no, just means do we want to remove the stop words or not? Okay? That's what it's gonna look like. And we want to say yes. So we want to say if the length of the second argument is greater than two, then yes, we want to set the search mode true. Which means remove stop words. Oh, and this needs to be at the capitol. Right? Okay. So next thing is else.

Speaker 1:          15:03          Uh, why don't I apply for a job at Google? I mean like, I'll think about it, but like I'm not leaving you guys. I know I've built something to awesome. Fair. It should leave you guys. Okay. So, um, so this is going to remove the stop words if we, if we want to. All right? So let's go ahead and create our URL. A Url, right? So you were all at this point to hold on URL out of the way. Okay. So, um, why are there so many Indians here? Well, because Indians are really into technology and Indians and up and coming country. Okay. So here we go. Wikipedia Api link plus spring query. What did I just do? Well, we took our spring query and we added it to the end of that link that I just sent you, right? Add it to the end of search.

Speaker 1:          15:51          So we've basically, the computer science terminology is contaminated. You can catenate it a strip. Okay, so we clear your up. All right, we're ready to search for Batman. Okay. We have our URL and how do we want to make this? Um, and you know, Bronx was awesome to New York City is awesome. I want to spoil that. Okay. So how do we want to make our reflects what we want to create what's called the try block and try and accept block. Why? Because in a tribe except blocked off, you try something and if it doesn't work, you make an exception. And guess what happens whenever you deal with the web exceptions, you want to handle exceptions, right? That you are, did you type in the wrong URL? And this is a server down is your [inaudible] provider APP. Did you not pay your monthly bill? All this stuff, it doesn't work.

Speaker 1:          16:37          So anyway, if anybody's late, don't even worry about it. All the code is still here. Okay? You can see it all from the beginning. So now let's go ahead and write out our, uh, response. We're going to make our query now, right? So we're gonna use a request library to get the Url. Okay? So that's in a store, that data in there, it's going to store our article in the um, response variable. And now we're going to use the Jason module to load the data from that response. And we're going to decode it because guess what? It's not in the right format. And how do we do that? We say UTF UTF eight, which is the format that we want. Okay? So now are uh, stuffed is in this data article. Um, I'm going to add the rec rejects in a second. So now we want to format this data, right? We want to format the data. Me just removed it. It's like get out of the way. Here we go. Um, all right, so now let's, let's format the data. And by the way, guys at the youtube space in La was awesome. That was an incredible experience. I feel so inspired to, to teach you guys a lot of stuff in to core cool videos. Okay, so we're going to format this data, uh, using good Jason Module.

Speaker 1:          17:55          And we want to get that. Um, wait, wait, hold on a second. Uh, Jason Dot. Loads responded content. Actually, I, I just think that, what am I doing? I didn't, anyway. Anyway, anyway, uh, so now we're going to say Wikipedia page tag. Uh, and we want to say, let me, let me, let me just write this and then I'm going to query, this is a little search and that's going to be here and I'm actually going to show you guys what this looks like in the browser. Okay. In the browser. What are we doing here? Well, we want to get that Wikipedia page tag and then we're going to, we're going to create our new URL with that. Okay, so it's going to be URL equals Wikipedia length. That was the one that we just made plots the Wikipedia page tag. Okay. So let me show you guys exactly what I mean by this. Let's take this link that I showed you. Okay. And let's run this in our, our browser. Okay. So let me just move this down here. Boom. If someone told me how many people are viewing cause I can't even see because it's like froze or something. So what happens here? I'm going to take that, I'm going to add, let's say that man to the, what does that look like?

Speaker 1:          19:14          Okay, this is just, it's going to show all the articles that are related to Batman. Um, one 80. Okay, cool. This is going to show all the articles related to Batman. It doesn't actually show the Batman article, it just shows all the articles related to that. We're going to pick the first one from this, like see it like lists of Batman, comics, adventures of DC come, you know, all of these are possible articles. Well, we're going to take the first one, which is going to be Batman himself. And that's the article that we're going to retreat. So this first link doesn't actually retrieve, um, the, the stuff that we need, right? It, it just, it retreats the list of possible articles. I should use the Jason, your plug in. I have that in chrome. Um, so anyway, okay. So, so we, and so that's what this does.

Speaker 1:          20:00          This is what the Wikipedia page tag variable stored. It's going to store that first link and then we're going to create our new URL to that Wikipedia page and we're going to pull the data from that. So this URL is going to contain all of our stuff. Okay. All this, all of our words, all of our paragraphs, everything. Okay. So that's are you around? Um, I'm using safari because like, I mean, you know, hangouts as crazy. It sometimes works on chrome sent him 2000. You never know. Okay. So here we go. So it career, new euro. And now I want to get the list of words from that page. So page word list equals get word lists. You are at, I haven't written this, so that's going to get the list of words on the page. I haven't written this method yet. And guess what? Whenever I write python, um, I don't, uh, right. My helper methods, helper functions first I write them out as if they already exist. Then I go back and I write those helper functions. Okay. And that I think that, and I think that is a, that is great programming practice in general to just assume what you want your function to look like. And then, right. Okay, so get word list.

Speaker 2:          21:10          Okay.

Speaker 1:          21:10          Url. All right. And so now we have a word list. Now we want to create a table of word counts of word counts. All right. Have I met M and? M? No. Okay, I'd love to do those. Okay, so now create table of word counts. A page, word counts equals creates a frequency table, page, word, what? Step variable. We just did. So create frequency table. Another, um, another, uh,

Speaker 2:          21:42          okay.

Speaker 1:          21:43          Function that I haven't written yet, but I will. Okay, so that's going to create a frequency table of words. Okay. So now we've created a table. Now we want to sort these words right now we want to sort sort, sort of sorted, so we're gonna sweat sore that can be sorted. Word frequency list. And we're going to use a sorted function of python. It's a default function to sort this to say page word count dot items. We're going to get all those items to the page where, and then we want to get the key. The key is going to be the operator, the item getter. So that's what operator comes in. It's going to get, the first element has been reversed it so that it's sorted in order of,

Speaker 2:          22:25          uh,

Speaker 1:          22:27          sorted in order of a frequency. Okay. That's what this does, sort of frequency list. So now we want to remove our stop work. Remove. Stopped. All right, so now we're gonna remove our top roads. Okay. So, um, if, if remember that variable up there, search mode, that that's what Paul does. Like do we want stop work? They're not all right. And,

Speaker 2:          22:51          uh,

Speaker 1:          22:53          no, I answer all you guys. She's our shine whenever. I can't and don't take it personally. All right. Um, you know, I'm in the zone, so, okay. So, um, I know my phone is vibrating. Thank you. I need to, who's there? Oh, it's my sister. So he's just like, what's up? Anyway, she's kind of, you know, just kind of a princess, but like, you know, anyway, here we go. So remove stop words. Uh, where was I? Oh Man, this is fun. Okay, here we go. Uh, I say, here we go. A lot dude. Get in the zone. Auto Zone. That was hilarious. And isn't this, isn't this painting crazy? Like this guy is on it? I mean, I like it. Anyway, that's why it's there. So let's remove our stop words. So we're going to say sorted word frequency list. So we're going to story, it's in the starting word frequency Liz frequency list. And we're going to remove stop words and that is where the red x comes into, uh, in a second. And I'm going to remove stop words. Okay. So check that out.

Speaker 2:          24:03          Okay.

Speaker 1:          24:04          There is actually, I'm sorry. So someone asks if stop words works for Spanish. Yes, it does. It works from a bunch of languages. And um, I'm going to show you, uh, it does work for a bunch of languages. Okay. So if search mode sorted frequency list equals remove stop words. Okay. So I'm just making sure I have that. All right, so remove stop words and now we want you sum the total words to calculate the frequencies. Okay. Let's sum the total words to get the frequencies is so total words, some equals zero. All right, Dan. Oh, OCT is my friends from high school who ended up blowing up on youtube. So that's awesome. Just for key. So, so we're going to calculate the frequencies of be forward. So in the sorted,

Speaker 2:          25:01          okay,

Speaker 1:          25:02          I ain't got time for that. All right. Um, for key value in sore knee or frequency list. Well, let's get the a word some and then we're going to say the total words, some cluster. All right. Um,

Speaker 1:          25:28          what is that doing it? Same for all of those words in our list. Let's get the, the sum of all those words because the value is going to be the frequency count. Okay. So then, um, so now we just want to get to 20. Just get the top 20 words. That's all we want to display in our table. Um, we want to get the top 20 words. All right. What is the key on line? What is about your key on the line 43, uh, item. Get her. It's going to be that first element in the list. So just get the top 20 words. If the lamps of the sordid word frequency list is greater than 20, um, is greater than 20, and we don't want it. So we just want, we just want the 20, the first 20. Right. So let's say sweating work frequency list, and guess what? I'll till 20. That's what that means. Up till 20. Um, uh, no, I, I'm not jealous of Dan. I'm a huge fan. I mean, he gave me a shout out and one of his videos and I gave him a shout out too. It worked out great. Um, who do I get jealous of that? Do I get jealous? I get jealous of like, um,

Speaker 1:          26:39          if like I have a girlfriend and she likes other guys. Sometimes I'll get y'all some that anyway, but that's the extent. I don't really get jealous, look like celebrities anymore. I used to though. Um, I just feel like awesome. Good job, man. All right. So we were just going to get the top 20 words and now we want to get to create our final list, our final list, which is going to contain our words, um, um, words plus frequency counts and plus percentage. Like what percent of all the words to these workmen. Okay. So here's our last part. Okay. Um, mister something in line 50. Uh, you're absolutely right. Thank you so much Robin. Okay, so here we go. So final list. We're going create our NP list a battery, start to learn python, learn, learn, python the hard way. And My town for key value for every key bow you can hear him, the story worth frequency list, um, get the percentage value.

Speaker 2:          27:42          MMM, okay.

Speaker 1:          27:44          And

Speaker 2:          27:47          MMM,

Speaker 1:          27:48          we'll say now you times 100 divided by total words, some. And so what we're doing is we're populating that the percentage frequency that these words are showing up or by multiplying by a hundred. Right? Um, and then finally we'll add it to our list as the word. That's the key, the value and the value, which is a number of times it shows up in the last one is the percentage, like what percent of words total is that? Okay. And then finally we can print out the headers. All right, so here we go. So we're going to print headers and what are the head is going to be? It's going to be in order. It's going to be all right. Um, why don't you see one final list.

Speaker 1:          28:42          Oh, thank you. Thank you. Thank you. Good call. Heteros word. We are creating skynet. Absolutely. So get ready guys, because the world is going to not come to an end. We're not creating skynet. Don't worry about it. Everything's going to be fine. It's all good. It's all good. As long as I'm alive, it's awkward. Right? Okay. So frequency. Um, if you want to take me out, I'm trying to just like, I'm not afraid, I'm not afraid. What about a dope ass beat? It was all right. Here we go. Frequency. A frequency presented. Okay. So those are our three things. Frequency, percentage.

Speaker 1:          29:27          All right. So that's it does it. So that's it. Okay. That is it. So that's going to print it out. And here's what it's gonna look like, by the way. Right? So if we win, it will say, let's say python main dot. Py, and we want to say boom, boom, boom, boom. And we're going to go all the way down, like, okay. Just like that. And then yes, the code is going to be available to download. Let's see what this looks like. Would say python maned up high. And what is someone shout out an article that you want me to look up. Okay. And then I'm gonna look it up and we're going to get the 20 words for that article. Whoever says the first word. Okay. All right, here we go. And it's gonna be, it's gonna be me. What did install Gentoo. Okay. And say Gentoo. All right, great. Super Smash a Trump. Oh No, hers. No. No. Okay. God. Trump. All right, Trump. I see Trump. And do we want to remove stop words? Let's do it. Hold on, hold on a second. What's going on here? What's going on here? Um, hold on, hold on. Let me see what's going on.

Speaker 2:          30:50          Yeah, there we go.

Speaker 1:          30:57          Uh, that wasn't a lot of words. Let's try it. Batman.

Speaker 1:          31:04          That's better. Okay. So here we go. Let's try Jenga actually. Yeah, that's wrap. No Pokemon. So what's happening here? Okay, so let's take a look at this. We have the top words, right? POKEMON games release generation. Um, and then we have the frequency of all those words. It's showed up 253 times, and it's 7.4% of all words. Okay. Once we do this, we can apply this to a lot of other things like NLP. We can, uh, we can apply this to salmon analysis and we can recommend things for people. We can do market research, we can build chat bots with this. Um, I know Pokemon is the most frequent word at this Wikipedia article. I know that's kind of weird, isn't it? But that is the case games. The second one. Um, and I'll do one more, cause you guys are really into this. It's like how arrangers, I don't know. Did I?

Speaker 2:          32:03          Okay.

Speaker 1:          32:04          Maybe it's like, actually I think I need to do like under Hauer underscore rangers. Yes,

Speaker 1:          32:11          there we go. So Rangers is the most frequent work, right? Isn't that cool? Um, so anyway, okay, so that, so that's that. Um, I'm going to upload this code to get up and um, it's going to be available for you guys to look at and I'm going to close this session out with a final five minutes of Q and a and then we're good to go. And I'm going to do a live session next week too. And uh, definitely comments, what kind of live sessions you want to see. And it's, I'm definitely going to keep that in mind. Okay. So here we go. A five minute Q and a go. Is there a way to remove duplicates? Singular and plurals? Um,

Speaker 1:          32:54          yeah, yeah, there is a, you would just use rec regular expressions. So you'd want to remove the s at the end of a word, which would mean it's plural. Right. And that's, that's basic, I mean, some words. Um, anyway, uh, thank you. I'm glad you guys loves me. I love Jesus too. And where are, where am I right now? I'm in San Francisco, California. Uh, hopefully Jesus doesn't love Trump, but everybody deserves love in some way. How am I doing? I'm doing pretty good. I'm, I just got back from the youtube space. La Right. Was there for a week. Youtube flew me out. I won this contest next up. And that was crazy because it was like 20 creators and they were amazing people. They were just, they were so they were just, they were leaders and like it was, it was cool but I was like the weird ones, like no one understands code. Like, cause like I'm in my bubble here in San Francisco, right? I'm just like doing machine learning all day and I'm, I'm not even thinking about making videos about like the format in data or like how do you get out? Because to me that's, stuff is so simple, but guess what? I'm in a bubble. So like that's the biggest realization I got when I was there. It was like, oh my God, I need to make

Speaker 1:          33:58          much more accessible videos because like those people like did not, they were smart but they just didn't get what I was doing them so specialized. So, so it was awesome. I'm doing pretty good. I am newly single and I'm focused on my work and I'm trying to just become, you know, awesome and like do physical activities and have interests and have a lead, a busy, awesome dope life.

Speaker 2:          34:24          Okay.

Speaker 1:          34:24          Um, so anyway, I'll take three more questions. Can I make a video to guide beginners? I mean, I think, I think that's like all my videos, but I'm going to get better at that. Trust me. Um, what is your source of income? I mean, there's like Youtube ads, which isn't really much. Patrion is really the biggest one. I can get clients who come in and ask you to make videos for them, but like I, I just, that takes away from the videos I make for you guys. You know what I'm saying? I don't want to just make videos for other people, so I'm trying to just focus on this channel. And that's it. And the, and the way I'm supporting myself is youtube ads and patriots fan and it's not enough yet, but like I feel like it will be eventually. I'm just going to keep doing one more question and then we're good to go. Uh, I am single with this hair but it's all good. Like it's whatever. Um, do you know anything about bioinformatics? Uh,

Speaker 2:          35:20          okay.

Speaker 1:          35:21          Bio Informatics. I mean like some like a fingerprint reading and an eye scanning. So actually I tried to write a paper called proof of identity, the way to prove your identity online in a decentralized way without a central server. I tried writing that paper but it's just, I just couldn't of a way to do it. I thought about it for six months and one Bennett look up that guy. That guy is a genius. He invented the interplanetary file system. He was like advising me but like I couldn't do it. But yeah, that was my, that was my foray into bioinformatics stuff like using ice scanning to prove that you are a unique individual online without it being stored and server. We still can't do it, but if someone, if someone were to able to solve that problem, proof of identity, then we could have online entity that no central government controlled, like your online passport, which would be awesome. Um, and I'm sure the blockchain there and there's, there's still ways of okay doing that, you know, high scanning and things like that. So, okay, so that's it. Thank you guys so much for watching. I'm, I want to do more of these live videos, um, and I'm going to upload this code and I love you guys and, uh, thanks for watching and you guys are the reason I do this. So, uh, for now I've got to get here like this guy. So thanks for watching. No love you guys.

Speaker 1:          36:54          And now I awkwardly try to close the tab while you guys watch. Here we go. Where is that? Anyway? Where is it? Wait, where is it? Oh, I may have minimize it. Okay.