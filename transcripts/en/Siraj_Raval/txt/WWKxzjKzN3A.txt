Speaker 1:          00:00          Visualize quantum mechanics. Hello world. It's Saroj and data visualization is one of the most exciting parts of data science. It's the art of turning raw numerical data into a visual representation that actually lets people understand its significance. We're going to visualize a medium blog post text dataset using the Plotly python library and in the process learn about the three fundamental types of data visualizations, relationships, comparisons and compositions. We're already at the point where the amount of data in the world is too much for humans to analyze without proper tools.

Speaker 1:          00:54          We need algorithms to help us make these huge datasets consumable and presentable. Native visualization allows us to instantly scanned through massive amounts of data and derive patterns from it. These patterns let us derive insights and then we can make decisions based on those insights. Data visualization involves math, science, psychology and design. Hans Rosling, a data visualization expert, one set that most of us need to listen to the music to understand how beautiful it is, but often that's how we present statistics. We just showed the notes. We don't play the music. Data literacy means understanding those notes. It's knowing the difference between concepts like means and medians and all sorts of things like that and when to use one over the other. But visual literacy is the music itself. Data leads to insight, which can form a narrative and narratives are what helped make a data story.

Speaker 1:          01:54          Visual literacy asks questions like, is this chart memorable? Is it beautiful? Is the meaning clear? Will it make me more attractive? Yes, it's important to understand how charts can help us specifically what charts say, what charts mean and what charts do. These are three distinct categories. All charts say things they're creators intend and many say things that were not intended. A well designed chart let's US interrogate a dataset very closely. This can be thought of as what a chart says explicitly and we optimize for this by choosing the charting method that maximizes the ability to display and query data. Precision accuracy and recall are all qualities that are aligned with this approach, but charts also make implicit statements as communication mediums. Charts are subject to rhetorical devices and stylistic form over content. For example, orienting a bar chart downward and shifting its color can reinforce the subject and theme of a chart.

Speaker 1:          03:02          And this implicit channel of data visualization can be even more powerful than the explicit channel. There's also what charts mean and to consider there's an intentional meeting, but there's also a historical, cultural and contextual meaning. We've got to take this into account as we visualize data, we need to have a clear idea of the audiences for our charts and the context around the data in order to communicate a cohesive story. But the most important thing about a chart is not it's aesthetics or even the technology used to create it. It's the impact. Impact is what a chart does. A well-designed chart is one that's optimized for impact. It allows us to make very important decisions with absolute clarity. Before computers, data was found in books and manuscripts in order to make charts from it. Statisticians, how to use tools like rulers, dividers and protractors. Nowadays we have data visualization tools that are orders of magnitude more powerful and easy to use.

Speaker 1:          04:09          So let's look at three of the most popular tools starting with the Jupiter notebook. This interface has fields for code input, markdown input, and has the ability to run code to deliver visually readable images based on whichever visualization technique is chosen. Google's online colab environment and Kaggle's colonel environment both mirror this functionality. They're both backwards compatible with existing Jupiter notebooks, which allows us to use python without having to configure our installation environments locally. It all happens in the cloud including dependency installs. My dependency of choice for visualization is Plotly. Plotly is an open source library built on Plotly dot js which in turn is built on the Popular Javascript Visualization Library d three dot. Js. We can use a wrapper on Plotly called cufflinks, designed to work directly with pandas data frames, so our stack will look like cuff links on top. Then Plotly, Holly Ijs, then d three and what that means is that we get the efficiency of coding in Python with the worldclass interactive graphics powers of d three this lets us create charts in a single line with interactive elements for investigating data.

Speaker 1:          05:25          Many options to explore and easy customization for a final presentation. What more could a data scientist ask for? Will you get out of here if you don't want to code? However, there's also tableau. This is a drag and drop tool that's especially effective for delivering interactive data visualizations for the results derived from big data operations, deep learning algorithms and multiple types of AI driven apps. It can be integrated with AWS, my sequel I dupe. It's a very versatile tool for creating detailed graphs and it's used widely in the industry today. There are a variety of products available including a public version that's free to use. Another underutilized tool is Google charts. It's free and offers a massive variety of visualization types that we could spend hours browsing through from simple pie charts all the way up to multidimensional interactive matrices. There are also many adjustment options, which makes me happier than for WRAL since it renders the results in html five and Svg.

Speaker 1:          06:33          It's compatible in any browser and because it combines data from multiple Google services like Google maps, it allows us to produce interactive charts that use real time data and can be controlled using an interactive dashboard. So that was just three examples, but there are a lot of very powerful data visualization tools out there and when we're using any one of those tools, it can be tempting to use the many different options available in any of them to make our visualization as mesmerizing as possible. But this isn't the best idea. For example, let's say we're a Mexican wine company Olay. We have a wine called Latrobe, Alberta. We want to compare the average price of our wine with the rest of the world. If we create a bar chart of a wine price data set, we can add all sorts of features to our bar chart, rotated texts, borderlines grids, titles, rainbow colors.

Speaker 1:          07:31          But when you look at the bar chart, pay attention to where your eyes land, what attracts your attention first here, notice how there are so many things screaming for your attention. It's hard to know where to focus. Now let's remove the colors better, right? But notice those grid lines are still distracting. So let's remove them too. Now it's much more clear, but this rotated text is probably making you turn your head to read this. So let's just rotate the bars and turn this into a horizontal bar chart. Now we can immediately tell which country has the highest wind price. And since we're comparing our wine to the rest, let's very selectively use color here. We have to tailor our graph to what we were really trying to convey. But now we finally made a chart that immediately makes our points to a first time viewer.

Speaker 1:          08:24          As you can see, visualizing data is both an art and a science. So let's cover the three basic types of visualizations we can convey. Our relationship, a comparison and a composition. A relationship shows the connection or correlation between two or more variables through the data presented like the market cap of a stock over time versus the overall market trend. If we have two variables we're comparing, we can use a scatter plot. A lot of real world data has a time element. So if we plot out the evolution of these variables over time, this scatterplot can let us see how these variables have changed. Notice how in one line we got a nicely formatted time series x axis added a secondary y axis because our variables have different ranges and added in the titles of the Dataset as Metadata. If we have three variables, we can set the sides of the plotted points to change in proportion to the magnitude of a third metric.

Speaker 1:          09:27          This bubble chart lets us visualize the relationship between more variables easily. Oh and don't forget about correlation heat maps. This can show the relationship between many variables all in one chart. The second type of visualization is a comparison. This sets one set of variables apart from another and displays how those two variables interact, like the number of buyers of five competing showerheads in one month. There are many different types of charts we could use here. The wind dataset chart we use beforehand was one example of a bar chart. We can categorize the type of chart we use by whether or not we are including time as an element. Then further dividing by variables, categories and periods of time. Line charts are a really easy way to compare many categories of variables that change over time together all at once and with proper color coding they tell a story with little effort and the third type of relationship is a composition.

Speaker 1:          10:31          This collects different types of data that make up a hole and displays them together like the different search terms visitors used to land on our site or how many of them came from links. The canonical example here is the pie chart showing the total data set as the sum of its parts be as some feature that we select. But if we want to demonstrate time as an element in our Dataset, we can use a stacked chart like a stacked area chart or a stacked column chart. Again, it shows how pieces of data all come together to make a hole. Now I do want to mention that there is actually a fourth type of visualization and that's a distribution. It lays out a collection of data to show how it correlates and helps us understand if there's any interaction between the variables like the number of bugs reported during each month of the latest ios developer preview over 9,000 but we learned about distributions last week so I won't go too much into it this week.

Speaker 1:          11:35          When we make these plots in a notebook, notice a small link on the lower right hand side of the graph that says export to Plotly. If we click that link, it'll take us to chart studio on online offering. That lets us touch up our plots for a final presentation with features like annotations and color options. Then we can even publish our finger online so anyone can find it with a link. Partly itself is a graphics company. It's library is free to use and we can make unlimited charts in offline mode and 25 charts in online mode. Overall, there are three data visualization terms to remember from this video. A relationship shows a connection or correlation between two or more variables in a dataset. A comparison sets one set of variables apart from another and displays how those variables interact and a composition collects different types of data that make up a hole and displays them together. What data said, do you want to visualize? Next? Let me know in the comments section and please subscribe for more programming videos. For now. I've got a scatter, so thanks for watching.