Speaker 1:          00:00          Hello world. It's a Raj and welcome to the blockchain. I know I've been talking about blockchain a lot these past few weeks and there's a reason for that because this space is heating up really fast and as people who are interested in AI, the blockchain is going to provide a lot of opportunities for AI. That's what this video is about. What I'm gonna do is I'm going to first talk about the motivations behind combining these two different technologies, blockchain and AI. Then I'm going to talk about some example apps that use the blockchain and AI currently, so you get some ideas on on how you could make your own startup or your own open source project. Then I'm going to programmatically right out the proof of work algorithm. This is the, this is the key programming bid for this video and after we talk about blockchain and AI, we're going to program this thing because it is the workhorse of bitcoin.

Speaker 1:          00:52          Without the proof of work algorithm, the blockchain is nothing. Okay. So that's what we're going to code out. And the, the proof of work algorithm is a distributed consensus algorithm and that's really, really important for AI. And by the end of this video, you will understand why at the, at the end of the video, I'm going to talk about a few other distributed consensus algorithms like proof of stake, proof of burn and proof of activity. Uh, but the main algorithm is going to be proof of work that it's, that's really what I want to get through. Okay, so let's talk about blockchain and AI. So a blockchain, a blockchain is, oh my God, it is such a Buzzword, but it should be. But a blockchain is just a data structure that distributes trust across many nodes instead of one. It's like a glorified singly linked to list.

Speaker 1:          01:41          You remember, you remember link lists from data structures and algorithms, right? It's a glorified singly linked lists that lives on everybody's computers, all the miners, computers, all the nodes, and all the nodes in the network on their computers. So we can think about the blockchain is a huge chain of transactions. Let's say we're all a part of the bitcoin network, right? Bitcoin is a set of rules for how a network should run. Let's say you and I are a part of the bitcoin network. I've got some bitcoin and I want to send you some bitcoin. When I send you some Bitcoin, let's say two bitcoin, cold it huddle to the moon, right? Once I send you some Bitcoin, you're going to hold that bitcoin and the network is going to represent that transaction as a 25 character hash, okay? This is a hash, a string of letters and numbers, and then what's going to happen is all the miners in the network are going to have to validate that transaction.

Speaker 1:          02:31          The majority of the miners have to validate that transaction for it to be added to the chain of blocks. This immutable, this unchangeable list of all the transactions that have ever occurred in the network that all the nodes have to store a copy of and we can look at this chain of blocks and it looks kind of like this. This is a very simplified view of what the block chain looks like. Each block contains a list of transactions and these transactions are stored in a Merkle tree. We'll talk about that in a second. And then it also has a pointer to the next block in the chain. That's what I meant by a singly link list. It's all pointing in one direction. So it's a chain of blocks, a blockchain, right? So and and a Merkle tree, by the way, is a way to organize these transactions, multiple transactions, right?

Speaker 1:          03:16          We can hash a set of Hashes, so creates another hash and then hash those abstractions of hashes again, and it makes a tree like structure and this is just a way of organizing all of these different hashes and each minor is going to, before they can vote, right? All the miners have to vote on the validity of any transaction before they can vote. They have to provide this proof that they've, that they've computed this random mathematical problem, this proof of their work, this proof of their computational work. Since every single minor has to provide this proof of work when they give out their vote, yes or no, this transaction is valid. You would have to have more computing power than the 500 fastest supercomputers in the world combined to create a fake transaction. And that's why bitcoin has an $80 billion market cap has been running for seven or eight years now and no one has broken it.

Speaker 1:          04:09          So that's blockchain. And now let's talk a little bit about deep learning, right? So machine learning and the, in this in the sense of we're just going to classify something to keep it simple. Instead of generating, right, we have some input data, some images of cars. We want to select the features that we think are going to be most relevant to identify those pictures as car or not car. Now remember this is in the labeled data scenario, the supervised scenario. We have some cars. Then we have us at a features for those cars, like the color blue, red, green, and we have the, the size, the make, the model. And we want to choose what those ideal features are for our classifier to learn from. And once we do that, then we can classify it. That's, that's the, that's the original way that machine learning worked.

Speaker 1:          04:56          But with the, but with deep learning, instead of having to choose those features by hand, the deep learning algorithm will learn what the best features are. And this is extremely useful because handpicking features is a pain and we don't want to have to do that. Deep learning is a smarter way of learning from our data to classify it. So one question is, wait, so how is this all related? Well, deep learning is a set of algorithms in, it's a subset of machine learning. So machine learning includes a set of algorithms that learn from data, that means random forests, that means support vector machines, that means neural networks. And when we take that specific algorithm, the neural network and apply it to lots of data, give it lots of computing power. And so it has lots of layers. We call that deep learning and it outperforms almost every other machine learning model almost every time on almost every task.

Speaker 1:          05:52          And that's why it's the hottest space in machine learning right now. And Ai is a, is a set of all of that. So Ai doesn't just have to include traditional algorithms that learn from data statistically we can all, we can also use heuristics kind of like these estimate these, these guesstimates, right? Or we could use genetic algorithms or evolutionary algorithms. There are all sorts of algorithms that encompass AI, but machine learning and deep learning are the most popular and offer the most promise, right? So it's kind of like this whole Yin and Yang thing. If we think about the Aa, if we think about AI and blockchain, there's a lot of synergy. I'm going to use the word synergy here, synergistic between these two technologies and they are very different technologies, but they're very complimentary to each other. So Ai is probabilistic. We don't know what the outcome is going to be.

Speaker 1:          06:43          It's changing, right? These AI algorithms are constantly updating their weights, their learnings based on the training data that they're fed and their algorithms that guess what reality is going to be is on the other hand, are deterministic. That means we know what the outcome is going to be. They are permanent, they are immutable, they do not change at all. And these are algorithms and cryptography to record reality. So while AI is about machines making edgy, making educated guesses for us, blockchains are more about validation and permanence and greater degrees of certainty and control, right? Deterministic versus the Castic, Aka unpredictable, right? So Ai can be our intelligence, right? It can, it can learn from data. It can, it can find these insights that we could not, and the blockchain will play. The rule will play the role of the truth teller, the mediator that's going to bring two parties together and to, to complete strangers and let them trust each other without needing a third party in the mix.

Speaker 1:          07:48          It distributes trust across many notes. So let's talk about some use cases, right? So I made a video on this, uh, on this decentralized marketplace for data called open mind. But let me go over it really quickly. Again, so in, in, in terms of AI and blockchain, this is one of the most perfect examples, right? Because we have, we have a model, right? If I'm a data scientist, I have a model that I want to train. Let's say it's a deep neural network. I want to train it on your data, right? So if I want to train it on your data, if there was a third party involved, like some central App, right? Some central server, then three different people could steal from each other, right? If I'm an AI scientists and I'm trying to train on your data, I could steal your data. Or if I give you my model, you could steal my model.

Speaker 1:          08:35          Or if we use the third party, they could steal your data and my model, right? So what is a way that we can have this transaction, right? Your data, my model, I pay you for your data. You, I train my model on your data, return it back to me without anyone having to trust each other. And that's the problem that open mind solves by using the, by using AI and blockchain. Specifically, when I say blockchain, I'm talking about a smart contract. So the Tldr of a smart contract is some code that lives on a blockchain specifically. Etherium is probably the most popular of those blockchains where you can, you can push code onto the blockchain itself, right? So normally you would push code on to Heroku and then her would say, Hey, I've got your code, I've computed it. The answer is five, trust me.

Speaker 1:          09:22          But with a blockchain, you don't have to trust Heroku to say to have computed your algorithm. You instead, because of this distributed consensus algorithm that's at work, proof of work, you don't have to trust anybody. You know that this code is going to be valid even though it's living on all of these different notes. Right. So you would push some code, a smart contract to this etherium blockchain. All the nodes would have to verify that, that though the majority of the notes would have to verify that this code is indeed valid. And then the, they would also use this consensus algorithm like proof of work or proof of stake to maintain validity. So in, in the case of open mind, a startup sends a model Spec to a smart contract, right. And because the model will initialize inside of the smart contract itself, uh, no one can we, we know that I'm not trying to steal anybody's data, I haven't hidden anything in the model because the model is initialized on a smart contract.

Speaker 1:          10:21          So no human is in charge of that. And then the smart contract is going to send that model spect, that is some money and some instructions on how to train that model to an oracle. And the Oracle is going, which is a third party, is going to generate a public private key pair. It's going to encrypt the model and then send it back to the smart contract. And then after training on all the users, the model is sent back to the Oracle. It's decrypted encrypted with the oracles keys then sent back. And since the oracle acts as a trusted third party, no one can decrypt the model or gradients. We'll have a second smart contract that acts as an insurance policy against the oracle sharing secrets. So it's a two step process. The oracle will pay a bounty. Let's say the Oracle is AWS, the Oracle will pay a bounty.

Speaker 1:          11:06          And if anyone discovers the keys, the public private keys for the model, then they get that bounty. So the Oracle is incentivized to not, uh, give out those public keys, right? So it's a, it's a trust less system because it uses AI and blockchain. Let's keep going. Another example is called numerous, numerous, numerous, which is a decentralized AI hedge fund. Okay. So it also uses the blockchain and AI together. So what this is, is it's a hedge fund that lets data scientists make predictions based on their models. So numerous AI offers data for free. Okay. So it's offering all of this stock market data and I, or you as a data scientist can say, I'm going to take this data, I'm going to create some model algorithm and I'm going to my pan, I'm going to train it on this data and I'm going to submit my predictions back to numero AI with some tokens to support that prediction.

Speaker 1:          12:01          Now this token is its, its, its, its internal currency. Numerous, numerous internal Corrine's currency called Nmr. Okay. And it's built on top of the ethereum blockchain. And so numerous AI will take all the models that all the data scientists give it and it will combine it into a metta model, this, this metamodel. So we'll use all the learnings, all the gradients from all the models, and then we'll combine it and to produce this metamodel. And then it's going to make. And then time will show who's predictions where the most accurate. And those data scientists who had the most accurate predictions will not only get their money back, but they will get a reward on top of that. So everybody is incentivized to make good predictions. But if you don't make a good prediction, then you lose your money. And the fact that they are using an internal token is a great use case for the blockchain because it acts as a hybrid asset, right?

Speaker 1:          12:54          You can use this internal token as both a currency, but you could also save a part of it and use it as a security or I stock a share in the network that will grow in value over time as the network becomes more profitable, right? So that's a way to kind of share the profits with your users. And if I had a version of new marae I that did not have an internal token that the data scientists did not get to share in the profit from, of course numerous is going to win. And the way to do that as a use of blockchain where the users can share in the profit from the, from the network. Another example is a self driving car network. Pretty soon we're going to see a lot of these self driving cars, tens of thousands of these giant machines that are autonomous.

Speaker 1:          13:38          They're on the road and they're moving at, you know, very fast, right? So we have to be very careful about how we architect this self driving car network. Now one way to do it is using a centralized node, right? We have one server and it's controlling every other car. Just think about the security implications of that, right? If someone hacks is server, then every single car is now vulnerable to attack. We need a better system, right? Cars are on the road. They might be communicating with each other, oh, you're on this land, you're on that lane. Let me share some resources with you. Let me park myself, let me pay for my own gas, let me maintain myself. There's some kind of automated car maintenance shop. You can see how they're, how cryptocurrency works well here. And you can also see how smart contracts work well here.

Speaker 1:          14:27          Let the machines talk to each other without the need for a trusted third party. And there's a third point as well. Ideally we would want an audit trail, right? So if in case some kind of a car crash happens or some kind of accident, anyone can, can verify what the AI model was thinking, what it's a list of decisions were immediately because it's publicly verifiable and it's immutable and Aka a blockchain, right? So self driving car networks that are fully autonomous involved, no trusted third party, they are networks that run and maintain themselves. So of Joe a self driving car network. It's another great example of how to use AI and blockchain together. And um, right. So like I said, [inaudible] it encourages data sharing. Whenever we use a blockchain, it encourages data sharing, which leads to more data, which leads to more model, which leads to better models.

Speaker 1:          15:23          It's immutable and it provides an audit trail, right? So any kind of decision that an AI makes, as long as it's, as long as it's, it's on a blockchain, we can all verify all of the decisions that it's been making to, to kind of come to a conclusion about its result. And native assets are just a great example of giving more power to our applications, right? That have these internal tokens where the users share in the profits from the APP and the Ai as well, which leads me to the wildest, but also most awesome slash also most scary idea, which is artificially intelligent, distributed autonomous organizations or a dao. You could, we could call it a doubt, a doubt. And in a way to self driving car network is a Dell, but a dao is a computational process that runs autonomously on decentralized infrastructure. That means there is no central point of control with resource manipulation.

Speaker 1:          16:20          That means it has some kind of, uh, value, some crypto token that it can use to spend on things, which means it's code that can own stuff. So what do I mean by that? Well, I think it's best served by looking at this example. So check out this trippy image. This was generated by an AI, okay, but that used genetic programming. Now imagine the art dao, okay, this isn't, this is a, this is a set of instructions that are all smart contracts. They'll live on the blockchain. This is an unstoppable AI. So let's look at this process. So what, what the art dow does is it runs an AI engine to generate a new image like this, using some kind of AI, machine learning, deep, deep learning technology, and then it claims claims attribution over that generated image on the blockchain. Okay? So, so we all know that it was the AI that that created, that it creates multiple additions of that art.

Speaker 1:          17:14          It submits it to some kind of marketplace and then it's, it sells it, right? So then he earns money for its art and then it uses that wealth to, to then pay for its own resources like computing power and generate more art. And it just keeps getting better and better, right? So you have this AI that is doing this task that the creator that the creator asked it to do, and it's using money to maintain itself and grow itself. So it will get more and more wealthy, right? So this could do a lot of great things for us, right? But you could also see how this could be a bad thing, right? It depends on the person who is creating this technology. This is so powerful, is insanely powerful technology. And it's up to us. You watching this video to use this technology for good, for the good of humanity.

Speaker 1:          18:02          It's seriously, it's up to us. Very few people understand any of this, like forget blockchain or AI, even python or code, right? The fact that you're here at this level of the video is really impressive. So I am very proud of you. Okay. So anyway, let's get to the good stuff. The code. So there are two consensus distributed consensus algorithms that are the most popular proof of work and proof of stake. Let's talk about proof of work. So the proof of work algorithm is the reason that bitcoin works, right? We have this distributed ledger of all the transactions on the network that every minor store, it's a copy of on their computer. And when they vote on the validity of a transaction, they have to offer this proof of work, right? This proof of work that they've computed this random math problem and only if they have done that can they vote on a transaction.

Speaker 1:          18:54          So it's a four step algorithm. It's a four step algorithm. So a minor, we'll retrieve a group of transactions from pending transactions to be valid, to be validated a block. And it's gonna process some work to generate a proof. It's going to, it's going to broadcast that proof of work to every other node in a network. And then it's going to end if the majority of the network agrees on the validity of the transaction, that transaction is an added to the blockchain, right? So let's, let's, let's code this out. All right, so I'm going to code in Python with the proof of work looks like. So let's start off by importing our dependencies, right? So cis is going to help us print out some statements. Time is going to help us clock how fast this is going. Hash live is going to help us hash a transaction.

Speaker 1:          19:36          And then lastly we're going to unpack and pack, which is going to let us, um, compress and decompress some data. Okay? So those are our dependencies. And uh, now let's, let's write out our variables. So the first variable we're going to write out is the timestamp, right? So a timestamp. And this is where we're using our time library. We're going to say, okay, time dot time, that's our timestamp. We're going to convert it into a string. And that's our timestamp. The next, uh, variable. So this, the next variable is going to be the message. So the message, it just is just going to be, is this just an example? But, but hashing a string is suitable work for this project. So this is a random message, right? We can think of this as a part of the transaction. And then lastly, we have some payload to the payload is a combination of the times of the things that we're going to encrypt, which is going to be the timestamp and then the message, right?

Speaker 1:          20:31          So these are the things that we want to send to the network. It can be blocked data as it is with bitcoin mining. In this case, it is a message with a payload, a message with a timestamp. And that is the payload. Okay? So those are the first three variables. And now let me make this readable. So now we're going to write out a nonce. So a nonce is going to increment from zero to end until the target is met. By the way, a nonce is a number only used once in cryptography. A nonce is highly prop popular. Whenever you're creating any kind of encryption scheme, you'll use a nonce as a way to, um, I mean there's so many different use cases, but in this case is going to verify that a minor has indeed tried out many different solutions before offering the proof of computational work. So we have a nonce and then we have a guest. And the guest is this is going to store our guests, which effectively it begins that if infinity throttle is going to be equivalent to the bitcoin difficulty, we'll just have some measure of how difficult we want our proof of work algorithm to be. Let's just say you know, a million and the target is going to be the maximum value, uh, that have eight bytes divided by the difficulty, right? So it's going to be the maximum value, um, by the difficulty.

Speaker 1:          21:55          So the nones gonna increment by one each time. And it's going to count how many guests is the computer makes. So whenever the system does work, it doesn't have to trace back over each guest. It only checks the non submitted with the data. So now what we can do is we can create this payload hash. All right? By using Hash live. So we're going to hash the payload, right? So that is the uh, message and that is the timestamp payload hash by using Hash Lie Dot Shah five 12, take the payload and then digest it. Uh, right. And now we're going to start clocking this proof of work algorithm by saying start time. We've got our payload, we've hashed it. Now let's run the proof of work. How rhythm. So this is a simple loop that I'm going to write and this is the proof of work algorithm.

Speaker 1:          22:44          So I'm going to say while the guest is greater than the target, um, let's increment, uh, the nones by one every time. And then, uh, we're going to hash our data with two rounds of Sha two, five, six. Okay. So we're going to say, guess unpack. Let me just write this out cause it's quite a, quite a lot to write out. So we've got Hash Live Dot Shah five 12, and then we're going to hash it again. Oh Man, right. Hash Live Dot Shah five 12. Uh, and then again we're going to hash a hash slide dot Shah five 12. And then we're going to pack this, uh, greater than Q, uh, which is a [inaudible] plus the payload Hash Dot Digest Dot digest cause it was to ashes. And then between zero and eight, right? So we went the first bites and the first eight bytes, that's why we said zero to eight and they're going to be turned into a number.

Speaker 1:          23:47          Effectively. This is how a computer makes a guess. So the nonce is going to prove that that work was done. And let me at the end of this, let me write out, uh, end who could end because we've, we've ended the, uh, the timer, right? So the nonce is going to prove that work was done. And in this valley, in this example, it's value represents the number of attempts are CPU made before it founded valid gas below the target. And because each guest has the same probability of being under the target method of generating are nones, it doesn't matter. However, simply incrementing the nonce is cheaper than generating a random number. So that's why we're, we're using a nonce, right? So the nones is going to count how many times we've, we've, we've made this guests, right? So we have some, right? So remember our guests is this number right here. And as long as that number is greater than our target, this is just going to keep going, right? And the nones is our way of, of saying that yes, this, this minor has indeed a computed all of these different solutions before arriving at this, uh, at this, at this end solution. And so at the end, we can print out

Speaker 1:          24:59          all of all of our variables to see, uh, what, what has happened here?

Speaker 2:          25:05          Okay?

Speaker 1:          25:06          That's it for the proof of work. And so, yeah. So, so that's proof of work. Now let's talk about proof of stake a little bit. So in proof of work, the probability of mining a block is dependent on how much a month, how much work is done by the mine. So payouts become smaller and smaller for bitcoin miners. So the idea is that there will be less of an incentive to avoid a 51% attack because minors are going to get paid less over time because there was a limited supply of bitcoins out there. Uh, and so pan, the other argument behind not having proof of work systems is that mining communities, it becomes centralized, right? But people have bought these giant computer farms, just a mine and it's getting centralized. So one potential solution to proof of work, it's a youth proof of stake. So in proof of stake, a person can mind depending on how many coins they already hold. And the proof of state system makes any 51% attack more expensive. So when you, when, when a minor is going to vote on the validity of a transaction, it's not about how much computing power it's they have, it's about how much stake they have in the network, which means literally how much money do they have.

Speaker 2:          26:14          Okay.

Speaker 1:          26:14          Uh, and it's a more decentralized system. So in general, the proof of stake algorithm looks as follows and it's actually, it's actually really hard to find code for the proof of stake algorithm or really any kind of diagram or, I mean, you can find code, but it's going to be, it's going to be huge. I mean like c plus plus just like 300 lines of code. So, um, I'm just gonna I just code the, I just coded out the proof of work this time, but next time I'll, I'll, I'll write out the proof of stake and the others. But it's, it's a very simple algorithm. It's a very simple algorithm. The blockchain keeps, uh, keeps track of a set of validators also called miners and the proof of stake sense. And anyone can become a validator by sending a special type of transaction that locks up their coin into a deposit.

Speaker 1:          27:01          And the process of creating and agreeing on new blocks is then done through a consensus algorithm that all the current validators can participate in. So there are a lot of different ways to assign awards to these validators who participate in the consensus algorithm, right? There's chain based proof of stake and there's Byzantine fault tolerant proof of stake, which is a little too much to go into for one video, but that is kind of the next up and coming mainstream, uh, distributed consensus algorithm after proof of work. Because the argument is that proof of work is way too computationally expensive. It wastes way too much electricity and proof of state can be made better. Ethereum, for example, the second highest market cap of cryptocurrency plans on moving from proof of work to proof of stake next year. But we'll see how that works. Because proof of work, as expensive as it is, as a unnecessarily wasteful as it is, it is still the only known distributed consensus algorithm that can work at the scale that bitcoin has become at.

Speaker 1:          28:07          So we'll see how it goes. There's also proof of activity, which is kind of a hybrid of proof of work and proof of stake. The idea is that it starts off as a proof of work algorithm with all the miners trying to solve this mathematical problem. And then, um, once there is a winning transaction, it then switches to proof of stake standard instead of validators are going to be chosen to sign this new block. There's also proof of burn, which is all about you burning coins by sending them to an address, uh, where they are irretrievable, right? So once you commit your coins to never, never land ride this place where you can never get this, get them back, you earn a lifetime privilege of being able to mind on a system based on a random selection process. And over time your stake in the system decays.

Speaker 1:          28:53          So you'll want to continually burn more coins to increase your odds of being selected in this lottery. And they're, they're even more, there's proof of replication, which is what file coin uses. There's proof of, there's proof of a storage, there's proof of, uh, intelligence, which is way out there, which I'll get to at some point. There's a lot of different proofs and these proofs can be distributed, but it's also useful to think about proofs just in a general sense, right? So on a distributed consensus proof of algorithm that I would most want to see is called proof of unique identity. What that means is, can you prove that you are a unique person in a decentralized way? We already know how to do this in a centralized way, right? Like a government or any kind of central entity can your ID, right? Like a government id or social security number or whatever passport.

Speaker 1:          29:46          And then they can say, well, I've got this unique number for you. If you say you're him, nope, he's the only one. Right? We know how to do that in a central, centralized way. But how do we do it in a decentralized way? And that hasn't been solved? If we are able to solve proof of unique identity, he removes the need to have a proof of workout for them, right? Because minors are already proven to be unique. So a civil attack is impossible. Gaining 51% of the network, we can just say, here are all the nodes that are unique. 51% of them have to agree, right? So it can also help us create a basic income, right? A basic income coin where you could just give out money to a set of unique nodes in a network. There's so much we could create online governments, we could, we could create so many different things, but we would just have to solve this proof of unique identity problem.

Speaker 1:          30:32          Uh, and but anyway, blockchains and AI go, blockchain and AI go really well together. If you were to ask me, sir, Rod, what would you, what would you do as a startup or what would you do if you were trying to build something really cool outside of making videos? I would say I would combine blockchain and AI to make an APP that no one has ever made before. And that's what it lets you do. It lets you create software that has never before been possible. So if you're studying AI, if you're setting machine learning, if you're setting deep learning, no, at least a little bit about the blockchain, because I promise you it's going to come into your periphery. It's going to come into your line of sight very soon, if not now. Okay. So I hope this video was helpful. I hope it gave you some ideas and yeah.