Speaker 1:          00:00          Hello world. It's Raj. Today we're going to be building a decentralized APP or doc in three minutes. Let's get started. For this video, we're going to be using embark, which is an awesome javascript framework for building decentralized applications. It's integrating to theory and IPFS. To start off, we want to go ahead and install it using NPM, which is a node package manager. Once we have it installed, we can go ahead and look in our bash RC and make sure that we've linked it properly. Once we're sure we've linked that, we can source our bash and run embark new test that's going to create a new embarked app just like you would generate a Django app or a rails app. Then we can go ahead and run our blockchain. The blockchain runs on it theory, so what we were part of the theory of net, what when we were in our APP.

Speaker 1:          00:39          Then we can go ahead and type in embark run. We're just going to run our APP on our local host just like a Django app or rails app at port 8,000 there it is. There's our APP. Now let's go ahead and see what it's like. It's just a skeleton file. We've got contracts, CSS, html, js, standard things. The contracts is, that is the interesting bit. All the front end logic of your code works just like an irregular, whether it's the backend that is different. So let's go ahead and create our first smart contract. We'll call it simple storage dot. Sol, which stands for solidity, the language of a theory contracts. This contract is going to do a simple thing. It's going to get and set an integer in our blockchain. And the great thing about smart contracts as opposed to other types of contracts is it's decentralized there.

Speaker 1:          01:20          Trustless you can have dynamic code that you would deploy to say Heroku that lives on a decentralized network. All notes have to verify that this code didn't indeed run the intended output. That's all it's going to do. And in our CSS, 15 pixels for our margin, uh, and then for html page we'll want to construct something more than the standard welcome to embark and it get button for it as well. So once we have our html, we want to make sure that our javascript works as well. So let's go ahead and create our index dot js file and our index dot js file. We want three functions that run off of the dock. Whenever the user inputs at texts, we use simple storage outset and then use the value as a parameter. The same thing for get and that we append it to the log of what just happened and our contracts that yml.

Speaker 1:          02:04          We want to make sure that we're running the contract that we've just created. So we'll say symbol storage and the argument will be however much we want to send as a currency transfer in this deck. On this case it will be 100 now you can use this for other things like you know, sending someone a picture on a social network court or some kind of financial app or gambling or poker. Anything that involves any kind of currency or data we want to pay people for or receive four, that's when a smart contract would come into play. And embark will easily allow you to deploy your dap to IPFS by just typing in embark IPFS so we can get in, set the value right here in html, and you can see it's creating transactions in the blockchain. That's it. Congrats. We got our first step up and running, so think of it, theory him as a decentralized Heroku and IPFS as a decentralized database. You can utilize both for your dad. For more information on decentralized apps, please check out the links in the description below and please subscribe for more technology videos. Thanks for watching.