1
00:00:00,060 --> 00:00:00,751
Hello world,

2
00:00:00,751 --> 00:00:05,160
it's to Raj and today I'm going to show
you the five steps to succeed in any

3
00:00:05,161 --> 00:00:06,180
programming interview.

4
00:00:06,420 --> 00:00:09,960
I've gone through the interview process
dozens of times for a bunch of different

5
00:00:09,961 --> 00:00:14,580
tech companies and I've definitely
gotten my fair share of rejections and

6
00:00:14,581 --> 00:00:17,670
offers. These are the key lessons
I've learned from the gate.

7
00:00:18,060 --> 00:00:22,140
Interviewing takes work. Don't let
anyone tell you it's easy. It's not.

8
00:00:22,350 --> 00:00:25,920
No one talks about the rejections,
only their offers.

9
00:00:26,130 --> 00:00:29,280
It's essentially a full time job,
but if you follow these steps,

10
00:00:29,281 --> 00:00:33,510
I promise you you will succeed.
So let's start with step one.

11
00:00:33,690 --> 00:00:38,280
Study before you even think about
applying anywhere you need to get your

12
00:00:38,281 --> 00:00:39,840
technical skills on point.

13
00:00:40,050 --> 00:00:44,370
The process of getting a job as a software
engineer is the same at almost every

14
00:00:44,371 --> 00:00:45,210
big tech company.

15
00:00:45,211 --> 00:00:49,020
You do an initial phone screen with the
recruiter where they gauge your interest

16
00:00:49,021 --> 00:00:50,880
in the company and if you pass that,

17
00:00:50,881 --> 00:00:54,780
you're asked a series of technical
questions that you write answers to on a

18
00:00:54,850 --> 00:00:55,620
whiteboard.

19
00:00:55,620 --> 00:00:58,800
If you can show the interviewer that you
can think through a problem and come up

20
00:00:58,801 --> 00:01:01,200
with a solid solution,
you'll get an offer.

21
00:01:01,380 --> 00:01:03,900
But the only way to do
that is to practice.

22
00:01:03,960 --> 00:01:07,890
All my friends who ended up working
for Austin companies practice a lot.

23
00:01:08,040 --> 00:01:10,140
They start to a consistent study schedule.

24
00:01:10,141 --> 00:01:12,630
It's not about having
some divine intellect,

25
00:01:12,660 --> 00:01:15,390
it's about how much time and
effort you put into studying.

26
00:01:15,570 --> 00:01:19,290
So the question is what do you need to
practice if they're not testing you on

27
00:01:19,291 --> 00:01:23,100
syntax, you could learn basic ruby
syntax overnight if you want it to,

28
00:01:23,101 --> 00:01:27,960
but what can't be taught overnight or
computer science fundamentals and that's

29
00:01:27,961 --> 00:01:31,350
what companies test you on.
Namely data structures and algorithms.

30
00:01:31,530 --> 00:01:34,800
There is no getting around this.
Just ask the guy who invented homebrew,

31
00:01:34,920 --> 00:01:38,550
he was rejected by Google because he
didn't know how to invert a binary tree.

32
00:01:38,730 --> 00:01:42,810
Even though tons of engineers at Google
use his tool daily start off by taking

33
00:01:42,811 --> 00:01:43,644
two courses.

34
00:01:43,800 --> 00:01:47,910
I recommend a free intro
to data structures course
by my code school and the

35
00:01:47,911 --> 00:01:50,810
intro to algorithms course by Mit.
Open courseware.

36
00:01:51,000 --> 00:01:54,360
Both are available on Youtube and we'll
give you broad knowledge about these

37
00:01:54,361 --> 00:01:55,140
topics.

38
00:01:55,140 --> 00:01:58,860
Then you can practice what you've
learned on hacker rank and hacker earth,

39
00:01:59,100 --> 00:02:02,820
both our online platforms that let
you earn points for solving problems.

40
00:02:03,030 --> 00:02:06,660
It's a lot of fun actually. Once you've
solved dozens of problems on both sides,

41
00:02:06,930 --> 00:02:10,770
read programming, interviews, exposed.
Then in cracking the coding interview,

42
00:02:10,980 --> 00:02:14,820
both are great books that will help you
practice specific problems that tend to

43
00:02:14,821 --> 00:02:18,330
show up a lot during interviews from
system designed to questions about time

44
00:02:18,331 --> 00:02:20,130
complexity and when you're done,

45
00:02:20,160 --> 00:02:22,260
start conducting some mock
interviews with the friend,

46
00:02:22,530 --> 00:02:26,040
have them pick questions and code your
answer on a whiteboard explaining your

47
00:02:26,041 --> 00:02:29,760
thought process to them. You can do
all this in about two months, two,

48
00:02:29,761 --> 00:02:32,190
three months of studying
a couple hours every day.

49
00:02:32,640 --> 00:02:36,450
Step two is to find the companies that
you like. When you start the job hunt,

50
00:02:36,480 --> 00:02:40,080
you have a limited amount of time you
can dedicate to each company so you don't

51
00:02:40,081 --> 00:02:42,930
want to waste it. Interviewing for
companies that aren't exciting,

52
00:02:43,050 --> 00:02:46,830
keeping track of the interview process
across multiple companies can be really

53
00:02:46,831 --> 00:02:49,350
stressful unless you stay organized.

54
00:02:49,560 --> 00:02:53,430
Use an excel spreadsheet to map out the
companies on your radar and where you

55
00:02:53,431 --> 00:02:55,410
are in the interview
process with each of them.

56
00:02:55,620 --> 00:02:59,350
You can find these companies on angel
list, which is my favorite resource. Also,

57
00:02:59,351 --> 00:03:02,140
hacker news has a monthly who's hiring,
which is great.

58
00:03:02,470 --> 00:03:04,630
This is a somewhat spiritual process.

59
00:03:04,631 --> 00:03:08,890
You'll probably go through
some existential thoughts
and that's okay. Ultimately,

60
00:03:08,891 --> 00:03:13,510
it's about deciding how you can best use
your skills to make a positive impact

61
00:03:13,511 --> 00:03:16,990
in an area you care about and then
finding companies that align with those

62
00:03:16,991 --> 00:03:20,770
values. Once you've got a
list of companies, it's time
to build your portfolio.

63
00:03:20,980 --> 00:03:24,700
Recruiters that popular companies get
hundreds of resumes every day so they

64
00:03:24,701 --> 00:03:26,650
don't have time to sift
through irrelevant stuff.

65
00:03:26,980 --> 00:03:31,240
Make sure every single word on your
resume count and it all fits on one page.

66
00:03:31,450 --> 00:03:34,540
Make it dense in descriptive. Remember,
the less work they have to do,

67
00:03:34,541 --> 00:03:36,400
the more likely they'll
be to help you out.

68
00:03:36,640 --> 00:03:39,820
Make it easy for them and highlight
the most important work you've done.

69
00:03:40,090 --> 00:03:43,000
You don't have to fit every single
cs related thing you've done on it.

70
00:03:43,030 --> 00:03:44,140
Whatever you put down,

71
00:03:44,530 --> 00:03:48,580
you should be able to speak intelligently
about because all of it is fair game.

72
00:03:48,581 --> 00:03:49,390
During the interview,

73
00:03:49,390 --> 00:03:53,350
have between two to five versions of your
resume each tailored to what a certain

74
00:03:53,351 --> 00:03:58,090
category of companies from your list. Once
personal projects, hackathon projects,

75
00:03:58,180 --> 00:04:01,810
contributions to open source libraries.
Get hub is where you can put your code,

76
00:04:01,811 --> 00:04:05,050
where your mouth is.
It's the new resume in many respects.

77
00:04:05,350 --> 00:04:08,950
Have a personal website and give
your best project a web presence.

78
00:04:09,100 --> 00:04:11,790
It's professional and
visualizations always impress.

79
00:04:12,010 --> 00:04:13,540
Step four is to get the interview.

80
00:04:13,610 --> 00:04:16,840
The easiest way to do this is to just
apply to a company directly through their

81
00:04:16,841 --> 00:04:17,500
website,

82
00:04:17,500 --> 00:04:21,400
but big companies get so many interviewees
that it's really easy to get lost in

83
00:04:21,401 --> 00:04:25,150
the pile. You want to find the
gatekeeper, that technical recruiter,

84
00:04:25,390 --> 00:04:28,420
you can use a little bit of keyword
magic and Google just like this and it'll

85
00:04:28,421 --> 00:04:31,900
give you a list of recruiters and people
in positions you're interested in at

86
00:04:31,901 --> 00:04:32,560
any company.

87
00:04:32,560 --> 00:04:35,800
Send them an email and make sure your
email is short and to the point that means

88
00:04:35,801 --> 00:04:37,600
they quick intro,
introducing who you are.

89
00:04:37,780 --> 00:04:41,260
I'll link to and easily shareable and
relevant project and an expression of

90
00:04:41,261 --> 00:04:45,160
interest to learn more, which brings
us to step five. Pass the interview.

91
00:04:45,250 --> 00:04:49,180
You want to exude confidence and if you've
studied well and your portfolio is on

92
00:04:49,181 --> 00:04:49,690
point,

93
00:04:49,690 --> 00:04:53,380
you will sometimes the interviewer will
be more nervous than you are and that's

94
00:04:53,381 --> 00:04:55,570
okay. Smile, shake hands,

95
00:04:55,690 --> 00:04:58,210
let them know that you're another
human and you're here to work through a

96
00:04:58,211 --> 00:04:59,140
problem together.

97
00:04:59,440 --> 00:05:02,500
They'll ask you to code a problem on a
whiteboard and you want to be able to

98
00:05:02,501 --> 00:05:04,450
communicate your thought process well.

99
00:05:04,690 --> 00:05:08,230
It's not about the answer as much as
it is about the way that you think.

100
00:05:08,560 --> 00:05:11,920
That's what they're judging you on.
Once you've coated your first solution,

101
00:05:12,100 --> 00:05:15,570
pretty much every time they'll ask if
there's a more efficient solution or

102
00:05:15,590 --> 00:05:16,211
usually is,

103
00:05:16,211 --> 00:05:20,410
and this is where your computer science
fundamentals will come in handy and

104
00:05:20,411 --> 00:05:23,140
don't forget to ask questions.
They're there to help you.

105
00:05:23,350 --> 00:05:26,650
It's a collaborative approach.
They're judging your technical skills,

106
00:05:26,800 --> 00:05:30,640
but they're also judging if they could
see themselves working with you and if

107
00:05:30,641 --> 00:05:32,980
you've come prepared,
you'll do just fine.

108
00:05:33,130 --> 00:05:36,580
There are tons of resources on the web
to help you practice your technical

109
00:05:36,581 --> 00:05:40,420
skills. And I've linked to everything
I've talked about here in the description.

110
00:05:40,690 --> 00:05:43,030
The interview game takes a lot of effort.

111
00:05:43,180 --> 00:05:48,040
The key is to not let your rejections
ever, ever, ever, ever get you down.

112
00:05:48,070 --> 00:05:52,120
Because with the enough practice, you
can succeed at any technical interview,

113
00:05:52,510 --> 00:05:56,650
believe in yourself, stay motivated,
and you're going to make it. For now,

114
00:05:56,680 --> 00:05:59,590
I've got to interview someone for
the channel, so thanks for watching.

