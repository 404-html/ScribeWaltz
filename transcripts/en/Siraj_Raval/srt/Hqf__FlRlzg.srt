1
00:00:03,110 --> 00:00:03,943
Yeah.

2
00:00:04,720 --> 00:00:09,040
Hello,
hello world.

3
00:00:09,041 --> 00:00:13,450
It's the Raj, welcome to this third
live session that I've ever done.

4
00:00:13,840 --> 00:00:16,660
I'm excited to be here.
Um,

5
00:00:16,690 --> 00:00:21,550
I'm going to start off with a Q and a
section and this time it's going to be a

6
00:00:21,551 --> 00:00:22,450
little more structured.

7
00:00:22,451 --> 00:00:26,890
So I'm going to start off with
a five minute Q and a section.

8
00:00:26,891 --> 00:00:30,790
Let me mute myself. Here
we go. I just muted myself.

9
00:00:31,450 --> 00:00:32,021
Okay.

10
00:00:32,021 --> 00:00:36,730
So I just muted myself
and we're going to start.

11
00:00:36,760 --> 00:00:39,450
So five minute Q away and then,
uh,

12
00:00:39,460 --> 00:00:43,840
we're just going to go to concepts coding
and then summary and then a less a Q

13
00:00:43,841 --> 00:00:47,740
and a at the end. Okay.
So let's go. Starting now.

14
00:00:49,410 --> 00:00:52,500
This is not beer pong. I know.
It should be. That would be cool.

15
00:00:52,530 --> 00:00:56,660
Maybe in another video. Thanks for
liking my hair. I work hard at it. I die.

16
00:00:56,661 --> 00:01:00,270
It actually, this is, this
is died. It's dyed silver.

17
00:01:01,620 --> 00:01:02,453
MMM.

18
00:01:04,220 --> 00:01:07,370
Hi everybody. Hi. Bartos. Hi.

19
00:01:07,630 --> 00:01:12,230
Ivy Era tensorflow. We're going to
be using tensorflow in this video.

20
00:01:12,290 --> 00:01:16,610
Absolutely. I have tried to be omitting
a generative adversarial network.

21
00:01:16,611 --> 00:01:21,611
Those are amazing and they're going to
do good things for generative models in

22
00:01:21,741 --> 00:01:25,640
general. Uh, do I do any
freelance work? Yeah,

23
00:01:25,641 --> 00:01:28,940
I mean sometimes clients approach
me to make videos for them.

24
00:01:29,030 --> 00:01:31,660
I'm trying to just do this full time.
Like I don't want to like,

25
00:01:31,670 --> 00:01:33,590
you can't control me.
You know what I'm saying?

26
00:01:33,591 --> 00:01:36,420
Like I'm just wanna I just want to
do the youtube channel full time.

27
00:01:36,750 --> 00:01:39,470
There's self driving car team is
the only one that I'm like, okay,

28
00:01:39,500 --> 00:01:44,400
I'll do something for them.
Hi,

29
00:01:44,640 --> 00:01:47,580
what is up?
Dion and Mitch.

30
00:01:48,540 --> 00:01:52,620
I'm going to show us how
to build recurrent neural
network in tensorflow next

31
00:01:52,621 --> 00:01:55,350
time. What are the dependencies?
Go to the top of the chat screen.

32
00:01:55,380 --> 00:01:57,630
I talked about them there.
Thanks.

33
00:01:57,690 --> 00:02:01,050
Mokolo hi from Argentina.

34
00:02:01,110 --> 00:02:05,640
I want to visit Argentina and
learn salsa. I know. Sorry.

35
00:02:05,670 --> 00:02:10,470
Oh my God. I meant uh, tango.
That's what I meant. All right.

36
00:02:11,830 --> 00:02:16,530
Uh, all right, so here we go. Two more
minutes. Yes, I'm Indian American. Yes.

37
00:02:17,760 --> 00:02:19,920
I'll never get it. You're right.
I'll never get your nickname.

38
00:02:19,921 --> 00:02:23,400
Will you be using cue learning? Good call
Lord. That's exactly what I'll be using.

39
00:02:23,430 --> 00:02:25,920
What is Pong? Neural network. Okay.

40
00:02:26,850 --> 00:02:31,850
So Pong neural network is we're going
to build calm from scratch the game,

41
00:02:32,250 --> 00:02:34,680
you know, the two paddles
and the ball in the middle.

42
00:02:34,770 --> 00:02:39,030
And we're going to train a neural network
to get better at it over time. Uh,

43
00:02:39,640 --> 00:02:44,540
hi [inaudible]. Hi Antonio.
Brazil. Sounds cool. Uh,

44
00:02:45,630 --> 00:02:48,420
then big niche. I'm good. How are you?

45
00:02:48,810 --> 00:02:52,770
A good pdf tutorial on CNN for beginners.

46
00:02:54,070 --> 00:02:58,890
Uh, wait til later, I'll, I'll send
you a link. I'll send you a link.

47
00:02:59,230 --> 00:03:04,230
I'm the best massively online course for
total beginners and machine learning,

48
00:03:05,800 --> 00:03:10,570
my channel. Uh, just implement all
the code and each of the videos. And,

49
00:03:11,100 --> 00:03:13,840
uh, if you do that, you're
going to get good at no time.

50
00:03:13,841 --> 00:03:17,050
Start from the very
beginning of my videos. Um,

51
00:03:18,940 --> 00:03:23,800
let's see. Game on game
on exactly high Kush. Uh,

52
00:03:23,801 --> 00:03:28,240
I am using pylon python three. And
can you do this using Java? Yes.

53
00:03:28,241 --> 00:03:29,650
You could do this in Java.

54
00:03:30,670 --> 00:03:33,970
Have I tried implementing two d models?

55
00:03:34,150 --> 00:03:38,110
Restricted Boltzmann machines. I've done
videos on restricting both midstreams,

56
00:03:38,830 --> 00:03:43,090
Microsoft AI or Google AI,
Google Ai. Of course, my mean,

57
00:03:43,091 --> 00:03:47,680
Microsoft did hire a 1500% AI
team recently, but like, I mean,

58
00:03:47,860 --> 00:03:51,940
you know, we'll see how that goes. Okay,
so that was it. Five minutes is over.

59
00:03:52,030 --> 00:03:53,710
So now we're just going to get started.
Okay.

60
00:03:53,770 --> 00:03:57,190
So now the next part is me
explaining the concept. Okay.

61
00:03:57,191 --> 00:03:58,240
So what we're going to do,

62
00:03:58,630 --> 00:04:03,630
what we're going to do is build a deep Q
network to read and Pixel data from the

63
00:04:05,051 --> 00:04:07,270
game upon. You guys know
the game of Pong, right?

64
00:04:07,271 --> 00:04:10,150
Two paddles and there's a ball in
the middle, right? And it's just,

65
00:04:10,210 --> 00:04:12,790
you're just trying to get the ball
to go pass the paddle. That's it.

66
00:04:13,060 --> 00:04:16,960
And so we're going to have to,
we're going to have one evil Ayaan okay.

67
00:04:16,961 --> 00:04:19,360
This is an evil I,
that's the guy we want a beat.

68
00:04:19,630 --> 00:04:22,630
It's just going to be really smart and
it's going to know everything right from

69
00:04:22,631 --> 00:04:23,380
the start.

70
00:04:23,380 --> 00:04:27,070
And then there's going to be us and we're
going to be super dumb at first. Okay?

71
00:04:27,220 --> 00:04:30,220
We're going to be super dumb,
but through trial and error,

72
00:04:31,600 --> 00:04:35,230
but through trial and error,
we're going to get better over time.

73
00:04:35,231 --> 00:04:36,010
So it's going to,

74
00:04:36,010 --> 00:04:39,550
it's going to notice where the
ball is going and if it's losing,

75
00:04:39,551 --> 00:04:41,140
it's going to say, okay,
I need to get better.

76
00:04:41,260 --> 00:04:44,500
So it's going to be using something
called deep cue learning. Okay?

77
00:04:44,501 --> 00:04:48,520
Deep Cue learning. And guess who else
did this deep mind? Deep mind did this.

78
00:04:48,730 --> 00:04:51,130
All it does is it reads in the Pixel data.

79
00:04:51,220 --> 00:04:53,110
It doesn't know anything about the game.

80
00:04:53,320 --> 00:04:57,250
It reads in Pixel data and the score.
That's it.

81
00:04:57,251 --> 00:04:59,650
Those are the two inputs
to the Deq network.

82
00:04:59,860 --> 00:05:04,180
If we didn't pixel data and the
score and based on those two things,

83
00:05:04,230 --> 00:05:07,420
it will get better over time.
Reinforcement learning,

84
00:05:07,750 --> 00:05:10,630
trial and error better
over time. Okay, so,

85
00:05:10,631 --> 00:05:15,160
and we call this the agent environment.
Luke the agent environment. Look,

86
00:05:15,370 --> 00:05:16,420
looking at the environment.

87
00:05:16,450 --> 00:05:20,530
The agent sees if there's a reward or
not and gets better and better over time.

88
00:05:20,890 --> 00:05:24,280
Okay? That's what we're
going to do. And uh, Charles,

89
00:05:24,310 --> 00:05:29,230
I had coffee but not enough.
Uh, but anyway, we'll see. Okay,

90
00:05:29,680 --> 00:05:33,040
here we go. Okay, so that's
the explanation of the concept.

91
00:05:33,041 --> 00:05:37,780
That's a two minute explanation and now
we're going to get started with the code.

92
00:05:37,960 --> 00:05:38,231
Okay.

93
00:05:38,231 --> 00:05:41,860
We've got a lot of coats go over because
we are building this palm game from

94
00:05:41,861 --> 00:05:42,694
scratch.

95
00:05:42,970 --> 00:05:46,660
We are building it from scratch and
then we're building the reinforcement

96
00:05:46,661 --> 00:05:51,220
learning algorithm, uh, using tensorflow.
So there's a lot of coats to go over.

97
00:05:51,221 --> 00:05:55,240
That's about 300 lines
I want to say. Uh, so,

98
00:05:55,900 --> 00:06:00,860
uh, let's just get started. Okay, here
we go. Never enough coffee. Um, exactly.

99
00:06:01,370 --> 00:06:03,290
So, all right, here we go.

100
00:06:03,291 --> 00:06:06,890
I'm going to screen share and we're just
going to get started because we have a

101
00:06:06,891 --> 00:06:11,120
lot of code to cover.
Let's do this. All right.

102
00:06:11,121 --> 00:06:12,440
Screen sharing time.

103
00:06:16,070 --> 00:06:16,980
Screenshare

104
00:06:20,490 --> 00:06:25,110
Holy Shit. Hold on. Oh my God.

105
00:06:29,760 --> 00:06:33,630
Moving this.
We'll put this

106
00:06:34,400 --> 00:06:35,960
right here so I can see it.

107
00:06:37,220 --> 00:06:38,370
All right.

108
00:06:40,800 --> 00:06:43,650
Screen section. Exactly. Exactly.

109
00:06:44,100 --> 00:06:47,730
I'm going to make this really
big. This text. Really big.

110
00:06:49,740 --> 00:06:53,220
Okay. I know you guys like that. Big Text.

111
00:06:54,910 --> 00:06:56,270
Boom, boom, boom, boom, boom.

112
00:06:57,290 --> 00:06:58,850
Getting bigger and bigger.

113
00:07:02,960 --> 00:07:05,660
No, this isn't in sublime text
and writing this in sublime text.

114
00:07:06,320 --> 00:07:10,160
Is this big enough?
I was that is this big enough?

115
00:07:10,730 --> 00:07:12,740
I'll wait for a reply
and then I'll keep going.

116
00:07:15,470 --> 00:07:17,720
Is this big? Oh, bigger. Okay.

117
00:07:19,610 --> 00:07:24,530
How about boom, boom, boom, boom. Okay,

118
00:07:24,531 --> 00:07:25,364
here we go.

119
00:07:26,370 --> 00:07:30,060
All right, here we go. Here we go. Here we
go. That's as big as we're getting. Okay,

120
00:07:30,090 --> 00:07:33,490
so the first thing we want
to do is build a pong.

121
00:07:33,510 --> 00:07:36,750
We're going to build a pawn class, okay?
We're going to build pawn from scratch.

122
00:07:37,120 --> 00:07:38,070
All right,
here we go.

123
00:07:39,570 --> 00:07:40,040
Okay.

124
00:07:40,040 --> 00:07:42,230
Uh, no. Texas. Big like
my mom. Okay, here we go.

125
00:07:42,260 --> 00:07:44,240
So we're going to import pie game first.

126
00:07:44,270 --> 00:07:48,740
This is going to help us make a
graphical user interface games.

127
00:07:48,741 --> 00:07:53,150
And Python Pie game is a great library
for making any kind of two d game and

128
00:07:53,151 --> 00:07:57,350
python. Okay? Whether it's pong,
whether it's snake white, their rates,

129
00:07:57,740 --> 00:08:01,310
you know, a side scroller adventure
game, like even Super Mario.

130
00:08:01,311 --> 00:08:05,180
You could build it in pie game. I love it.
Check it out. Read the docs. All right,

131
00:08:05,240 --> 00:08:08,420
so this is how we're going to build
upon the next dependency is going to be

132
00:08:08,421 --> 00:08:11,510
random. All right? A pie game and random,

133
00:08:12,140 --> 00:08:13,760
and I'm going to upload a copy of that.

134
00:08:13,761 --> 00:08:16,430
I'm going to save a copy of this
video and save it to my channel.

135
00:08:16,460 --> 00:08:19,130
So check it out later if
you, if you have to go. Okay.

136
00:08:19,670 --> 00:08:23,300
And so the random is going to help us
define which direction our ball is going

137
00:08:23,301 --> 00:08:27,420
to go in. Okay. All right.

138
00:08:27,421 --> 00:08:32,280
So let's start off by defining some of
our variables defined variables for game.

139
00:08:32,310 --> 00:08:36,030
Okay. The first one is going to be the
frame rate. Okay? So let's just say 60.

140
00:08:36,210 --> 00:08:38,950
That's going to be the frame rate for,
uh,

141
00:08:40,200 --> 00:08:44,940
how fast our game is going to move. Next,
we want to have the size of our window,

142
00:08:44,970 --> 00:08:46,110
our game window.
Okay.

143
00:08:46,200 --> 00:08:51,200
So that's gonna be the window with
and which is going to be 400 pixels.

144
00:08:51,690 --> 00:08:53,910
Uh,
and then window height,

145
00:08:54,720 --> 00:08:59,490
which is to be 400 as well. So it's
going to be a square window, same width,

146
00:08:59,520 --> 00:09:04,230
same height. All right. The next step
is to define the size of our paddle.

147
00:09:04,470 --> 00:09:07,290
Okay. So that the paddle is, uh, you know,

148
00:09:07,640 --> 00:09:12,180
the stick that the ball
hits. Okay? So paddle with a,

149
00:09:12,450 --> 00:09:15,690
and they're going to be the same
for both us and the evil Ai.

150
00:09:15,720 --> 00:09:19,440
They're going to be the same
size, so we're just going
to have to define it once.

151
00:09:19,710 --> 00:09:22,700
We'll say 10 pixels and then uh,

152
00:09:22,740 --> 00:09:26,280
we'll define the height at 60
because the height will be,

153
00:09:26,550 --> 00:09:31,230
it will be longer than y. Right. Okay.
So that's the size of our paddle.

154
00:09:31,380 --> 00:09:33,600
And now we want the size of our ball.

155
00:09:35,850 --> 00:09:36,930
Size of our ball.

156
00:09:38,560 --> 00:09:39,110
Yeah.

157
00:09:39,110 --> 00:09:43,640
Okay. So the size of our ball,
we'll be uh, let's say ball with,

158
00:09:44,510 --> 00:09:48,710
and then
ball height.

159
00:09:51,440 --> 00:09:55,880
It's going to be 10.
All right.

160
00:09:56,060 --> 00:10:00,290
So that's the size of our ball. And now
we want the speed of our paddle and ball.

161
00:10:00,320 --> 00:10:03,770
Okay. So how fast do we want
our paddle and ball to move?

162
00:10:07,170 --> 00:10:10,500
Yeah, the size of our ball. Because
our ball is actually not a circle.

163
00:10:10,501 --> 00:10:15,030
It's a rectangle. It's a very small
rectangle. All right. Yeah, please.

164
00:10:15,031 --> 00:10:18,540
Ball jokes. Go in the comments.
Keep 'em up. I love it. Uh,

165
00:10:18,720 --> 00:10:21,030
I love it when you have big balls.
Here we go.

166
00:10:21,270 --> 00:10:26,190
So the speed of our panel on our bolts.
We want our paddle speed going to be,

167
00:10:26,191 --> 00:10:29,310
let's take two and our ball speed,

168
00:10:29,880 --> 00:10:32,280
which is the x direction,

169
00:10:35,050 --> 00:10:39,350
uh, uh, of our bottle. And
then our ball. Why speed,

170
00:10:40,550 --> 00:10:43,700
which is going to be two.
And so x and y speed.

171
00:10:43,701 --> 00:10:48,020
We have two different speeds for our ball.
What, which direction? X and Y, right?

172
00:10:48,021 --> 00:10:52,070
There's an x, y coordinate plane. And
there's two directions in pike game,

173
00:10:52,071 --> 00:10:56,600
right in our window. We're having a
ball with these bald jokes, aren't we?

174
00:10:56,601 --> 00:11:00,170
I love it. That was
clever to top 1%. Okay,

175
00:11:00,171 --> 00:11:02,750
so now we want to define
our color spectrum.

176
00:11:02,751 --> 00:11:07,310
So we're going to have our RGB colors
or a paddle ball, paddle and ball.

177
00:11:08,130 --> 00:11:11,900
We're going to have, let me just go
up. Uh, what is it we're going to,

178
00:11:11,930 --> 00:11:14,000
we're going to use white,
which is going to be,

179
00:11:14,030 --> 00:11:19,030
what is the color for white
to 55 to 55 and two 55.

180
00:11:19,580 --> 00:11:22,620
That's going to be the color
of our paddle in our ball. Um,

181
00:11:25,960 --> 00:11:27,070
uh,
and

182
00:11:31,660 --> 00:11:35,860
now, uh, we're going to
define are the black,

183
00:11:35,890 --> 00:11:39,790
which is the background for our game.
Zero, zero, zero. That's it. Okay.

184
00:11:39,800 --> 00:11:44,710
Those are our colors. Now let's
initialize our screen, initialize

185
00:11:46,470 --> 00:11:50,200
a, we're going to randomize or let me,
we could randomize our speed. I mean,

186
00:11:50,201 --> 00:11:53,020
it doesn't really, I mean we don't
want to get that complex right now.

187
00:11:53,560 --> 00:11:57,470
So let's just, um, initialize our, uh,

188
00:11:57,940 --> 00:12:01,720
screen. So we're going to
say screen is going to be,

189
00:12:01,930 --> 00:12:04,770
so we're going to use the pipe in
module two, initialize our screen.

190
00:12:05,100 --> 00:12:10,050
And so we're gonna use the set mode,
uh, method of display to set the size.

191
00:12:10,170 --> 00:12:12,450
And we're going to use our
variables that we've created,

192
00:12:12,480 --> 00:12:15,840
our width and our height to
define this screen. Okay?

193
00:12:15,930 --> 00:12:18,090
That's our window with
and our window height.

194
00:12:20,390 --> 00:12:24,620
Okay, great. Now that we've
initialize our screen,

195
00:12:24,860 --> 00:12:28,580
let's, uh, draw our ball. Okay.

196
00:12:28,581 --> 00:12:31,820
So now we can write our first
function here called drop ball.

197
00:12:32,060 --> 00:12:36,800
We're going to draw our ball. It's
going to be a small rectangle. Okay.

198
00:12:37,010 --> 00:12:40,460
And did the two parameters are going to
be the exposition and the wife position,

199
00:12:41,040 --> 00:12:45,450
uh, that we want our Deval,
uh, have, we want to, um,

200
00:12:45,670 --> 00:12:49,040
draw our ball in? Okay. So our ball is,

201
00:12:49,041 --> 00:12:53,530
we're going to define our ball variable
and we're going to use the wrecked

202
00:12:53,540 --> 00:12:58,010
function of Pie game to,
uh, create that rectangle,

203
00:12:58,011 --> 00:13:00,740
that ball rectangle. Okay. Um,

204
00:13:00,800 --> 00:13:05,800
and so let me make sure I didn't miss
spell this and I'm going to say let's,

205
00:13:10,800 --> 00:13:15,110
uh, initialize our rectangle
with art screen as a parameter.

206
00:13:15,170 --> 00:13:19,160
And then, um, sorry, not our screen.

207
00:13:19,161 --> 00:13:23,990
We're going to use our exposition or
wipe position that we input as parameters

208
00:13:24,320 --> 00:13:28,880
where we want to start off with.
And then the width

209
00:13:30,580 --> 00:13:34,730
or with uh,
four.

210
00:13:36,430 --> 00:13:41,320
Oh, Suraj for president. I would, I would,
I would be down actually I would be down.

211
00:13:41,920 --> 00:13:44,680
Uh, that would be awesome.
I would a everything,

212
00:13:44,790 --> 00:13:49,360
I would just make everything run on code.
It would be amazing if I was precedent.

213
00:13:49,390 --> 00:13:53,470
Okay. So future plans, future plans.
Let's make this youtube thing work first,

214
00:13:53,770 --> 00:13:55,570
ball width and then ball height.

215
00:13:56,810 --> 00:13:57,643
MMM.

216
00:13:58,870 --> 00:14:03,740
Uh, you guys are so awesome man. I
really, I love you guys. Seriously.

217
00:14:03,741 --> 00:14:08,180
Like I had my ups and downs in life.
Like I've been feeling pretty down lately,

218
00:14:08,181 --> 00:14:10,940
but like just the fact that like,
you know, I've got you guys,

219
00:14:10,950 --> 00:14:14,150
it makes me feel better, so, so
thank you. Okay, so here we go.

220
00:14:14,420 --> 00:14:18,470
Make America learning. And I know
I've got to focus. I know I just,

221
00:14:18,471 --> 00:14:23,330
the conference are so
amazing. Oh, okay. Anyway,

222
00:14:23,331 --> 00:14:27,020
so that's our ball. And now we're going
to draw our ball. So Pie game dot draw.

223
00:14:27,021 --> 00:14:30,050
Okay, so we're going to draw our
ball using the draw function.

224
00:14:30,260 --> 00:14:33,890
We've already defined the rectangle and
we're going to use our screen, our color,

225
00:14:33,920 --> 00:14:36,650
and then our ball that we just defined
to, to find our ball. Okay. That's it.

226
00:14:36,651 --> 00:14:37,610
That's how we draw our ball.

227
00:14:38,770 --> 00:14:39,030
Okay.

228
00:14:39,030 --> 00:14:41,400
Okay, now we're going through, thank you.

229
00:14:41,550 --> 00:14:45,420
Now we're going to draw our first
paddle on. Our first pedal is us. Okay.

230
00:14:45,421 --> 00:14:49,650
That's us slash R as us and
we're going to learn over time.

231
00:14:50,430 --> 00:14:51,440
Okay,
so our pedal,

232
00:14:51,441 --> 00:14:55,120
we're going to draw a paddle one and
we're going to use the first why the

233
00:14:55,150 --> 00:14:58,850
position as our parameter. Okay? So
we're going to do the same thing.

234
00:14:58,851 --> 00:15:03,290
We're going to create our paddle using
the Pi. Gamed, wrecked meth method.

235
00:15:03,500 --> 00:15:04,490
And then we're going to use the,

236
00:15:04,700 --> 00:15:08,750
we're going to use our paddle
buffer as the first parameter,

237
00:15:08,780 --> 00:15:13,460
and then our y position, and then
our width and height. Okay. That,

238
00:15:13,490 --> 00:15:17,630
so that's going to be how big it's going
to be and where it's going to start.

239
00:15:17,750 --> 00:15:21,950
And the reason I used a buffer is to
show that it's not so that it doesn't hit

240
00:15:21,951 --> 00:15:26,590
the edge of the screen. All
right? Blah, blah, blah, blah,

241
00:15:26,591 --> 00:15:30,820
blah. Okay, so that's our ball. And now
we're going to dry. Just like before.

242
00:15:30,821 --> 00:15:32,420
It's a pie game.
Dot draw.

243
00:15:34,100 --> 00:15:34,770
Okay.

244
00:15:34,770 --> 00:15:39,210
MMM. Dot. Recht and it's
going to be white as well.

245
00:15:39,240 --> 00:15:41,610
Screen white paddle one.

246
00:15:43,480 --> 00:15:44,160
Okay.

247
00:15:44,160 --> 00:15:49,110
All right. Um, uh, okay.

248
00:15:49,111 --> 00:15:51,960
So that's our first paddle.
All right.

249
00:15:52,350 --> 00:15:57,090
Now we're going to do the same thing
for our next paddles and draw paddle to,

250
00:15:57,660 --> 00:16:00,510
that's going to be our evil Ai.
That's the guy we want to beat.

251
00:16:00,570 --> 00:16:04,860
He's going to be really good. We want
to beat this guy. All right. He's on,

252
00:16:04,890 --> 00:16:07,920
he's on some shit. Okay. See,

253
00:16:07,921 --> 00:16:11,130
I never know if I can or
cannot occur or if I should.

254
00:16:11,220 --> 00:16:14,970
So I just do it anyway because like
whatever, you know what I'm saying?

255
00:16:14,971 --> 00:16:19,200
I have nothing to lose. Okay,
so paddle to wipe position.

256
00:16:20,050 --> 00:16:24,390
All right. So, uh, okay.

257
00:16:24,720 --> 00:16:28,170
Got to focus here. I'm going to
answer you guys but I've got to focus.

258
00:16:28,500 --> 00:16:33,330
So now paddle to is going to be um,
uh,

259
00:16:33,331 --> 00:16:34,230
we're going to do the same thing.

260
00:16:34,231 --> 00:16:38,190
We're going to draw it using direct
function and then we're going to um,

261
00:16:38,610 --> 00:16:43,610
say window with minus paddle buffer so
it doesn't hit the edge of the screen.

262
00:16:45,780 --> 00:16:50,780
And then we're going to say a
minus paddle with right petal with,

263
00:16:54,960 --> 00:16:59,520
and then paddle to y
position and then paddle.

264
00:16:59,580 --> 00:17:02,790
And so then the, this, the
size of it. Paddle with

265
00:17:05,060 --> 00:17:09,120
the paddle. Hi. Okay, I
got to keep going here.

266
00:17:09,910 --> 00:17:10,231
All right.

267
00:17:10,231 --> 00:17:15,231
And then we're going to drive high game
dot draw direct and then the screen on

268
00:17:16,771 --> 00:17:19,470
their color and then our panel.
Okay.

269
00:17:23,830 --> 00:17:27,970
I should use it. Linux machine.
I agree. I agree. I agree.

270
00:17:28,420 --> 00:17:32,440
I will eventually. I, I will. Okay,

271
00:17:32,470 --> 00:17:36,760
so now here comes the heart
function. Okay. Okay. Here
it comes. The heart function.

272
00:17:37,330 --> 00:17:39,850
We're going to update this ball.
Okay.

273
00:17:40,090 --> 00:17:42,610
It says the function where we
update the position of the ball.

274
00:17:42,850 --> 00:17:45,640
So we're going to say update ball and
we're going to take in parameters.

275
00:17:45,641 --> 00:17:47,970
The parameters are going to
beat the position of our, uh,

276
00:17:48,220 --> 00:17:51,360
both of our paddles are ball and the
direction that the ball is going.

277
00:17:51,390 --> 00:17:53,130
Those are going to be our perimeters.
So we're going to take,

278
00:17:53,131 --> 00:17:54,420
those were going to say paddle one.

279
00:17:56,940 --> 00:17:57,773
Okay.

280
00:17:58,400 --> 00:18:03,230
My position paddle too.
Um,

281
00:18:03,430 --> 00:18:04,660
why position?

282
00:18:06,610 --> 00:18:07,443
MMM.

283
00:18:08,320 --> 00:18:11,110
And then Paul Exposition,

284
00:18:11,710 --> 00:18:14,260
we're going to say the ball wide position.
Those are the,

285
00:18:14,261 --> 00:18:16,900
that's the position of our,
our ball

286
00:18:19,520 --> 00:18:24,150
position. The window with
is spelled wrong, right?

287
00:18:24,151 --> 00:18:27,630
I'm going to blind 40. Let's see, where
is it? When did you do that? There you go.

288
00:18:27,631 --> 00:18:31,560
Thank you. Appreciate it. That's
spelled wrong. All y position,

289
00:18:31,810 --> 00:18:36,400
ball exposition and
Eh,

290
00:18:37,450 --> 00:18:42,210
ah, line 40. You caps are. Thank you.
Thank you. Appreciate it. Appreciate it.

291
00:18:43,050 --> 00:18:44,130
Boom, boom. All right,

292
00:18:44,520 --> 00:18:47,640
so that's a position of our ball and
then we want a direction of our ball.

293
00:18:47,750 --> 00:18:52,680
The ball's direction is going to be
the ball x direction and then the ball.

294
00:18:52,681 --> 00:18:56,940
Why Direction? Okay. So
those are our parameters.

295
00:18:56,941 --> 00:18:58,440
And now we can just go
ahead and get started.

296
00:19:00,670 --> 00:19:02,160
I am 32 instead of racks.

297
00:19:02,190 --> 00:19:06,960
Typo fixed 36 capital also
capital Typo fixed at that.

298
00:19:06,961 --> 00:19:08,520
That the, okay. So now, okay,

299
00:19:09,810 --> 00:19:12,650
we have got to get through with it.
Okay,

300
00:19:12,651 --> 00:19:17,160
so we're going to update the x and
y position. Update X and y position.

301
00:19:17,760 --> 00:19:21,780
So the balls, so we went up to the x and
y position of our ball. Okay. So that's,

302
00:19:21,810 --> 00:19:24,450
that's how we're updating the
speed of our ball and where it is,

303
00:19:24,650 --> 00:19:26,690
it's a ball exposition.
It's going to,

304
00:19:26,700 --> 00:19:29,760
we're going to take the original position
or we're going to add the direction

305
00:19:29,761 --> 00:19:34,650
that it's going in and we're going to
multiply it by the speed of the ball.

306
00:19:35,040 --> 00:19:38,340
Okay? And so that point, you update
the position of our ball. Okay.

307
00:19:38,341 --> 00:19:41,890
Depending on how fast it's going
and where it's going. All right,

308
00:19:42,120 --> 00:19:46,980
so Paul White position
plus.

309
00:19:48,690 --> 00:19:49,523
MMM,

310
00:19:52,180 --> 00:19:57,180
a ball I direction times ball.

311
00:19:57,310 --> 00:20:01,210
Why speed? Okay. All right.
There we go with that.

312
00:20:01,690 --> 00:20:05,560
And we're going to say the score,
it's going to be zero.

313
00:20:05,561 --> 00:20:06,940
It's going to start off with no score.

314
00:20:07,000 --> 00:20:10,210
I mean the score is going to be zero
and we're going to update the score and

315
00:20:10,211 --> 00:20:12,160
we're going to return the score as well,
depending on

316
00:20:15,280 --> 00:20:18,640
all right, I'll try not to explain
every step. I'm balls. Exactly.

317
00:20:18,910 --> 00:20:23,380
So now we're going to check for a
collision. Okay, so this is going,

318
00:20:23,410 --> 00:20:27,190
going to check for collision. And if
the, if the ball hits the left side,

319
00:20:27,280 --> 00:20:29,730
then our learning agent, we'll
switch the direction, uh,

320
00:20:29,980 --> 00:20:34,360
or the ball's going to a ball is
going to switch the direction. Okay,

321
00:20:34,420 --> 00:20:37,730
so it's going to be a bunch
of if statements here. So
we're going to say, um,

322
00:20:39,160 --> 00:20:44,160
if all exposition is less than the paddle
buffer plus paddle with and the ball,

323
00:20:48,161 --> 00:20:53,161
why position plucks the ball height is
greater than or equal to the paddles

324
00:20:56,230 --> 00:21:00,670
position and a balls life position.

325
00:21:02,100 --> 00:21:02,933
Um,

326
00:21:05,380 --> 00:21:07,450
minus the ball height.

327
00:21:08,980 --> 00:21:11,620
It's less than or equal to the paddle.
One stitching.

328
00:21:16,160 --> 00:21:21,160
Why position plus the paddle heights.

329
00:21:26,090 --> 00:21:30,590
All right, so this says, okay, so I'm
going to write down what this means.

330
00:21:30,591 --> 00:21:34,790
This means we're going to check
for a collision. And if the ball,

331
00:21:35,600 --> 00:21:40,290
it's the left side.
Um,

332
00:21:40,360 --> 00:21:42,520
if the ball golfers,
a little hits the left side,

333
00:21:42,521 --> 00:21:46,870
then we then switch direction.
So we're going to say,

334
00:21:47,590 --> 00:21:48,423
um,

335
00:21:49,240 --> 00:21:54,040
a ball x direction.
It's one.

336
00:21:54,700 --> 00:21:57,640
Okay else else? If, if it doesn't,

337
00:21:57,820 --> 00:22:01,600
so then the ball's position,
it's less than or equal to zero.

338
00:22:01,870 --> 00:22:06,700
Then we're going to, um,
having negative score.

339
00:22:06,970 --> 00:22:10,270
So we're going to say we're going to
change the direction of the ball. Um,

340
00:22:10,380 --> 00:22:13,240
and then we're going to say we're gonna
make the score equal to negative one.

341
00:22:13,300 --> 00:22:13,601
Okay?

342
00:22:13,601 --> 00:22:16,510
And we're going to return and we want to
return whatever we've just calculated.

343
00:22:16,511 --> 00:22:17,650
So we're going to return to score.

344
00:22:17,800 --> 00:22:20,860
We're going to return the paddles
position for both of them.

345
00:22:20,990 --> 00:22:22,990
We're going to return the ball's position.

346
00:22:23,840 --> 00:22:26,500
We're going to both the x and y position,

347
00:22:26,820 --> 00:22:30,340
and we're going to return the direction
of the ball. We want to return.

348
00:22:30,610 --> 00:22:35,560
That's the x and y direction
of football. Boom. All right.

349
00:22:39,160 --> 00:22:43,960
This is crazy. Okay? There's a lot of
variables going on right now. Okay. Um,

350
00:22:44,020 --> 00:22:48,770
and then,
all right.

351
00:22:48,980 --> 00:22:51,500
Can't see code. I know, right? It's

352
00:22:55,610 --> 00:22:59,000
okay. Just, we're not gonna be able
to see all the code because we have a,

353
00:22:59,060 --> 00:23:04,060
we have to switch between like how big
the text is and like if there's a trade

354
00:23:04,591 --> 00:23:09,290
off between how big the text is and uh,
how visible it is.

355
00:23:09,291 --> 00:23:12,410
Thank you. It's the score is
negative one. Thank you. All right,

356
00:23:13,100 --> 00:23:15,020
now we want to check if
it hits the other side.

357
00:23:15,021 --> 00:23:20,021
So if ball exposition is greater
than or equal to the window with

358
00:23:21,630 --> 00:23:26,630
window with minus paddle with
his paddle buffer and the ball,

359
00:23:29,391 --> 00:23:33,830
why position
plus the ball height

360
00:23:35,690 --> 00:23:40,610
greater than or equal to
paddle to y position and ball.

361
00:23:40,640 --> 00:23:43,760
Why? Position minus.

362
00:23:45,570 --> 00:23:46,710
Okay.
Oh,

363
00:23:48,330 --> 00:23:49,163
okay.

364
00:23:52,770 --> 00:23:55,890
Ball minus ball height

365
00:23:57,900 --> 00:24:00,180
is greater than equal to paddle too.

366
00:24:02,220 --> 00:24:03,053
Yeah.

367
00:24:03,200 --> 00:24:07,100
Why position plus paddle height.
Okay.

368
00:24:07,101 --> 00:24:11,360
Thank effing God that we are done
with those two statements. Okay.

369
00:24:11,990 --> 00:24:13,640
Fuck.
Um,

370
00:24:17,570 --> 00:24:18,261
right.
Okay.

371
00:24:18,261 --> 00:24:21,480
So we did that and now we're
going to switch the direction
of the ball. So if it,

372
00:24:21,490 --> 00:24:22,720
if it's,
so this is basically,

373
00:24:22,721 --> 00:24:26,090
it means if it hits the other side then
we want to switch directions again.

374
00:24:26,091 --> 00:24:28,760
Right? So now we're accounting
for both sides that it hits.

375
00:24:28,970 --> 00:24:33,680
So ball x direction equals negative
one. All right. And then else,

376
00:24:33,681 --> 00:24:37,880
if it doesn't hit it so else,
if the ball x position,

377
00:24:37,970 --> 00:24:40,250
it's greater than or
equal to the window with

378
00:24:43,140 --> 00:24:44,220
minus ball with.

379
00:24:49,410 --> 00:24:50,243
Okay.

380
00:24:50,580 --> 00:24:52,620
Then we want the positive scores.

381
00:24:52,621 --> 00:24:57,621
So at the Baldor x direction
equals negative one.

382
00:24:58,920 --> 00:25:03,720
Um, and the score is one. And now
we're going to return that same shit,

383
00:25:04,140 --> 00:25:08,970
right that we returned up here.
That same thing. And that score,

384
00:25:08,971 --> 00:25:11,640
it's here. And now I'm going to look
at the comments for a second. Boom.

385
00:25:13,700 --> 00:25:14,430
Okay.

386
00:25:14,430 --> 00:25:19,030
Uh, hi. Hi. Uh, what am I saying?
There's too much lag. All right.

387
00:25:19,031 --> 00:25:23,370
This salty ball exposition.
Alright, here we go. So now,

388
00:25:23,810 --> 00:25:24,643
um,

389
00:25:28,070 --> 00:25:28,903
okay,

390
00:25:30,150 --> 00:25:33,390
cool. So now, um, okay,

391
00:25:33,391 --> 00:25:35,340
so let me just explain what
I just wrote and let me,

392
00:25:35,370 --> 00:25:39,310
let me make it smaller for a second.
Hold on.

393
00:25:41,020 --> 00:25:44,660
We're, we're checking for a collision
here. Okay. So we're saying, uh,

394
00:25:44,710 --> 00:25:47,980
if the ball hits the left side,
then switched directions.

395
00:25:48,040 --> 00:25:51,160
If the ball hits the right side,
then switched directions again.

396
00:25:51,161 --> 00:25:54,940
So it's basically the logic is, you
know, if it hits one of the sides,

397
00:25:54,970 --> 00:25:58,420
then we want to switch directions for the
ball. All right? That's so that's all.

398
00:25:59,490 --> 00:26:04,180
All right. Break the line, break
the line, break the line. Great.

399
00:26:04,240 --> 00:26:07,900
The line. Lots of line breaks
here. Okay, there we go.

400
00:26:10,390 --> 00:26:11,440
All right.

401
00:26:13,700 --> 00:26:17,270
And I'll keep the font size and I'll
break this line and I'll break that line

402
00:26:17,300 --> 00:26:21,110
and I'll just fit it all in
here. All right. Boom, boom,
boom, boom, boom, boom, boom.

403
00:26:22,210 --> 00:26:25,880
All right. Okay, so now, um,

404
00:26:26,300 --> 00:26:28,010
oh and there's one more
thing we need to account for.

405
00:26:28,040 --> 00:26:30,860
What if the ball hits the top?
What if the ball hits the top?

406
00:26:30,890 --> 00:26:33,330
We don't know what to do then. Right?
We have to account for that though.

407
00:26:33,500 --> 00:26:37,700
If the ball's why position, uh,
it's who I center equal to zero,

408
00:26:38,000 --> 00:26:39,890
then we want to,
um,

409
00:26:40,400 --> 00:26:43,010
make that wide position equal zero.

410
00:26:43,080 --> 00:26:46,890
So then we want to change the direction
of it. Uh, and we want to say,

411
00:26:48,900 --> 00:26:49,733
MMM,

412
00:26:51,570 --> 00:26:56,570
I'll see if all white position less than
or equal to the window height minus the

413
00:26:58,941 --> 00:27:03,340
ball height.
All right?

414
00:27:03,341 --> 00:27:06,500
So if it hits the bottom,
then we want to change position as well.

415
00:27:06,530 --> 00:27:11,530
So ball by position equals
window height minus ball height.

416
00:27:14,180 --> 00:27:17,090
Okay. And so then we want
to make the white direction

417
00:27:19,890 --> 00:27:24,730
all y direction equals negative one.

418
00:27:25,160 --> 00:27:29,990
And eventually we returned the score.
It returned the score.

419
00:27:30,410 --> 00:27:33,140
This is cute player Pong.
Exactly. But one of them is an AI,

420
00:27:33,170 --> 00:27:37,610
an evil AI that's already really good.
And one of them, it's an AI that uh,

421
00:27:38,300 --> 00:27:41,600
we want to make better.
Okay.

422
00:27:43,620 --> 00:27:44,453
Huh?

423
00:27:45,840 --> 00:27:49,140
I'm going to fix the colon's.
Yes, thank you. Boom.

424
00:27:49,890 --> 00:27:54,240
Um, all right. Anyway, so now,
okay, that's it for that method.

425
00:27:54,270 --> 00:27:57,000
Thankfully we are done with that method.
Oh my God,

426
00:27:57,001 --> 00:28:01,860
that was so intense. Okay, so
now we need, we have two more,

427
00:28:02,070 --> 00:28:06,330
uh, start to more functions
to do. Okay. So let's do it.

428
00:28:07,620 --> 00:28:12,120
Yeah, it's AI versus AI is a bad
AI and then a good AI. That's us.

429
00:28:12,150 --> 00:28:13,800
That's us.
We're going to get better over time.

430
00:28:13,801 --> 00:28:18,560
It's already going to be good
from the start. All right,

431
00:28:18,561 --> 00:28:23,330
so here we go.
Update paddle one.

432
00:28:24,470 --> 00:28:26,120
Kind of update the pedal position

433
00:28:29,160 --> 00:28:32,610
if we move up. So if the ball moves
up, so that's going to be [inaudible].

434
00:28:32,790 --> 00:28:36,930
So if the action is one,
so it's depending on where we're moving.

435
00:28:37,050 --> 00:28:38,790
It's like which direction we're moving in.

436
00:28:39,090 --> 00:28:42,690
We want to update the position of our
paddle, right? So we could go up or down,

437
00:28:42,691 --> 00:28:47,160
right? So the action is just an array of
where it's going. Right? So up or down.

438
00:28:50,520 --> 00:28:52,720
All right. So, um, paddle one.

439
00:28:53,840 --> 00:28:54,540
Okay.

440
00:28:54,540 --> 00:28:58,890
Why position equal. So we're going to
update the physician of our paddle, um,

441
00:28:59,490 --> 00:29:03,990
and we're going to subtract
the speed of it. All right.

442
00:29:04,230 --> 00:29:08,340
And we're going to add this colon.
So now if it moved up,

443
00:29:08,370 --> 00:29:11,130
so now it's,
if it moves down.

444
00:29:13,430 --> 00:29:14,263
Okay.

445
00:29:19,590 --> 00:29:23,160
If action as two equals one.

446
00:29:23,190 --> 00:29:26,970
So if we try to move down and we went
update the position to move the paddle

447
00:29:27,360 --> 00:29:31,670
down. Okay. Paddle fine.

448
00:29:31,740 --> 00:29:36,680
Why position? Close paddled speed. Yeah,

449
00:29:39,000 --> 00:29:42,940
don't let it move off the screen.
Okay.

450
00:29:42,941 --> 00:29:47,770
So if the paddle, so if it, if it tried
to go above where we want it to go,

451
00:29:48,530 --> 00:29:50,660
Dan were,
so lesson zero

452
00:29:53,420 --> 00:29:57,420
then we're going to update that. Let me
see where we are right now. Okay. Cool.

453
00:29:59,100 --> 00:30:00,450
So paddle one

454
00:30:02,310 --> 00:30:04,590
by position equals zero.

455
00:30:04,980 --> 00:30:09,980
And then I'm going to say battle on why
positions greater than window height

456
00:30:13,140 --> 00:30:15,450
minus paddle height.

457
00:30:21,130 --> 00:30:21,963
Okay.

458
00:30:22,900 --> 00:30:23,620
Okay.

459
00:30:23,620 --> 00:30:28,620
So now we have taken into account
every possible scenario that this,

460
00:30:30,310 --> 00:30:33,340
this our paddle could move in.
Okay.

461
00:30:34,990 --> 00:30:37,140
All right.
Um,

462
00:30:37,240 --> 00:30:40,330
thanks acrylic love
back from San Francisco.

463
00:30:40,630 --> 00:30:42,940
So we want to do the same
thing for paddle too, right?

464
00:30:42,941 --> 00:30:46,480
So I'm just going to copy this method
or function and we're gonna do the same

465
00:30:46,481 --> 00:30:51,320
thing but for paddle to right. And
the differences were going to say, um,

466
00:30:52,750 --> 00:30:54,730
all y position.

467
00:30:56,620 --> 00:30:58,180
And uh,

468
00:30:58,210 --> 00:31:02,000
this is going to be pedal to battle two

469
00:31:03,690 --> 00:31:04,530
oh two.

470
00:31:05,970 --> 00:31:06,803
Okay.

471
00:31:08,300 --> 00:31:13,050
All right. Now we can define our
pong class. The game of Pong,

472
00:31:13,080 --> 00:31:13,913
right?

473
00:31:14,700 --> 00:31:19,050
We are moving really fast here where
we haven't even gotten to our AI yet.

474
00:31:19,110 --> 00:31:23,190
Let's define our punk class.
F in it.

475
00:31:24,440 --> 00:31:25,273
Okay.

476
00:31:25,840 --> 00:31:30,760
Self 64 Colin Colin at 64.
Where are you talking about? No,

477
00:31:30,761 --> 00:31:35,200
I didn't. Okay, so now we
want to define our game. Okay.
So this sort of game class,

478
00:31:35,210 --> 00:31:38,830
this, well, now we have our functions.
We want to define our pong yet. Okay,

479
00:31:38,831 --> 00:31:42,270
so we're going to start off by saying um,
um,

480
00:31:43,000 --> 00:31:46,750
by saying random number for the
initial direction of the ball,

481
00:31:47,420 --> 00:31:48,530
where do we want our bolt to go?

482
00:31:48,531 --> 00:31:52,460
We'll define a random number at
using the random grant in function.

483
00:31:53,150 --> 00:31:58,030
Um,
I know it's a pretty long program.

484
00:31:58,031 --> 00:32:01,990
This is a pretty long program.
I'm thinking like let's just keep going.

485
00:32:01,991 --> 00:32:05,860
We're just, we just need to keep
going here. So random answer.

486
00:32:05,861 --> 00:32:07,020
We're going to start from Jared and ninth.

487
00:32:07,021 --> 00:32:09,190
It's going to be a random number
between zero and none. Okay.

488
00:32:09,191 --> 00:32:12,220
And now we're going to keep the
score in order to keep the score.

489
00:32:12,280 --> 00:32:15,220
We're going to define Itali
variable self dot. Cali equals zero.

490
00:32:16,090 --> 00:32:21,090
Now we want to initialize the positions
of our paddle positions of our panel.

491
00:32:26,110 --> 00:32:28,940
All right, so now we're
going to say itself. Dot.

492
00:32:28,941 --> 00:32:33,941
Padel one position is window
height divided by two minus
paddle hides divided by

493
00:32:37,581 --> 00:32:41,080
two and self dot Padel.

494
00:32:42,180 --> 00:32:42,640
Yeah,

495
00:32:42,640 --> 00:32:46,930
is window heights. So it's going to
start off in the middle. Basically.

496
00:32:46,931 --> 00:32:48,250
That's why we're dividing by two.

497
00:32:48,400 --> 00:32:52,790
We wanted to start off in the middle
window height by two minus paddle height

498
00:32:53,380 --> 00:32:54,213
divided by two.

499
00:32:56,010 --> 00:32:56,730
Okay.

500
00:32:56,730 --> 00:32:57,490
All right,

501
00:32:57,490 --> 00:33:02,290
so now we wanted to find the
ball direction all direction,

502
00:33:02,980 --> 00:33:06,610
definition, and we're going to
say itself. Dot. Ball x direction.

503
00:33:07,120 --> 00:33:11,320
It's one self doc ball. Why
Direction? It's going to be one.

504
00:33:11,590 --> 00:33:13,870
And then the starting point for our ball.

505
00:33:14,200 --> 00:33:18,790
The starting point will be
the self doc ball exposition.

506
00:33:22,740 --> 00:33:26,070
It's going to be the window height divided
by two and then so it's kind of start

507
00:33:26,071 --> 00:33:30,030
off in the middle as well, right?
So ball with divided by two.

508
00:33:32,940 --> 00:33:33,773
All right,

509
00:33:35,870 --> 00:33:36,710
now

510
00:33:39,780 --> 00:33:43,350
we're going to say

511
00:33:45,420 --> 00:33:49,020
um, two more functions. Okay.

512
00:33:49,530 --> 00:33:53,820
We're going to define the
get present frame. All right.

513
00:33:53,850 --> 00:33:56,260
These are two more functions
and we're done. Cool.

514
00:33:56,310 --> 00:34:00,600
In 94 and one oh nine I
remember that. Okay, so,

515
00:34:00,840 --> 00:34:02,850
so now we want to get the present frame.

516
00:34:02,851 --> 00:34:05,040
So that means the frame
that we are currently at,

517
00:34:05,310 --> 00:34:06,750
why are we defining this function?

518
00:34:06,810 --> 00:34:10,920
Because we want to feed our reinforcement
learning algorithm, the pixels, right?

519
00:34:10,921 --> 00:34:14,190
So we need, in order to get the pixels,
we need to get the pixels from the game.

520
00:34:14,730 --> 00:34:18,180
All right?
So for,

521
00:34:21,490 --> 00:34:22,470
okay,
so for,

522
00:34:23,690 --> 00:34:28,270
for each frame we need to call
the event queue. All right,

523
00:34:28,271 --> 00:34:30,400
so pie game dot event dot punk.

524
00:34:31,180 --> 00:34:36,180
Like this is going to be like if we need
to repaint our window or anything and

525
00:34:38,830 --> 00:34:42,670
we're going to, we're going to
repaint if we need to run anything.

526
00:34:42,671 --> 00:34:46,390
So that's why we have pump. So now
we want to make our background black.

527
00:34:46,740 --> 00:34:49,930
We want to make our background black,
so we're going to run our fill function.

528
00:34:50,080 --> 00:34:53,500
Okay, so screen dot Phil and
we're going to say black.

529
00:34:53,650 --> 00:34:58,600
So that's what's going to be our
background. All right. I know it might,

530
00:34:58,601 --> 00:35:01,270
it might just explode when I
run it, but that's okay. Draw.

531
00:35:01,300 --> 00:35:03,550
Now we're going to draw our paddles.
So we're going to say drop.

532
00:35:03,580 --> 00:35:05,830
So we're going to call the
functions we just made, right?

533
00:35:05,920 --> 00:35:08,860
We're going to draw our paddles and
we're gonna use our [inaudible] physician

534
00:35:08,980 --> 00:35:12,040
first. And then we're going to
draw the next paddle paddle too.

535
00:35:12,250 --> 00:35:16,150
And we're going to say self
dot Padel to white position.

536
00:35:16,300 --> 00:35:19,660
Now that we've drawn our paddles,
let's draw our ball and guess what we,

537
00:35:19,810 --> 00:35:22,810
we made a draw ball function,
let's call it. All right,

538
00:35:22,811 --> 00:35:26,140
this is everything we've just done and
we're going to say it's going to be at

539
00:35:26,470 --> 00:35:28,030
the exposition.
We're going initial,

540
00:35:28,120 --> 00:35:31,820
we're going to initialize
it at that exposition and
we're going to use that wide

541
00:35:31,821 --> 00:35:36,760
position as well. Okay? Now
we've grown our ball, we've done,

542
00:35:36,761 --> 00:35:37,890
our paddles are drawn ball,

543
00:35:37,900 --> 00:35:42,900
we'd on our screen and now we went to
take all of those pixels from the entire

544
00:35:42,991 --> 00:35:45,870
game and we're going to return that.
And how are we going to do that? Well,

545
00:35:45,871 --> 00:35:48,630
let's define what's the
binary variable called? Let's,

546
00:35:48,720 --> 00:35:53,220
let's say we want to get pixels. So let's
define our variable call image data.

547
00:35:53,640 --> 00:35:55,740
Okay? We're going to define
a variable called image data.

548
00:35:55,741 --> 00:36:00,741
And image data is going to use the use
the array three d function of pie game to

549
00:36:01,111 --> 00:36:03,780
get the pixels from the screen.

550
00:36:03,930 --> 00:36:08,070
So we're going to say surf array
dot array three d. All right.

551
00:36:08,100 --> 00:36:12,300
And we're going to say pie game
dot display dot get surface.

552
00:36:16,920 --> 00:36:18,640
That's going to get all of our pixels.

553
00:36:18,730 --> 00:36:23,230
Now we want to update the window and we're
going to say pie game dot display dot

554
00:36:23,231 --> 00:36:24,064
flip.

555
00:36:28,170 --> 00:36:30,920
All right, Leonardo, I'll
definitely take that into account.

556
00:36:32,600 --> 00:36:35,840
We're going to update our window and
now we want to return the surface data.

557
00:36:37,100 --> 00:36:40,670
Return the screen data.
All right,

558
00:36:40,671 --> 00:36:43,280
so we're going to return image data.

559
00:36:45,610 --> 00:36:46,443
Okay.

560
00:36:46,730 --> 00:36:50,060
Um, exactly. Okay, so that's, that's um,

561
00:36:50,120 --> 00:36:54,610
that's going to return the screen
data and we want one more. Okay. Uh,

562
00:36:54,680 --> 00:36:57,690
we're going to want one more
function to get the next frame. Uh,

563
00:36:57,900 --> 00:37:00,840
so it's going to be death yet.
Next frame.

564
00:37:02,390 --> 00:37:02,760
Okay.

565
00:37:02,760 --> 00:37:03,593
Um,

566
00:37:04,680 --> 00:37:08,880
and we want to use self and
we want to use action. Okay.

567
00:37:08,970 --> 00:37:12,570
And the reason that self enacting are
going to be our two parameters. Action.

568
00:37:12,600 --> 00:37:17,340
We're going to use action because the
action is the like what to what direction

569
00:37:17,341 --> 00:37:18,330
we want to move in.
All right?

570
00:37:18,331 --> 00:37:21,480
And we're going to define this later
when we create our reinforcement learning

571
00:37:21,481 --> 00:37:25,350
algorithm. So for this, we
want to, uh, do the same,

572
00:37:25,410 --> 00:37:26,550
we're going to start off the same way.

573
00:37:26,551 --> 00:37:31,410
We're going to say pie game.events
stop pump to uh, call the event queue.

574
00:37:31,680 --> 00:37:35,340
And then we're going to fill
the background screen and
just like we did before,

575
00:37:35,760 --> 00:37:39,210
because it's for the next frame frame.
Thank you.

576
00:37:43,460 --> 00:37:47,550
Um,
and sorrow of you're just wait,

577
00:37:47,570 --> 00:37:49,880
we're almost done with it
or give in four minutes.

578
00:37:49,881 --> 00:37:51,680
We'll be done with this and we'll
get to the reinforcement stuff.

579
00:37:51,681 --> 00:37:54,050
That's going to be super interesting.
Okay. Just, just hold tight.

580
00:37:54,110 --> 00:37:58,100
So now we're going to update our paddle
and we're going to say self dot Padel

581
00:37:58,101 --> 00:38:00,200
one wipe position.
Um,

582
00:38:01,460 --> 00:38:03,800
and then we're going to update our
paddle using the paddle method.

583
00:38:03,801 --> 00:38:08,130
We just define and we're going to say,
uh,

584
00:38:08,270 --> 00:38:09,500
we're going to say

585
00:38:12,160 --> 00:38:17,160
the action and then the action is
going to be fed back to us from our

586
00:38:17,231 --> 00:38:20,860
reinforcement learning algorithm that
we, that we already do. All right.

587
00:38:22,340 --> 00:38:26,640
Action is going to be,
hi victor. Thank you. Um,

588
00:38:29,410 --> 00:38:33,310
the action and then itself.
Dot. Padel one wipe position.

589
00:38:34,630 --> 00:38:35,230
All right.

590
00:38:35,230 --> 00:38:40,230
And then we want to say self
dot Padel one wife position.

591
00:38:41,921 --> 00:38:45,940
We filled our screen. We
want to draw our paddle, um,

592
00:38:46,870 --> 00:38:50,320
one self dot Padel one wipe position.

593
00:38:50,650 --> 00:38:52,740
And then we want to update the,

594
00:38:52,910 --> 00:38:55,960
the position of itself that
paddle to wipe position.

595
00:38:56,080 --> 00:38:58,420
We're going to update the
position of the Evil Ai, right?

596
00:38:59,700 --> 00:39:00,533
MMM.

597
00:39:02,960 --> 00:39:07,290
By two people's update. Paddle too. Boom.

598
00:39:07,291 --> 00:39:11,700
And then self dot Padel PYP
white position. Self dot ball.

599
00:39:13,010 --> 00:39:13,843
MMM.

600
00:39:15,510 --> 00:39:20,190
Why position? All right. So, okay,

601
00:39:20,220 --> 00:39:24,390
so that's going to update both of
our paddles over time. And then, um,

602
00:39:25,230 --> 00:39:29,650
we want to draw the
ball. So draw a ball. Um,

603
00:39:30,060 --> 00:39:32,010
self dot ball exposition,

604
00:39:34,230 --> 00:39:37,050
self doc ball.
Why position?

605
00:39:37,560 --> 00:39:40,680
Now we want to get the surface data
again and so we're going to do the same

606
00:39:40,681 --> 00:39:42,840
thing that we did before.
We're going to get the surface data.

607
00:39:42,970 --> 00:39:45,840
I can just go ahead and
copy and paste that and then

608
00:39:47,240 --> 00:39:47,660
okay.

609
00:39:47,660 --> 00:39:49,370
Uh,
update the window.

610
00:39:49,400 --> 00:39:54,400
So Pike in the flip just like we did
before and then return it and that's it.

611
00:39:54,800 --> 00:39:58,730
Okay. So that um, we're
going to say pie game. Oh.

612
00:39:58,731 --> 00:40:00,590
And we want to record our Cali,
right self.

613
00:40:00,591 --> 00:40:03,440
Dot Talley is going to be whatever
we are plucks the score that we've,

614
00:40:03,890 --> 00:40:04,940
that we've added.
Okay.

615
00:40:05,750 --> 00:40:09,020
And now I know pet pee pee,

616
00:40:09,021 --> 00:40:11,600
pee aid is going to kill me later.
Uh,

617
00:40:11,601 --> 00:40:15,950
so we want to return the score
and the image data. Those
are our two things. Okay?

618
00:40:16,530 --> 00:40:21,290
All right. These are the
two inputs that we, uh,

619
00:40:21,410 --> 00:40:23,840
are going to feed into our
reinforcement learning algorithm,

620
00:40:24,020 --> 00:40:27,290
the pixels on the screen and the score.
Okay?

621
00:40:27,320 --> 00:40:31,550
So that's a class. All
right? Um, and so now,

622
00:40:32,840 --> 00:40:34,640
now we have this punk class.

623
00:40:35,090 --> 00:40:38,630
Let's do our reinforcement learning
algorithm in tensorflow. Okay?

624
00:40:39,080 --> 00:40:42,440
We're going to do our reinforcement
learning algorithm in flow. All right?

625
00:40:42,441 --> 00:40:46,100
So let's just start off by
importing tensorflow. Okay?

626
00:40:46,490 --> 00:40:50,090
And I'm Adi. Hi Fernando. Okay,

627
00:40:50,091 --> 00:40:53,010
we're going to do this intense or
flow and we're going to import, uh,

628
00:40:53,060 --> 00:40:56,010
so tenter flow is to do machine learning.
Uh,

629
00:40:56,040 --> 00:40:59,960
CV two is open CV and
that's going to help us, uh,

630
00:41:00,560 --> 00:41:04,340
um, format our pixel data.
So it's, it's, it's, so,

631
00:41:04,341 --> 00:41:08,180
it's so that it's better for
reading into our tensor flow graph.

632
00:41:08,450 --> 00:41:13,370
We're going to import the pong class
that we've already created. Um,

633
00:41:13,760 --> 00:41:17,300
and things are off.
And uh,

634
00:41:17,330 --> 00:41:21,980
we're going to import num Pi as NP,
which is going to be help us with math.

635
00:41:22,310 --> 00:41:23,720
We're going to import random,

636
00:41:23,840 --> 00:41:27,530
we were just going to how we're going
to initialize some random things later.

637
00:41:27,710 --> 00:41:31,850
And then we're going to
import the collections library
and from the collections

638
00:41:31,851 --> 00:41:36,050
library we're going import DQ.
Okay.

639
00:41:36,051 --> 00:41:38,100
Dq is going to be,
it's a,

640
00:41:38,260 --> 00:41:42,590
it's a data structure but you queue is
a queue data structure and that's what

641
00:41:42,591 --> 00:41:46,440
we're going to store our
experience replay. Okay. We're
going to, we're going to,

642
00:41:46,670 --> 00:41:50,930
we're going to store some memory in this
queue function and I'm going to explain

643
00:41:50,931 --> 00:41:51,980
why we're going to use that.

644
00:41:52,130 --> 00:41:55,310
So let's go ahead and start off by
defining our hyper parameters. See,

645
00:41:55,311 --> 00:41:58,820
I'm just like much more interested when
we get right into the machine learning

646
00:41:58,821 --> 00:42:02,210
stuff because you know what I'm saying?
Like that's, that's where it's at. Okay.

647
00:42:02,270 --> 00:42:03,800
So these are our hyper parameters.

648
00:42:04,400 --> 00:42:08,360
We're going to start off with our actions
variable and our actions variable are

649
00:42:08,361 --> 00:42:11,900
up, down or stay. Okay.
Um, let me see. All right,

650
00:42:11,901 --> 00:42:16,640
so now we want to define our
learning rate. Learning rate.

651
00:42:17,330 --> 00:42:21,470
Learning rate is going to be a gamma
and we're going to set it as 0.99.

652
00:42:22,250 --> 00:42:25,520
Now we want to define our epsilon.
So I'll,

653
00:42:25,600 --> 00:42:29,490
I'll talk about what our initial on is.
Um,

654
00:42:30,740 --> 00:42:35,740
we're going to say initial epsilon is
going to be 1.0 and then our final epsilon

655
00:42:40,190 --> 00:42:45,110
and where we want to be after training,
it's going to be 0.05. So what is this?

656
00:42:45,230 --> 00:42:46,300
This is,
uh,

657
00:42:46,970 --> 00:42:50,390
when we update our gradient
or training over time,

658
00:42:50,570 --> 00:42:55,520
we want to make sure our epsilon
reaches 0.05. Okay. And we're going to,

659
00:42:56,870 --> 00:43:01,220
we're going to apply this later.
How many frames do we want?

660
00:43:01,970 --> 00:43:06,920
Do we want to anneal are epsilon.
Okay,

661
00:43:07,130 --> 00:43:08,750
so how many frames we're going to define?

662
00:43:08,751 --> 00:43:12,410
Those friends were going to say explore
frames. It's going to be 50,000 frames.

663
00:43:12,710 --> 00:43:17,510
And then our observe frames are
going to be, sorry, these are 50,000.

664
00:43:17,511 --> 00:43:21,560
This is 500,000. Okay. Um, so now,

665
00:43:22,400 --> 00:43:26,270
thanks Daniel. Uh, what kind of neural
net is this? Great question. Let's just,

666
00:43:26,470 --> 00:43:28,970
I'm going to define that. Let
me, let me say that in a second.

667
00:43:28,971 --> 00:43:32,210
Let me just define to more hyper
parameters are replay memory,

668
00:43:32,211 --> 00:43:34,550
which I'm going to talk about and
what kind of neural network this is.

669
00:43:34,730 --> 00:43:39,350
So replay memory, there's going to
be 50,000 and then our backsides,

670
00:43:39,500 --> 00:43:44,300
our backsides is going to be a
hundred our rights. So batch.

671
00:43:45,580 --> 00:43:47,480
So how many times we want to train.
All right.

672
00:43:47,481 --> 00:43:49,790
And while we want to create RTF graph,
okay,

673
00:43:49,850 --> 00:43:53,510
what kind of known that worker is this?
This is a convolutional neural network.

674
00:43:53,660 --> 00:43:57,200
A convolutional neural network is a
type of neural network that reason image

675
00:43:57,201 --> 00:44:01,940
data. And we're going to make a five
layer convolutional neural network.

676
00:44:02,450 --> 00:44:03,110
Um,

677
00:44:03,110 --> 00:44:08,110
thank you for that in tensorflow and we're
going to feed that pixel data and the

678
00:44:08,571 --> 00:44:11,780
score into this convolutional
neural network and that's good.

679
00:44:11,781 --> 00:44:15,370
It's going to help us do deep
reinforcement learning. Okay. And uh,

680
00:44:15,470 --> 00:44:18,230
and deep mind did this,
they did this for that,

681
00:44:18,260 --> 00:44:21,680
all those Atari Games and no matter
what Atari game they gave it,

682
00:44:21,740 --> 00:44:26,450
it was able to just look at those pixels
and become amazing over time. All right.

683
00:44:26,990 --> 00:44:31,380
Exactly. Lynn Wang. Exactly. So now
let create our tensor flow graph.

684
00:44:31,890 --> 00:44:34,170
Let me just go down a little bit.
And so we're going to take, okay,

685
00:44:34,171 --> 00:44:37,980
so create our graph, create
graph, and let's get started.

686
00:44:38,190 --> 00:44:41,400
So now we want to say create
our first convolutional layer.

687
00:44:41,760 --> 00:44:46,760
Our first convolutional layer is going
to convolutional layer and our bias

688
00:44:48,480 --> 00:44:50,250
vector.
That's what we're going to first create.

689
00:44:50,520 --> 00:44:52,080
So I'm going to define that burst.

690
00:44:52,290 --> 00:44:56,340
I'm going to say first convolutional
layer using tentraflow variables.

691
00:44:56,730 --> 00:44:57,563
And

692
00:45:00,980 --> 00:45:05,070
we're going to define
the size of it. Okay. Um,

693
00:45:05,130 --> 00:45:06,270
and we're going to say

694
00:45:07,800 --> 00:45:11,010
these sizes can be changed
to be whatever numbers,

695
00:45:11,250 --> 00:45:15,440
but I'm going to have days
be these numbers because, uh,

696
00:45:15,480 --> 00:45:20,130
so okay. We're defining our
firsts convolutional layer. Okay.

697
00:45:20,160 --> 00:45:24,570
And we're using the TF dot zero's
a function to define those layers.

698
00:45:24,720 --> 00:45:28,700
What TF dot zeros does
is it creates a, an, um,

699
00:45:29,070 --> 00:45:33,360
an array of an empty tensor full of Zeros.
It's an empty tensor,

700
00:45:33,361 --> 00:45:36,540
which is good for us because our a
convolutional network is going to start up

701
00:45:36,570 --> 00:45:38,670
empty and we're going to
fill it with data over time.

702
00:45:38,940 --> 00:45:41,640
And we wanted to find the size of it.
Okay. We want to define the size of it.

703
00:45:42,060 --> 00:45:44,970
So we're going to say be
accomplished in a one t f. Dot.

704
00:45:45,270 --> 00:45:50,220
And so our bias vector will help
us how much we want, uh, uh,

705
00:45:50,250 --> 00:45:55,250
like so where are we want our data
to flow and like in what direction.

706
00:45:56,010 --> 00:45:58,950
And so our bias will help us in defining

707
00:46:01,050 --> 00:46:05,790
like what part of the network we
want our data to float in. Okay.

708
00:46:05,791 --> 00:46:10,560
So we're going to say TF dot Zeros and
we'll define that as 32 because it's 32

709
00:46:10,561 --> 00:46:14,640
bits. Um, so it's eight
by eight with 32 bits.

710
00:46:15,120 --> 00:46:17,640
And so that's our first player.
So now our second layer.

711
00:46:22,120 --> 00:46:26,160
Um, and wow,

712
00:46:26,161 --> 00:46:30,330
there's 231 people watching this.
That's awesome. Wow. I'm so happy.

713
00:46:30,331 --> 00:46:33,600
Like this is awesome. Let's
get more interest in machine
learning. Guys. This is,

714
00:46:33,900 --> 00:46:36,540
you guys are going to love it. When
I went, oh my God. Okay. You guys,

715
00:46:36,840 --> 00:46:40,860
you guys get me pumped. Okay. I love
it. You guys get me pumped. All right.

716
00:46:40,920 --> 00:46:45,900
So now for a second convolutional
layer, we want to, okay,

717
00:46:45,901 --> 00:46:48,210
how long is this going to take?
This is going to take about,

718
00:46:48,630 --> 00:46:52,440
I want to be done within 15 minutes.
I want to be done in 15 minutes. Okay.

719
00:46:52,740 --> 00:46:56,730
I want to have the entire thing
and we'll see how long it takes. So

720
00:46:59,130 --> 00:47:03,390
let's define that layer. Um, uh,

721
00:47:03,630 --> 00:47:08,040
and
we'll define our next convolutional layer.

722
00:47:11,340 --> 00:47:16,340
Do you have to have variable pf
dot Zeros and four four 32 64

723
00:47:21,930 --> 00:47:26,100
B convolutional two
equals TF dot variable.

724
00:47:27,460 --> 00:47:30,560
Okay.
Okay.

725
00:47:32,580 --> 00:47:37,170
And then our third layer, just got to
keep defining those layers. Bump bump,

726
00:47:37,171 --> 00:47:38,004
bump

727
00:47:43,740 --> 00:47:46,180
re equals TF variable

728
00:47:49,250 --> 00:47:51,860
DF dot Zeros.
Okay.

729
00:47:52,010 --> 00:47:56,960
We have a lot of explaining to do and
I'm going to explain these magic numbers

730
00:47:56,961 --> 00:47:58,400
in a second.
All right?

731
00:47:58,550 --> 00:48:03,140
So let me just write this shit out and
we are going to explain this stuff.

732
00:48:03,400 --> 00:48:07,960
Alright. Alright. Alright.
That's how we do it. So,

733
00:48:08,570 --> 00:48:09,170
um,

734
00:48:09,170 --> 00:48:14,170
do you have zeros and we want
this to be 64 bits as well.

735
00:48:14,600 --> 00:48:18,200
Okay. That those third,
fourth and so now our fourth.

736
00:48:19,760 --> 00:48:20,593
Okay.

737
00:48:20,740 --> 00:48:25,450
Okay. So now our fourth is
going to be WC for, okay. Nope.

738
00:48:26,030 --> 00:48:28,220
Have you have c?

739
00:48:28,240 --> 00:48:33,190
Four is equal to p doc variable and

740
00:48:36,360 --> 00:48:37,193
okay.

741
00:48:38,450 --> 00:48:39,560
Do you have doctor a ball?

742
00:48:39,561 --> 00:48:43,460
And we're going to say Zeros and it's
going to be [inaudible] 74 and we're going

743
00:48:43,461 --> 00:48:48,080
to use our actions as a parameter here.
I'm gonna explain this in a second.

744
00:48:48,350 --> 00:48:53,140
And then our bias, let me just cut out
all of these layers. Equals F. Dot.

745
00:48:53,150 --> 00:48:54,020
Variable

746
00:48:57,000 --> 00:49:01,120
gift that Zeros again.
And then, um, seven 84

747
00:49:04,390 --> 00:49:09,100
I will hook, look at source
code. And then last layer. Okay.

748
00:49:09,400 --> 00:49:14,170
Um, well after I was going to be w
u of c five equals TF doc variable.

749
00:49:15,530 --> 00:49:19,750
Can you have got Zeros?
Seven 84 actions

750
00:49:21,520 --> 00:49:25,800
be fc five, CF. Dot.
Variable. So, you know,

751
00:49:25,810 --> 00:49:28,780
it's just a very repetitive thing when
you're coding your layers because it's

752
00:49:28,781 --> 00:49:31,990
just, you know, layer after layer
you have to define each of them.

753
00:49:32,410 --> 00:49:36,520
And then we want our input.
Okay.

754
00:49:36,550 --> 00:49:40,900
So what happened here? Let's see. Like
all this stuff you guys have said I,

755
00:49:41,260 --> 00:49:41,591
okay.

756
00:49:41,591 --> 00:49:46,591
So we created five layers and each of
them we define a size on input size and,

757
00:49:48,480 --> 00:49:53,310
and um, we define an input size.
Right. Oh thank you. Print this either.

758
00:49:55,050 --> 00:49:58,730
Yeah. I I would, I would be
in a ted conference. Yeah. Um,

759
00:49:58,830 --> 00:50:01,890
so we define the size
for each of these layers.

760
00:50:02,520 --> 00:50:07,110
Line 42 is the wrong variable.
What are you talking about? Oh,

761
00:50:07,111 --> 00:50:10,240
it needs a no.
Oh No.

762
00:50:11,910 --> 00:50:14,610
Hundred 50 plus people now. Wow. You're
right. Do you want to take the three?

763
00:50:14,790 --> 00:50:18,450
Oh my God, this is crazy. Oh my God.
This is crazy. Okay. Here we go.

764
00:50:18,480 --> 00:50:21,240
So we have five layers to our
convolutional neural network. Okay.

765
00:50:21,990 --> 00:50:25,160
And so now we've got to keep going cause
we are running out of time, out of time.

766
00:50:25,190 --> 00:50:26,023
How a time.
Okay.

767
00:50:29,250 --> 00:50:31,980
Analogies are great here. So yeah,
that, that, that's a good point.

768
00:50:31,981 --> 00:50:36,240
That's a good point. Um, so now
we want to create our input.

769
00:50:36,390 --> 00:50:38,130
Where is our data going to go?
We created,

770
00:50:38,160 --> 00:50:42,240
we created this five layer neural network
and where do we want our data to go?

771
00:50:42,241 --> 00:50:43,860
But we have to create an input,
right?

772
00:50:43,861 --> 00:50:47,850
A placeholder where the data feeds into
the network. Right? Okay. So let's,

773
00:50:48,990 --> 00:50:52,200
let's, um, create an
input for our pixel data.

774
00:50:52,260 --> 00:50:55,050
We're going to feed our pixel data into
this input. So we're going to say TF dot.

775
00:50:55,070 --> 00:50:55,903
Placeholder,

776
00:50:56,100 --> 00:51:00,900
we're going to say float and none.

777
00:51:01,080 --> 00:51:04,020
84, 84, 84.

778
00:51:05,200 --> 00:51:08,970
All right. So that, this,
this is where our, um,

779
00:51:10,250 --> 00:51:12,770
this is where our data's going to
flow into. Okay. So now we want to,

780
00:51:13,130 --> 00:51:15,380
now we went to do our
actual activation function,

781
00:51:15,410 --> 00:51:19,820
which is going to be the rectified
linear unit every time. Make pixels.

782
00:51:19,821 --> 00:51:24,530
Great again. That was great.
Every time we feed data into this,

783
00:51:25,520 --> 00:51:26,540
at each layer,

784
00:51:26,660 --> 00:51:31,100
we need to perform some
kind of computation when we
need to do something to that

785
00:51:31,101 --> 00:51:34,130
data. Okay? Everybody keeps
talking about line 42.

786
00:51:34,460 --> 00:51:38,600
So let me just quickly look
at what is happening here. Um,

787
00:51:39,370 --> 00:51:40,203
uh,

788
00:51:41,370 --> 00:51:42,070
okay.

789
00:51:42,070 --> 00:51:46,790
B F c four. All right, thank
you. [inaudible] thank you.

790
00:51:46,820 --> 00:51:50,420
Thank you so much. So at every
layer we are going to, uh,

791
00:51:50,510 --> 00:51:54,110
perform the rectified linear
unit activation function. Okay?

792
00:51:54,111 --> 00:51:57,440
It's going to take that data and it's
going to turn it into a probability.

793
00:51:57,770 --> 00:52:02,510
And so really is in use a lot.
And Oh,

794
00:52:02,511 --> 00:52:06,230
you're right. I only have 28% battery.
I need to make sure, oh my God,

795
00:52:06,231 --> 00:52:08,030
I have really on a timeline.
Okay, so here we go.

796
00:52:08,360 --> 00:52:11,750
So let's compute our
relu activation function

797
00:52:13,490 --> 00:52:16,160
on two d convolutions

798
00:52:18,140 --> 00:52:22,970
given for the inputs and filter tensors.

799
00:52:24,780 --> 00:52:25,380
Okay.

800
00:52:25,380 --> 00:52:26,580
All right.
So we're going to do that.

801
00:52:26,640 --> 00:52:30,490
We're going to compute it every time
using that tensorflow is builtin relu

802
00:52:30,491 --> 00:52:33,510
function. Okay. Take our convolutional Qd,

803
00:52:33,511 --> 00:52:37,110
convolutional neural network and um,

804
00:52:38,790 --> 00:52:43,410
oh man. Okay. All right. Um,

805
00:52:44,950 --> 00:52:45,783
okay.

806
00:52:46,630 --> 00:52:49,940
To the convolutional neural network. And
then, so we're almost done. All right.

807
00:52:50,150 --> 00:52:53,700
We have, we, we wanna we
have six more lines of code.
Okay. And then we're, we're,

808
00:52:54,440 --> 00:52:58,630
we're going to just, we're going
to get through this. Okay. So, um,

809
00:52:59,270 --> 00:53:01,850
no, we have about 12, 12 more
lines and then we're good.

810
00:53:02,150 --> 00:53:05,720
So we're going to take our convolutional
neural network and let me just make

811
00:53:05,721 --> 00:53:09,890
sure where I am. Okay.
So I need to calm down.

812
00:53:10,520 --> 00:53:14,720
I need to calm down. Everything's
good. It's all good. Meditation,

813
00:53:15,020 --> 00:53:17,660
mindfulness. I know my battery's
going to die. I'm gonna die.

814
00:53:17,690 --> 00:53:18,830
Everybody's going to die.

815
00:53:19,910 --> 00:53:23,900
But hopefully if we can put our minds
into computers and machines and merge with

816
00:53:23,901 --> 00:53:28,620
them and make the happens, we
won't die. Okay. I just said that.

817
00:53:28,650 --> 00:53:29,550
So now.

818
00:53:30,930 --> 00:53:31,550
Okay.

819
00:53:31,550 --> 00:53:34,760
The one to input that. So we're
going to perform our convolutional

820
00:53:35,610 --> 00:53:36,180
yeah.

821
00:53:36,180 --> 00:53:40,680
Is it really more than 300 people in
here? Oh my God. It's fucking crazy.

822
00:53:40,980 --> 00:53:44,340
Hi everybody.
Welcome to becoming awesome with Saroj.

823
00:53:44,880 --> 00:53:49,800
So we're going to take strides.
So our striver, um, how,

824
00:53:49,860 --> 00:53:53,100
um, like the channels that we
want our data to float through,

825
00:53:53,270 --> 00:53:55,920
I want to say padding is valid.
So that's just the,

826
00:53:58,010 --> 00:54:00,730
um,
so that's a variable for [inaudible].

827
00:54:02,750 --> 00:54:05,330
Okay. Um, I just, I just have to code it.

828
00:54:05,360 --> 00:54:09,790
I like literally just have to go over a
minute. It's a and N. Dot. Relu TFT. Nn.

829
00:54:10,310 --> 00:54:12,830
Actually, I can just literally just copy
and paste this. You know what I'm saying?

830
00:54:12,831 --> 00:54:17,540
I'm just changed the layers here as
accomplish or to accomplish three.

831
00:54:18,020 --> 00:54:20,420
And then compositional three.

832
00:54:22,310 --> 00:54:23,010
Okay.

833
00:54:23,010 --> 00:54:25,650
And then I need to say,
I'm going to take,

834
00:54:29,490 --> 00:54:33,200
I would say 10 ish years. Yeah. At
singularity tennis. Yours. Okay. So,

835
00:54:33,320 --> 00:54:35,190
so what's happening here,
we're taking all the,

836
00:54:35,220 --> 00:54:37,980
all the data that's computed in each
layer and we're sending it to the next

837
00:54:37,981 --> 00:54:41,570
layer. Okay? Now we're going to, um,

838
00:54:41,880 --> 00:54:45,660
take that last convolution
layer, convolutional three,
and we're going to say,

839
00:54:45,680 --> 00:54:46,740
do you have to reshape it?

840
00:54:46,900 --> 00:54:50,370
And we're going to take the previous
convolution layer and we're going to say

841
00:54:50,400 --> 00:54:54,930
negative one, three, one, three, six. And
then we're going to say fc four. I know,

842
00:54:54,931 --> 00:54:58,030
I know. I have to fix that
Typo. Tf Dot. Nn Dark Relu.

843
00:54:58,170 --> 00:55:02,130
And we're going to do perform matrix
multiplication on that function to make

844
00:55:02,131 --> 00:55:06,990
sure that, uh, that is working.

845
00:55:07,490 --> 00:55:10,210
Uh,
and we're going to use our

846
00:55:12,950 --> 00:55:16,650
reshape.
Okay.

847
00:55:16,890 --> 00:55:20,520
And now our last layer is going to take
everything we got from before and we're

848
00:55:20,521 --> 00:55:23,580
going to perform matrix multiplication
on it. And if we do that,

849
00:55:23,670 --> 00:55:28,350
then we have our output tensor,

850
00:55:28,380 --> 00:55:32,400
right? Fcf Alright. FC Five is
going to be our output tensor.

851
00:55:32,660 --> 00:55:35,790
I was going to be the result and we're
going to feed that back into the network.

852
00:55:36,180 --> 00:55:37,470
Okay.
And so we want to return that.

853
00:55:37,471 --> 00:55:40,500
We want to return the input tester
and the output tensor. Okay.

854
00:55:40,501 --> 00:55:45,420
So let's skip right to our main
method now. Okay, boom, boom, boom.

855
00:55:45,930 --> 00:55:47,910
Deaf name.
In our main method,

856
00:55:47,940 --> 00:55:51,360
because we are running out
of time in our main method,

857
00:55:51,420 --> 00:55:54,960
we want you to start off by creating a
session I've tentraflow session and our

858
00:55:55,060 --> 00:55:58,350
tensorflow session,
we use TF got interactive session.

859
00:55:58,530 --> 00:56:02,270
That's the method we use to initialize
a section. And then when call on it,

860
00:56:02,480 --> 00:56:06,780
they find our input layer and our output,
our output layer,

861
00:56:08,090 --> 00:56:12,300
our, I can't even think right
now our output, my hair. Okay.

862
00:56:12,301 --> 00:56:15,600
And we're going to what we just
defined a method to do that, right?

863
00:56:16,020 --> 00:56:19,080
That create graph method or was it,
is that what it was called? Yeah.

864
00:56:19,081 --> 00:56:22,830
Korea craft create graph is going to
create our input and output layer for us

865
00:56:23,110 --> 00:56:27,700
and we're going to feed those into
our training graph method, which,

866
00:56:27,980 --> 00:56:28,660
um,

867
00:56:28,660 --> 00:56:33,660
is going to take both of those and it's
going to run a bunch of good to run a

868
00:56:34,751 --> 00:56:37,360
reinforcement learning algorithm on.
And then if Maine,

869
00:56:39,200 --> 00:56:39,590
okay,

870
00:56:39,590 --> 00:56:42,260
aim
equals made

871
00:56:45,770 --> 00:56:49,640
Paul Manan. Okay. Okay.

872
00:56:49,790 --> 00:56:54,620
So literally 300, 300. Oh my God.

873
00:56:55,610 --> 00:56:58,700
Literally, no, you guys are
not just, just as smart as me.

874
00:56:58,701 --> 00:57:00,380
You guys are like smarter than me.

875
00:57:00,381 --> 00:57:04,220
I've got people who are subscribed to
me who are just smarter than me. Okay.

876
00:57:04,221 --> 00:57:06,920
And in a lot of ways we all
shine in different ways.

877
00:57:07,040 --> 00:57:09,680
I'm good at being in front of a
camera. You guys are good at, you know,

878
00:57:09,740 --> 00:57:13,140
other things. I know
there's a lot of errors. Um,

879
00:57:13,460 --> 00:57:18,460
and we're running out of time because I
only allocated an hour for this and this

880
00:57:18,711 --> 00:57:22,630
is my third time live
streaming and we have a good,

881
00:57:22,780 --> 00:57:26,960
we're going to have some errors here
and I do not have time to fix the errors

882
00:57:26,961 --> 00:57:30,590
here, but let me explain what I've done.
Okay. Let me just go over what I've done.

883
00:57:30,770 --> 00:57:33,800
I have, okay, what have I done here?

884
00:57:34,040 --> 00:57:36,440
I've defined pong from scratch.

885
00:57:36,590 --> 00:57:39,320
I've defined a bunch of
variables for defining for,

886
00:57:39,321 --> 00:57:41,960
for what the game is going to look like.
We're going to draw the ball,

887
00:57:41,961 --> 00:57:43,370
we're going to draw both of our paddles.

888
00:57:43,520 --> 00:57:46,940
We're going to update the position of
our ball, and then I have 20% battery.

889
00:57:47,120 --> 00:57:49,880
We want to update our paddles, like
where they're, where they're going,

890
00:57:51,080 --> 00:57:54,560
and then we're going to define a class
for our pong game. We're going to say,

891
00:57:54,561 --> 00:57:57,110
okay, get the present frame
and then get the next frame.

892
00:57:57,230 --> 00:58:00,860
We're going to take that pixel data and
then we're going to feed it into our

893
00:58:01,010 --> 00:58:04,100
convolutional neural network,
our deep queue network,

894
00:58:04,101 --> 00:58:06,040
which is a convolutional neural network.

895
00:58:06,220 --> 00:58:08,410
It's a five layer
convolutional neural network,

896
00:58:08,560 --> 00:58:10,870
and we built these with tensorflow.
Okay?

897
00:58:10,871 --> 00:58:13,480
We're going to input that using
this placeholder variable.

898
00:58:13,600 --> 00:58:17,200
That's where the data flows
into the network. Okay? And

899
00:58:19,130 --> 00:58:19,761
once we do that,

900
00:58:19,761 --> 00:58:23,690
we're going to apply the relu activation
function and each layer of that network,

901
00:58:23,900 --> 00:58:27,310
and we're going to, by the
end of it, it's going to, uh,

902
00:58:27,440 --> 00:58:30,920
using our agent environment loop
in our training graph method.

903
00:58:31,190 --> 00:58:35,030
We're going to be able to train our
network to be better and better over time.

904
00:58:35,390 --> 00:58:39,500
Okay? So, um, I don't have time
to fix all the errors right now.

905
00:58:39,590 --> 00:58:44,090
So what I'm going to do is I'm just
going to run, uh, what I already have.

906
00:58:44,430 --> 00:58:49,250
And so you guys can see what this looks
like. Okay? Can you guys see this?

907
00:58:49,670 --> 00:58:52,910
Yeah, you guys didn't see this,
so I'm not doing anything right.

908
00:58:53,420 --> 00:58:56,900
I'm not doing anything. I've got
17% battery. And the thing is like,

909
00:58:56,901 --> 00:59:01,070
my Mac book sometimes dies that like 15%,
sometimes a dies or like 17.

910
00:59:01,100 --> 00:59:02,030
So it might just die right now.

911
00:59:02,031 --> 00:59:06,170
So I wanna make sure I'm able to upload
this code or this video to my youtube

912
00:59:06,171 --> 00:59:08,240
channel and it works. So, so see,

913
00:59:08,300 --> 00:59:11,960
there's the evil AI and then there's
the rai and it's going to get better and

914
00:59:11,961 --> 00:59:15,110
better over time. Right? Right now it's
really bad. But if you give it like,

915
00:59:15,530 --> 00:59:18,020
you know, a couple hours, it's going
to get better and better over time.

916
00:59:18,710 --> 00:59:21,320
Typical Mac books, right? So
that's how it's gonna look.

917
00:59:21,710 --> 00:59:26,340
It's gonna get better and
better over time. And now, um,

918
00:59:26,640 --> 00:59:31,590
I'm going to stop screen sharing and I'm
going to answer two questions and then

919
00:59:31,620 --> 00:59:34,080
I'm going to upload the code.
I'm going to have it well documented.

920
00:59:34,170 --> 00:59:38,610
I'm going to add this stuff that I wasn't
able to get to and I'm going to two

921
00:59:38,640 --> 00:59:41,370
other awesome stuff for you
guys. So two questions. Let's go.

922
00:59:45,030 --> 00:59:49,590
330 people watching. Hi Daniel.
Hi. We got, uh, Daniel Shiffman.

923
00:59:49,591 --> 00:59:54,090
We have got to do something
together. Okay. Um, um, Max,

924
00:59:54,810 --> 00:59:59,520
you know, I, I might visit
FSS state. Send me an email.

925
00:59:59,580 --> 01:00:01,290
Why the real activation function?

926
01:00:01,500 --> 01:00:04,680
Because it's good for deep
learning specifically. Um,

927
01:00:06,480 --> 01:00:09,960
more live maybe next week, maybe next
week. No, Daniel, don't worry about it.

928
01:00:10,140 --> 01:00:14,890
Hi shamrock. I love you too.
Um, well let's be in touch.

929
01:00:15,040 --> 01:00:16,150
What is reinforcement learning?

930
01:00:16,180 --> 01:00:18,910
We're using the agent environment loop
to get better and better over time.

931
01:00:18,911 --> 01:00:20,380
It's like trial and error.

932
01:00:20,470 --> 01:00:23,980
Like if you give a dog a treats and
if it does something that's, that's,

933
01:00:24,000 --> 01:00:27,730
that's reinforcement learning,
you're reinforcing it and
using a reward function.

934
01:00:28,180 --> 01:00:32,140
Okay. And uh, cool. Who painted my hair?

935
01:00:32,170 --> 01:00:36,910
I do it at a salon. What's next? We're
going to do more a neural network stuff,

936
01:00:36,911 --> 01:00:39,920
more machine learning stuff
and we're going to do it, uh,

937
01:00:40,330 --> 01:00:43,510
in a way that's more accessible to
more people. I might give a tech talk.

938
01:00:43,511 --> 01:00:46,270
You've got to come to me like I don't
have time to like go out and like try to

939
01:00:46,271 --> 01:00:50,410
find a Ted talk, uh, books for machine
learning. I would recommend, um,

940
01:00:51,490 --> 01:00:54,970
deep learning, yearning, deep
learning, yearning by Andrew. Awesome.

941
01:00:55,120 --> 01:00:58,510
How long have you been learning ml?
It's been, how long has it been now?

942
01:00:58,511 --> 01:01:01,900
Maybe like three years. Blockchain
stuff. I used to do that stuff.

943
01:01:01,930 --> 01:01:04,030
If you want to see blockchain stuff,
go to the beginning of my channel.

944
01:01:04,031 --> 01:01:05,140
I used to talk about that a lot.

945
01:01:05,290 --> 01:01:07,570
I wrote a book on that called
decentralized applications.

946
01:01:07,780 --> 01:01:11,260
One of the best selling
software engineering books
in the world, by the way. Um,

947
01:01:11,560 --> 01:01:16,090
uh, can it be done with Cara Ross? Yes,
absolutely. Using a piano, blah, backend.

948
01:01:16,330 --> 01:01:19,720
A book for Python. Learn python the
hard way. Why not use a charger?

949
01:01:19,750 --> 01:01:24,340
I don't have time.
And for now I've got to go get my charger.

950
01:01:24,550 --> 01:01:26,110
So thanks for watching.

951
01:01:29,500 --> 01:01:30,550
And I love you guys.

