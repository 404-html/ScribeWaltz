1
00:00:00,060 --> 00:00:03,510
Hello world.
It's a Raj and quantum computers.

2
00:00:03,660 --> 00:00:07,080
How do they work and
how do they benefit AI?

3
00:00:07,230 --> 00:00:11,370
Let's talk a little bit about the theory
and then we'll build a very simple

4
00:00:11,371 --> 00:00:14,160
quantum algorithm.
By the way,

5
00:00:14,280 --> 00:00:17,670
the machine that you're
using to watch this video,

6
00:00:17,790 --> 00:00:20,880
whether it's a laptop or a phone,

7
00:00:21,060 --> 00:00:25,680
is an example of a classical computer.
It's a general purpose machine.

8
00:00:25,890 --> 00:00:30,090
We can code up an algorithm,
give it some quality data,

9
00:00:30,240 --> 00:00:35,240
and theoretically it can
accomplish pretty much any task.

10
00:00:35,251 --> 00:00:38,130
We'd like streaming live video,

11
00:00:38,190 --> 00:00:41,490
creating immersive three
dimensional environments,

12
00:00:41,730 --> 00:00:46,200
eliminating existential dread.
Actually it doesn't do that yet,

13
00:00:46,290 --> 00:00:47,610
but at their core,

14
00:00:47,880 --> 00:00:52,170
all classical computers do something
really basic under the hood.

15
00:00:52,530 --> 00:00:57,530
Behind every software application is
a series of simple math operations.

16
00:00:59,220 --> 00:01:04,220
Any task we want to perform on a computer
like booking a flight or playing a

17
00:01:04,681 --> 00:01:09,681
game is translated into a
string of ones and Zeros,

18
00:01:09,901 --> 00:01:14,901
which act as input that is processed by
an algorithm which then outputs a new

19
00:01:15,031 --> 00:01:19,080
string of ones and Zeros,
algorithms in all their complexity.

20
00:01:19,080 --> 00:01:24,080
In the end just manipulate strings of
bits where each bit is either a one or a

21
00:01:25,321 --> 00:01:26,154
zero.

22
00:01:26,160 --> 00:01:31,160
We use ones and Zeros because there a
way of representing information such that

23
00:01:31,231 --> 00:01:34,800
it can only be in one
of two different states.

24
00:01:35,070 --> 00:01:40,070
Computers run on electricity de when a
computer wants to send information from

25
00:01:41,221 --> 00:01:43,110
one place to another,

26
00:01:43,320 --> 00:01:46,950
it sends pulses of
electricity over a wire.

27
00:01:47,160 --> 00:01:52,160
Computers use transistors that can either
be closed so that a current flows or

28
00:01:52,561 --> 00:01:55,290
open,
which means there isn't a current,

29
00:01:55,380 --> 00:01:58,860
both states are represented
using either a one or zero.

30
00:01:59,070 --> 00:02:01,920
They're like light
switches either on or off.

31
00:02:02,130 --> 00:02:05,340
So when these ones and
Zeros are strings together,

32
00:02:05,520 --> 00:02:10,520
they can represent any number or letter
using binary code computers you circuits

33
00:02:11,881 --> 00:02:16,881
called logic gates that are composed of
transistors connected together and they

34
00:02:17,971 --> 00:02:22,971
compare patterns of bits to turn them
into new patterns of bits using simple

35
00:02:23,791 --> 00:02:26,940
arithmetic, hard drives,
store ones and Zeros.

36
00:02:26,940 --> 00:02:31,320
By changing the magnetic poles
of small parts of a metal disk.

37
00:02:31,560 --> 00:02:36,360
Positive and negative charges
are represented by ones
and Zeros respectively.

38
00:02:36,690 --> 00:02:40,290
So computers do these
two things really well.

39
00:02:40,410 --> 00:02:45,270
They store numbers in memory and can
process these numbers with simple math

40
00:02:45,271 --> 00:02:49,470
operations. I'm just like,
you vote for Sirajuddin?

41
00:02:49,590 --> 00:02:51,060
Let's make binary great again.

42
00:02:51,360 --> 00:02:56,360
In 1965 the founder of Intel Gordon
Moore predicted that the number of

43
00:02:56,611 --> 00:03:01,611
transistors per square on integrated
circuits what continue to double every 18

44
00:03:03,401 --> 00:03:06,700
months.
So far it's proven to be true,

45
00:03:07,000 --> 00:03:10,930
but there is a coming plateau
and transistor density.

46
00:03:11,170 --> 00:03:15,910
We can only make them so small
before the laws of physics stop us.

47
00:03:16,300 --> 00:03:21,300
The idea of quantum computing
is a potential solution
and that's why interest in

48
00:03:22,391 --> 00:03:24,370
it has increased in recent years.

49
00:03:24,460 --> 00:03:29,350
The word quantum in physics means the
minimum amount of any physical entity

50
00:03:29,351 --> 00:03:31,300
involved in interaction.

51
00:03:31,570 --> 00:03:35,650
So a photon is a single quantum of light.

52
00:03:36,010 --> 00:03:39,760
For example.
That's its real scientific definition,

53
00:03:40,270 --> 00:03:45,270
but it's also used colloquially sometimes
to mean the opposite like quantum leap

54
00:03:46,600 --> 00:03:48,790
or buy anything.
Deepak Chopra says

55
00:03:48,910 --> 00:03:52,270
the Aficionados in the
world of quantum physics,

56
00:03:52,500 --> 00:03:55,360
I have somehow hijack the
word for their own use.

57
00:03:57,100 --> 00:04:02,100
Quantum physics deals with the world of
atoms and the subatomic particles inside

58
00:04:02,381 --> 00:04:06,550
of them. It's really a bad ass
because on the atomic scale,

59
00:04:06,700 --> 00:04:09,790
the laws of classical
physics no longer apply.

60
00:04:10,030 --> 00:04:15,030
Richard Fineman put it best when he
said things on a very small scale,

61
00:04:15,400 --> 00:04:20,400
behave like nothing you have any direct
experience about or like anything that

62
00:04:21,011 --> 00:04:22,570
you have ever seen.

63
00:04:23,080 --> 00:04:28,080
Tiny particles like electrons and photons
can take on several states at the same

64
00:04:28,751 --> 00:04:32,950
time that a larger scale
would be mutually exclusive.

65
00:04:33,280 --> 00:04:38,280
They can be in several places at once
or exhibit two kinds of polarization.

66
00:04:39,550 --> 00:04:41,080
At the same time,

67
00:04:41,170 --> 00:04:46,170
we're not able to see this super
position of different states because it

68
00:04:46,331 --> 00:04:49,300
disappears once someone
tries to measure it.

69
00:04:50,260 --> 00:04:54,070
Nobody really knows how that happens,
but it does.

70
00:04:54,190 --> 00:04:59,190
We can use this concept of super position
to free computers from having binary

71
00:04:59,831 --> 00:05:00,700
constraints.

72
00:05:00,790 --> 00:05:05,790
Quantum computers use
particles magnetically
suspended in near absolute zero

73
00:05:06,851 --> 00:05:11,851
temperatures to represent not bits but Q
bits instead of representing either one

74
00:05:14,231 --> 00:05:19,120
or zero. They can also represent
them both simultaneously. Okay,

75
00:05:19,121 --> 00:05:20,920
so you might be thinking big deal.

76
00:05:20,950 --> 00:05:25,480
Could you just achieve super position on
a classical computer by just using two

77
00:05:25,660 --> 00:05:30,120
ordinary bits at the same
time? No need for a cubit? No,

78
00:05:30,310 --> 00:05:34,450
because there's more to quantum
physics then just super position.

79
00:05:34,600 --> 00:05:37,720
There's also the idea of entanglement.

80
00:05:38,050 --> 00:05:40,480
If we have a system of
more than one cubit,

81
00:05:40,750 --> 00:05:45,580
these particles are not independent
of each other. They're entangles.

82
00:05:45,760 --> 00:05:47,620
So in a system of two cubits,

83
00:05:47,740 --> 00:05:52,270
the outcome of one cubit tells you what
you will see when you measure the other

84
00:05:52,271 --> 00:05:53,104
cubits.

85
00:05:53,260 --> 00:05:58,260
Particles can be entangles even if
they are separated in space by huge

86
00:05:58,881 --> 00:06:02,360
distances.
Einstein called entanglement,

87
00:06:02,450 --> 00:06:06,110
spooky action at a distance.
That's my Einstein voice.

88
00:06:06,200 --> 00:06:10,610
What that means is that you can't just
describe a system of several cubits using

89
00:06:10,611 --> 00:06:13,310
descriptions of individual cubits.

90
00:06:13,730 --> 00:06:17,750
You have to describe the
correlations between two cubits,

91
00:06:17,780 --> 00:06:19,610
and as you increase the number of them,

92
00:06:19,940 --> 00:06:23,150
the number of correlations
grows exponentially.

93
00:06:23,300 --> 00:06:26,900
So for a system of just 300 cubits,

94
00:06:27,200 --> 00:06:32,090
you'd need more numbers than there
are atoms in the visible universe to

95
00:06:32,091 --> 00:06:34,970
describe.
Think about that for a second.

96
00:06:36,500 --> 00:06:41,500
So because we can't just write down
the info contained in a system of a few

97
00:06:43,250 --> 00:06:45,560
hundred cubits using classical bits,

98
00:06:46,460 --> 00:06:51,460
maybe a computer running on these
cubits can perform tasks that classical

99
00:06:51,531 --> 00:06:53,330
computers couldn't achieve.

100
00:06:53,870 --> 00:06:58,490
That's why people think quantum
computing holds a lot of promise.

101
00:06:58,820 --> 00:07:03,820
So let's build a simple quantum algorithm
in python using IBM's quantum API to

102
00:07:04,761 --> 00:07:09,680
learn more. You can sign up for access
to their API easily on their website.

103
00:07:09,920 --> 00:07:13,700
Then download the Sdk to use it in python.
After we import it,

104
00:07:13,760 --> 00:07:16,070
we're going to build the
Deutsche Jasa Algorithm,

105
00:07:16,190 --> 00:07:18,770
one of the first quantum
algos to be proposed.

106
00:07:19,010 --> 00:07:24,010
We are given a quantum computer known as
an oracle that implements some function

107
00:07:24,231 --> 00:07:24,800
f.

108
00:07:24,800 --> 00:07:29,510
It takes end digit binary values as input
and produces either a zero or one is

109
00:07:29,511 --> 00:07:30,980
output for each value.

110
00:07:31,220 --> 00:07:36,220
The function is constant zero on
all inputs or one on all inputs.

111
00:07:36,770 --> 00:07:41,770
It could also be balanced so it returns
one for half of the input domain and

112
00:07:41,841 --> 00:07:43,400
zero for the other half.

113
00:07:43,730 --> 00:07:48,730
The task is to decide if f is constant
or balanced by using the oracle.

114
00:07:49,580 --> 00:07:50,151
First,

115
00:07:50,151 --> 00:07:54,890
we'll initialize a quantum program object
with a quantum and classical register

116
00:07:54,950 --> 00:07:56,240
holding three bits.

117
00:07:56,420 --> 00:08:01,100
The program lets us manipulate quantum
circuits and each circuit has a set of

118
00:08:01,101 --> 00:08:02,240
data registers,

119
00:08:02,450 --> 00:08:06,230
will apply what's called a Hattah
marred gates to every cubit.

120
00:08:06,380 --> 00:08:09,710
So now all the possible states
are equally likely to be observed.

121
00:08:10,040 --> 00:08:12,860
For every possible state
will apply the Oracle.

122
00:08:12,980 --> 00:08:17,240
In our case the oracle is a balanced
function. Then we'll apply the HK two,

123
00:08:17,241 --> 00:08:20,090
all the cubits once more and
that's it for our algorithm.

124
00:08:20,390 --> 00:08:21,830
For a constant function,

125
00:08:22,040 --> 00:08:26,630
we can expect a 100% chance of observing
all zeros and for balance function.

126
00:08:26,810 --> 00:08:28,400
We can expect anything else.

127
00:08:28,700 --> 00:08:33,650
This shows that a black box problem
can be solved efficiently by a quantum

128
00:08:33,651 --> 00:08:35,540
computer with no error,

129
00:08:35,690 --> 00:08:40,670
whereas a classical computer would need
way more queries to the black box to

130
00:08:40,671 --> 00:08:44,450
solve the problem. I just sacrificed
relationships for greatness.

131
00:08:45,200 --> 00:08:50,200
These hands have yet to create their
masterpiece intelligence Zuma class.

132
00:08:53,060 --> 00:08:54,650
So there are three takeaways here.

133
00:08:54,740 --> 00:08:59,250
Quantum is the study of physical
phenomena that happened at the atomic or

134
00:08:59,251 --> 00:09:00,510
subatomic level.

135
00:09:00,750 --> 00:09:05,750
Quantum computing takes
advantage of quantum physics
to allow for more efficient

136
00:09:06,781 --> 00:09:08,880
algorithms and cubits.

137
00:09:08,970 --> 00:09:13,970
Not Bits are the fundamental
unit of quantum computing
capable of simultaneously

138
00:09:14,041 --> 00:09:18,750
representing both a one and a zero. The
wizard of the week is no one would doubt.

139
00:09:19,260 --> 00:09:22,970
The challenge was to build
a queue learning bond and
you know he used care Os.

140
00:09:22,971 --> 00:09:27,300
It trained a DQ learner in the carpool
environment until it was able to

141
00:09:27,301 --> 00:09:30,270
successfully balance itself.
Loved animation at the end,

142
00:09:30,330 --> 00:09:34,560
great work and run around his fee. John
Won. He use tensor flow to build a Dq,

143
00:09:34,561 --> 00:09:38,190
enter the gate breakout with no
high level raptors. Nicely done.

144
00:09:38,430 --> 00:09:42,390
The coding challenge for this week is
to try your hand at building a simple

145
00:09:42,391 --> 00:09:45,120
quantum algorithm using IBM's Api.

146
00:09:45,360 --> 00:09:48,930
Details are in the read me posts or
get help link in the comments and I'll

147
00:09:48,931 --> 00:09:51,450
announce a winner next week.
I hope you like this video.

148
00:09:51,451 --> 00:09:53,640
Please subscribe for
more like it if you did,

149
00:09:53,760 --> 00:09:57,510
and for now I've got a quantum teleport,
so thanks for watching.

