1
00:00:00,120 --> 00:00:02,130
Hello world.
Welcome to throw geology.

2
00:00:02,220 --> 00:00:06,150
Ever wonder how Netflix recommends often
shows you like or how Facebook can auto

3
00:00:06,160 --> 00:00:10,140
tag your face or how Google's self
driving cars work or how big can,

4
00:00:10,710 --> 00:00:14,550
what's that? You don't care
what [inaudible] does, it's
okay. Nobody does. Anyways,

5
00:00:14,610 --> 00:00:15,990
the answer is machine learning.

6
00:00:16,110 --> 00:00:19,050
Machine learning is a study of
algorithms that learn from examples and

7
00:00:19,051 --> 00:00:21,420
experience instead of hard coded rules.

8
00:00:21,540 --> 00:00:24,630
So let's say you want to build an app
that can recognize an image of a specific

9
00:00:24,631 --> 00:00:26,460
species of flower called Iris.

10
00:00:26,790 --> 00:00:28,950
If you decide to code this
without machine learning,

11
00:00:29,100 --> 00:00:32,520
you'd have to write a bunch of different
functions to detect all the different

12
00:00:32,521 --> 00:00:33,840
features of an iris flower.

13
00:00:34,110 --> 00:00:38,310
The problem is there are a bunch of
corner cases and there's no way you can

14
00:00:38,340 --> 00:00:39,960
account for all of them ahead of time.

15
00:00:40,170 --> 00:00:44,010
Like what if one of the leads is partially
obstructed or a flower is a certain

16
00:00:44,011 --> 00:00:47,190
color that you didn't account for or
the shape is totally different than what

17
00:00:47,191 --> 00:00:51,600
you expected. You can't just code all that
up beforehand unless you're Jeff Dean.

18
00:00:52,380 --> 00:00:55,050
Just kidding. Jeff Dean
can't do it. Nobody can.

19
00:00:55,170 --> 00:00:58,530
You have to use machine learning to solve
this problem and here's the best part.

20
00:00:58,620 --> 00:01:02,340
It's actually super easy and you don't
need to be a math person to do it.

21
00:01:02,760 --> 00:01:06,870
They're just four steps involved in the
process. Collect data, pick the model,

22
00:01:06,930 --> 00:01:08,730
train the model and test the model.

23
00:01:08,850 --> 00:01:12,450
We'll basically just add data to a model
and it will start to find patterns in

24
00:01:12,451 --> 00:01:15,870
the data for us. We're going to make
this Irish flower recognition APP,

25
00:01:15,871 --> 00:01:19,110
which has seven lines of python
using two dope libraries,

26
00:01:19,350 --> 00:01:22,830
psychic learn and tensorflow which
will important right at the start.

27
00:01:23,580 --> 00:01:26,880
So let's do this. The first step is
to get our data. Data sets come in,

28
00:01:26,910 --> 00:01:31,830
all different kinds of formats, pdf, CSVs,
holograms. It doesn't matter the format.

29
00:01:31,920 --> 00:01:34,890
We can easily parse it in our
code to get the relevant details.

30
00:01:35,190 --> 00:01:39,090
We'll be using a well known data set that
contains 150 samples of Iris Flowers.

31
00:01:39,390 --> 00:01:42,420
Luckily for us, this data set
comes preloaded with psychic learn,

32
00:01:42,570 --> 00:01:46,560
so we can just load it here. Each sample
has a label, one of three types of Iris,

33
00:01:46,590 --> 00:01:49,080
toasted, Virginica or versicolor.
And instead of features,

34
00:01:49,081 --> 00:01:52,890
Sepa Lang Sipa with pedaling and pedal
with, because our data is labeled,

35
00:01:52,891 --> 00:01:55,140
the type of learning we're doing
is called supervised learning.

36
00:01:55,440 --> 00:01:57,750
If we didn't have labels for our data,
just features,

37
00:01:57,870 --> 00:02:00,840
they don't want to be called
unsupervised learning. So yeah,

38
00:02:00,990 --> 00:02:03,090
these are good features there.
Simple,

39
00:02:03,240 --> 00:02:06,990
independent and informative as all
features should be. By the way,

40
00:02:07,140 --> 00:02:09,600
if you're ever deciding on what kind
of features you should look for in a

41
00:02:09,601 --> 00:02:10,350
Dataset,

42
00:02:10,350 --> 00:02:13,590
a good rule of thumb is thinking about
what features you personally would need

43
00:02:13,830 --> 00:02:16,050
to figure out to determine
whatever your goal is.

44
00:02:16,200 --> 00:02:20,610
So if you're trying to determine Jedi
or sith given a data set of lightsabers,

45
00:02:20,940 --> 00:02:23,310
don't pick something like
weapons status as a feature.

46
00:02:23,340 --> 00:02:27,060
Use Blade colors and curvature as your
feature. So now that we have our Dataset,

47
00:02:27,061 --> 00:02:29,400
the next step is to pick the model.
To do that,

48
00:02:29,401 --> 00:02:32,460
you just have to calculate
the multivariate equation
for discriminant analysis

49
00:02:32,461 --> 00:02:34,410
by squaring the delta.
That just kidding.

50
00:02:34,680 --> 00:02:38,490
You literally just pace
in a single line of code.

51
00:02:38,670 --> 00:02:41,700
The real question is how do you know
which of the [inaudible] machine learning

52
00:02:41,701 --> 00:02:43,260
models to use?
Well,

53
00:02:43,261 --> 00:02:46,890
we're trying to classify
an image as either an iris
flour or not an Irish flour,

54
00:02:47,010 --> 00:02:49,320
so we know that this is
a classification problem,

55
00:02:49,590 --> 00:02:53,790
therefore we'll need to use a classify
or okay, that narrows our options,

56
00:02:53,791 --> 00:02:54,630
but what type?

57
00:02:54,720 --> 00:02:58,260
Like there are a lot of those to my gut
reaction is to use a deep neural network

58
00:02:58,261 --> 00:03:01,930
because it just sounds dope. You know what
I mean? But there are countless others.

59
00:03:01,990 --> 00:03:03,430
The answer is it depends.

60
00:03:03,610 --> 00:03:07,600
It depends on the size of your data and
your application requirements. Currently,

61
00:03:07,630 --> 00:03:08,770
if you have a lot of data,

62
00:03:08,860 --> 00:03:12,190
deep neural networks pretty
much outperform every other
machine learning model

63
00:03:12,280 --> 00:03:17,200
across a wide variety of use cases. But
in our case, we only have 150 samples.

64
00:03:17,290 --> 00:03:18,820
So use something simple and standard.

65
00:03:19,030 --> 00:03:22,330
A linear classifier will set
the preclass parameter to three.

66
00:03:22,570 --> 00:03:25,720
You can also easily just switch out
the model with another one and see the

67
00:03:25,721 --> 00:03:28,210
difference in accuracy.
It's just one line of code,

68
00:03:28,211 --> 00:03:31,360
like that's all it would take to use a
deep neural net to classify this if we

69
00:03:31,361 --> 00:03:34,780
want it to. That way you'll know which
one works best. Now we picked our model.

70
00:03:34,781 --> 00:03:37,420
It's time to train it.
Training is the actual learning step.

71
00:03:37,421 --> 00:03:40,960
As your model iterates with the Dataset,
it gets better and better at prediction.

72
00:03:41,230 --> 00:03:42,580
Since we're using a classifier,

73
00:03:42,610 --> 00:03:45,220
we've seen a called the [inaudible]
method on our object to train.

74
00:03:45,220 --> 00:03:47,590
Our model is our training algorithm.

75
00:03:47,710 --> 00:03:50,170
This meant that will input the
training data set into our model,

76
00:03:50,350 --> 00:03:53,650
finding patterns in the
data boom, done. Now,

77
00:03:53,651 --> 00:03:55,800
whenever we input a new flower
farmer testing data set,

78
00:03:55,960 --> 00:03:58,990
it'll automatically be able to classify
it as one of the three types of iris

79
00:03:58,991 --> 00:03:59,470
flour.

80
00:03:59,470 --> 00:04:02,530
We can see internal at the accuracy
score for classification is pretty high.

81
00:04:02,950 --> 00:04:03,790
How easy was that?

82
00:04:03,791 --> 00:04:07,000
Just seven lines of code and now you have
your first model trained and ready to

83
00:04:07,001 --> 00:04:08,050
recognize flowers.

84
00:04:08,290 --> 00:04:11,800
You just made a learning machine and
you can use the same model to classify

85
00:04:11,830 --> 00:04:15,160
other things like cars and
dresses and Republican candidates.

86
00:04:15,430 --> 00:04:19,130
Machine learning can be applied to so
many different things from fraud detection

87
00:04:19,131 --> 00:04:21,040
to generating paintings like the Casa.

88
00:04:21,250 --> 00:04:24,100
If you'd like to see more machine
learning videos, please subscribe.

89
00:04:24,130 --> 00:04:25,750
I'm going to release a lot of them,

90
00:04:25,960 --> 00:04:29,560
and for now I've got to go fix a
runtime error, so thanks for watching.

