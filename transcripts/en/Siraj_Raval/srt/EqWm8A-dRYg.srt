1
00:00:00,030 --> 00:00:04,710
Hello world. It's a Raj
and cryptocurrencies are
fast going mainstream.

2
00:00:04,980 --> 00:00:09,980
I'll show you how to use python to perform
sentiment analysis on reddit and put

3
00:00:10,561 --> 00:00:15,510
her data and predict whether the price
of bitcoin will go up or down on a given

4
00:00:15,510 --> 00:00:19,830
day. When people share data online,
there's usually some attitude or opinion,

5
00:00:20,130 --> 00:00:24,900
some kind of emotion that's expressed
with their share. If we read their data,

6
00:00:24,990 --> 00:00:26,430
be it a tweet or a comment,

7
00:00:26,550 --> 00:00:30,690
we can pretty much glean what that
emotion is by looking at their context and

8
00:00:30,691 --> 00:00:31,410
wording.

9
00:00:31,410 --> 00:00:36,410
Sentiment analysis is the process of
automating this kind of analysis using

10
00:00:36,481 --> 00:00:40,680
artificial intelligence,
which allows us to scale it massively.

11
00:00:40,980 --> 00:00:43,530
The applications of this
process are pretty broad.

12
00:00:43,710 --> 00:00:48,300
Many organizations across the world are
using this ability to extract insights

13
00:00:48,301 --> 00:00:50,940
from social data to
better target customers,

14
00:00:51,090 --> 00:00:54,870
predict market trends and exploit
emotionally vulnerable youth.

15
00:00:54,930 --> 00:00:59,100
Some day we will dethrone news Zuckerberg,
the Obama administration,

16
00:00:59,101 --> 00:00:59,970
for example,

17
00:01:00,090 --> 00:01:05,090
used sentiment analysis to gauge public
policy opinion during announcements

18
00:01:05,850 --> 00:01:09,780
ahead of the 2012 presidential election.
The travel company.

19
00:01:09,781 --> 00:01:14,370
Expedia use it to realize that their
customers didn't like the music behind

20
00:01:14,371 --> 00:01:15,480
their ad campaign,

21
00:01:15,690 --> 00:01:19,530
which resulted in a new virgin
that was received very well.

22
00:01:19,770 --> 00:01:23,550
Investment firms use it to understand
how shareholders are feeling about a

23
00:01:23,551 --> 00:01:28,530
certain company's stock when deciding
whether to buy or sell and this lets them

24
00:01:28,531 --> 00:01:30,600
stay a step ahead of the competition.

25
00:01:30,720 --> 00:01:33,780
Ever since Bitcoin's
price began to skyrocket,

26
00:01:33,810 --> 00:01:37,800
there has been this constant hype
surrounding the cryptocurrency market.

27
00:01:38,040 --> 00:01:41,400
All coins are popping up every day.
Some are scams,

28
00:01:41,460 --> 00:01:44,490
some make it to the top of
the coin list in months.

29
00:01:44,700 --> 00:01:47,970
The topic is coming up
everywhere. Radio, Twitter,

30
00:01:48,120 --> 00:01:50,370
the awkward bathroom stall conversations,

31
00:01:50,580 --> 00:01:55,320
but what is causing these
digital currencies to
fluctuate in price? Right now?

32
00:01:55,321 --> 00:01:57,660
The answer is mostly speculation.

33
00:01:57,930 --> 00:02:01,410
Crypto prices right now are
being driven by network usage.

34
00:02:01,470 --> 00:02:04,680
They're being driven by speculation
that the tokens are going to appreciate.

35
00:02:04,920 --> 00:02:06,420
It's a gold rush mentality.

36
00:02:06,660 --> 00:02:11,660
If people expect the price
of a cryptocurrency to
increase due to a utility

37
00:02:12,031 --> 00:02:15,030
increase over time,
like more merchants accepting it,

38
00:02:15,270 --> 00:02:20,270
a growth in transaction volume or a
larger ecosystem of developers building on

39
00:02:20,311 --> 00:02:22,860
top of it,
there will be a rise in demand,

40
00:02:23,100 --> 00:02:26,670
assuming that the supply does not
increase in the same proportion,

41
00:02:26,850 --> 00:02:28,170
the price will go up.

42
00:02:28,410 --> 00:02:33,330
But if the utility decreases because of
reasons like mobile platforms blocking

43
00:02:33,331 --> 00:02:34,920
it,
technical issues,

44
00:02:35,070 --> 00:02:38,730
governments banning it or exchange
markets getting shut down,

45
00:02:38,760 --> 00:02:40,200
the demand will decrease,

46
00:02:40,350 --> 00:02:43,890
but the supply will increase since
more people are willing to sell.

47
00:02:43,920 --> 00:02:46,560
So the price will go
down in the long term.

48
00:02:46,590 --> 00:02:51,420
The value of digital currencies will be
way more determined by their utility and

49
00:02:51,421 --> 00:02:53,040
less so by speculation.

50
00:02:53,280 --> 00:02:57,930
But we can take advantage of this
speculation driven market by analyzing the

51
00:02:57,931 --> 00:03:02,290
sentiment of the speculators on
social media using machine learning.

52
00:03:02,890 --> 00:03:04,000
So for this demo,

53
00:03:04,001 --> 00:03:08,980
we're going to aggregate data from people
about bitcoin from reddit and Twitter.

54
00:03:09,190 --> 00:03:14,190
We'll also collect bitcoin price data
from coindesk.com then we'll use a

55
00:03:14,381 --> 00:03:18,700
recurrent neural network that try and
find a correlation between social media

56
00:03:18,701 --> 00:03:21,820
sentiment and the bitcoin price.
Once trained,

57
00:03:21,910 --> 00:03:25,630
we can use our model to make
predictions about the future price.

58
00:03:25,960 --> 00:03:30,670
The bitcoin subreddit is one of the
biggest big coin communities in the world.

59
00:03:30,880 --> 00:03:34,120
Everyday people share news articles,
tutorials,

60
00:03:34,270 --> 00:03:38,830
and events related to bitcoin and the
top posts get up voted accordingly.

61
00:03:39,040 --> 00:03:40,630
Yes,
it's a bunch of handlers.

62
00:03:40,870 --> 00:03:45,310
We can use a red at API to pull the top
posts from this subreddit for the past

63
00:03:45,311 --> 00:03:48,790
30 days. We can combine this
data with data from Twitter,

64
00:03:48,970 --> 00:03:53,290
specifically tweets that used the
word bitcoin using the Twitter Api.

65
00:03:53,560 --> 00:03:57,550
It's essentially going to be a lot
of text data, so to clean this up,

66
00:03:57,670 --> 00:04:02,670
we'll use a prebuilt dictionary with
a top 10 k most common words to remove

67
00:04:02,771 --> 00:04:07,771
words that are not in the dictionary will
also use the coindesk API to pull the

68
00:04:08,291 --> 00:04:12,790
bitcoin price from the past 30 days and
generate two classes using this data

69
00:04:12,820 --> 00:04:16,060
because zero means a price went up.
One means the price went down.

70
00:04:16,360 --> 00:04:18,220
Now that we've compiled the Dataset,

71
00:04:18,370 --> 00:04:21,100
we can build an appropriate
model for this data.

72
00:04:21,430 --> 00:04:24,730
One thing we could do
is build a bag of words.

73
00:04:24,970 --> 00:04:29,620
This means attempting to separate each
word in a data point into a list of words,

74
00:04:29,621 --> 00:04:34,570
Aka a bag so that each word carries
meaning with respect to the overall reddit

75
00:04:34,571 --> 00:04:35,560
or Twitter posts.

76
00:04:35,770 --> 00:04:39,730
And we could use a simple deep neural
network to predict the price of bitcoin

77
00:04:39,731 --> 00:04:42,040
goes up or down based on this.

78
00:04:42,340 --> 00:04:46,660
But the problem with this model is that
it doesn't preserve the ordering between

79
00:04:46,661 --> 00:04:47,350
words,

80
00:04:47,350 --> 00:04:52,350
meaning the network won't recognize
complex ideas that span many words.

81
00:04:52,870 --> 00:04:56,920
We need a model that will let us input
words in order that will understand that

82
00:04:56,921 --> 00:04:58,600
our data is sequential.

83
00:04:58,870 --> 00:05:02,560
That's why we'll use a recurrent
network at every time step.

84
00:05:02,561 --> 00:05:04,900
We're inputting not just
the next data point,

85
00:05:05,020 --> 00:05:07,480
but the hidden state from
the previous time step.

86
00:05:07,750 --> 00:05:11,740
And when it comes to price prediction,
long short term memory,

87
00:05:11,770 --> 00:05:16,630
recurrent networks or lsms have been shown
to give the best results because they

88
00:05:16,631 --> 00:05:20,590
remember longterm sequences,
which is what we have LSTM networks.

89
00:05:20,591 --> 00:05:23,260
He's a special cell structure
involving three gates,

90
00:05:23,470 --> 00:05:27,940
which stores the gradient during the
optimization process in a way that allows

91
00:05:27,941 --> 00:05:32,380
it to fully update all the layers of
the network instead of diminishing over

92
00:05:32,381 --> 00:05:35,500
time. A common problem when
training recurrent networks,

93
00:05:35,800 --> 00:05:40,800
these dates are essentially a form of
memory and their weights are updated as

94
00:05:40,811 --> 00:05:43,000
well.
During the optimization process,

95
00:05:43,030 --> 00:05:45,880
gates are way to optionally
let information through.

96
00:05:45,881 --> 00:05:50,881
They are composed of a sigmoid neural
net layer and a point wise multiplication

97
00:05:50,921 --> 00:05:51,754
operation.

98
00:05:52,000 --> 00:05:57,000
The sigmoid layer outputs numbers between
zero and one describing how much of

99
00:05:57,110 --> 00:06:02,110
each component should be let through a
value of zero means let nothing through.

100
00:06:02,360 --> 00:06:05,480
While a value of one means
let everything through.

101
00:06:05,660 --> 00:06:10,610
So an Lstm has three of these gates
to protect and control the cell state.

102
00:06:11,030 --> 00:06:15,890
They're like plumbing valves without the,
you know. Yeah. You know what I mean?

103
00:06:16,400 --> 00:06:20,780
So we can vectorize each of our
social media posts using word two VEC.

104
00:06:20,960 --> 00:06:25,220
This is a pre trained a neural network
that we can use to immediately turn our

105
00:06:25,221 --> 00:06:26,300
words into vectors.

106
00:06:26,330 --> 00:06:31,330
These vectors are representations of
words and allow us to measure how similar

107
00:06:31,371 --> 00:06:34,250
words are. Mathematically. It's a better,

108
00:06:34,280 --> 00:06:39,050
more machine readable representation of
text that we can correlate with bitcoin

109
00:06:39,051 --> 00:06:39,884
prices.

110
00:06:39,950 --> 00:06:44,150
Once vectorized we'll feed our input
data to our model with the associated

111
00:06:44,151 --> 00:06:46,010
binary labels in batches.

112
00:06:46,220 --> 00:06:50,330
Care Os allows us to build complex
deep networks quite easily,

113
00:06:50,480 --> 00:06:54,500
so we'll use it with a tensorflow
backend for our training process.

114
00:06:54,620 --> 00:06:58,910
We'll let our network make predictions
about the price for each input data point.

115
00:06:59,090 --> 00:07:02,150
Then compare that prediction
with the actual label.

116
00:07:02,420 --> 00:07:04,460
That result is our error value,

117
00:07:04,461 --> 00:07:08,420
which we'll use grading dissent to
optimize automatically by computing a

118
00:07:08,470 --> 00:07:08,930
gradient.

119
00:07:08,930 --> 00:07:13,460
Of course this gradient is a signal
that tells our network how much do you

120
00:07:13,461 --> 00:07:15,650
update it's wade values to make it better.

121
00:07:16,160 --> 00:07:20,000
Once trained we can visualize how well
our network predicted at the price went

122
00:07:20,030 --> 00:07:21,800
up or down on a given day.

123
00:07:21,950 --> 00:07:25,460
And luckily for us it's a
better than 50% prediction.

124
00:07:25,880 --> 00:07:30,210
Obviously with more data our network
will be more robust and while overfitting

125
00:07:30,260 --> 00:07:32,810
is a common problem in price prediction,

126
00:07:33,050 --> 00:07:37,400
we can use techniques like drop out
and regularization to prevent this from

127
00:07:37,401 --> 00:07:40,820
happening in future versions.
So what should you remember?

128
00:07:41,150 --> 00:07:45,260
Crypto currency prices are
highly driven by speculation,

129
00:07:45,500 --> 00:07:50,500
and we can use sentiment analysis from
social media to help predict future

130
00:07:50,751 --> 00:07:55,700
prices. Sentiment analysis is the process
of using machine learning algorithms to

131
00:07:55,760 --> 00:08:00,760
analyze the emotions behind data from
people and LSTM networks proved to be a

132
00:08:01,911 --> 00:08:05,060
useful model to help
analyze sequential data.

133
00:08:05,120 --> 00:08:07,610
Please subscribe for more
programming videos. And for now,

134
00:08:07,670 --> 00:08:10,280
I've got to predict the future,
so thanks for watching.

