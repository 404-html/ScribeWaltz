1
00:00:00,070 --> 00:00:03,560
Hello world, it's Suraj and I'm here
with my friend at town. Hey, I'm a tine,

2
00:00:03,561 --> 00:00:05,760
I make interactive multimedia art and uh,

3
00:00:05,800 --> 00:00:07,990
we're gonna work on a robotics
project together. Yeah.

4
00:00:07,991 --> 00:00:11,570
So I had the idea for a hardware video
and hey, ton came to mind. So it's on,

5
00:00:11,571 --> 00:00:13,060
you want to say what the project for sure.

6
00:00:13,090 --> 00:00:15,520
So it's this idea that I've
been thinking about for awhile,

7
00:00:15,550 --> 00:00:18,070
how the Internet is very voyeuristic
and we're constantly sort of looking

8
00:00:18,071 --> 00:00:19,450
through our screens at other people.

9
00:00:19,600 --> 00:00:21,370
But what happens if now
the screen looks back,

10
00:00:21,640 --> 00:00:24,640
we're going to take a screen with a camera
and put it behind the Venetian blinds.

11
00:00:24,940 --> 00:00:27,190
And then if this,
if the camera picks up a face,

12
00:00:27,191 --> 00:00:29,190
that blinds will close and
then as the blinds closed,

13
00:00:29,191 --> 00:00:30,640
they won't see a face and
where so they'll open.

14
00:00:30,760 --> 00:00:31,930
So what happens with our screens?

15
00:00:31,931 --> 00:00:35,860
Look back at us instead of us just
looking through our screens. Yeah,

16
00:00:35,861 --> 00:00:36,880
this is going to be awesome.

17
00:00:36,881 --> 00:00:39,040
So we're going to show you the
hardware first and then the code.

18
00:00:39,041 --> 00:00:41,110
So shall we get started?
Yeah, let's do it.

19
00:00:44,590 --> 00:00:48,170
But there's the raspberry Pi we're
going to use. What else? So we have the,

20
00:00:48,750 --> 00:00:51,300
the raspberry Pi camera it mega pixels.
All right,

21
00:00:51,510 --> 00:00:54,210
we have a case for the camera
also so it doesn't get ruined.

22
00:00:55,560 --> 00:00:58,530
Then we have this board over here,
which is a,

23
00:00:58,560 --> 00:01:01,590
which is going to be a hat we
put on top of the Raspberry Pi,

24
00:01:01,800 --> 00:01:05,520
which will let us control the service
and the service are over here.

25
00:01:05,521 --> 00:01:08,010
I got an extra one just in
case cause I didn't want to,

26
00:01:08,070 --> 00:01:10,560
I didn't want to mess
up while we're doing it.

27
00:01:11,550 --> 00:01:15,270
And then finally here is the
power supply for the service.

28
00:01:18,830 --> 00:01:20,780
I mean it configure the um,

29
00:01:21,270 --> 00:01:25,370
the operating system to be able to
talk to this particular display. See,

30
00:01:25,390 --> 00:01:29,640
have to put a special config dot text
file on the chip and a particular

31
00:01:29,641 --> 00:01:33,300
directory. And then when you
boot up the raspberry Pi,

32
00:01:33,330 --> 00:01:36,480
this display will work and
not just display a bunch
of like random white lines.

33
00:01:37,420 --> 00:01:42,180
Okay. So we had the new config on the SD
card and we're going to put it into the,

34
00:01:42,240 --> 00:01:43,380
into the raspberry Pi.

35
00:01:44,740 --> 00:01:49,740
And then know when we plug in the
raspberry Pi with the screen over here,

36
00:01:51,670 --> 00:01:55,610
it should
turn on,

37
00:01:56,430 --> 00:01:59,320
let's see if it worked and didn't work.

38
00:02:08,310 --> 00:02:10,010
Oh, there we go. That's where, okay,

39
00:02:14,030 --> 00:02:17,630
so I have everything working and Allison's
working and my keyboard should be

40
00:02:17,631 --> 00:02:21,980
working in a second so we could open up
terminal and start, start typing away.

41
00:02:26,100 --> 00:02:28,800
So right here we have the uh,
this integrated circuit,

42
00:02:29,370 --> 00:02:31,500
which will let us control the service.

43
00:02:31,530 --> 00:02:36,530
And with why this is important is it's
I'm a pwn PWM controller since we're

44
00:02:36,571 --> 00:02:39,150
pulse with modulation.
So the Servo,

45
00:02:39,151 --> 00:02:44,151
which is over here is controlled
via a series of pulses from the,

46
00:02:44,730 --> 00:02:47,130
from the computer or
the integrated circuit.

47
00:02:47,580 --> 00:02:50,790
The problem is raspberry
Pi's integrated circuit,

48
00:02:51,300 --> 00:02:55,200
the raspberry Pi's Gpio output,
which are these pins over here,

49
00:02:55,201 --> 00:02:59,500
which send signals to periphery devices.
Um,

50
00:02:59,660 --> 00:03:04,660
there's only one I think that has the
precision that we need to control the

51
00:03:04,841 --> 00:03:09,820
Servo that we have. So therefore they
created this hat which just as a sort of,

52
00:03:09,850 --> 00:03:13,600
which is a device which will sit on top
of the raspberry pie once we solder it

53
00:03:13,601 --> 00:03:17,710
and it will sort of sit right
over here. Um, and once,

54
00:03:17,711 --> 00:03:21,040
and with this hat allows us to do is I
have much more precise control through a

55
00:03:21,041 --> 00:03:23,560
series of libraries,
uh,

56
00:03:23,570 --> 00:03:27,430
on the raspberry Pi to actually
control the Servo as we desired.

57
00:03:27,940 --> 00:03:30,400
So once we have this working and
we'll be able to, and these aren't,

58
00:03:30,430 --> 00:03:32,830
these aren't soldered in just yet,
once we have this working,

59
00:03:32,980 --> 00:03:37,980
we'll be able to take the input from the
camera when it detects a face and sends

60
00:03:38,351 --> 00:03:43,351
an output signal over the
Gpio pins through this hat
to control the servo how we

61
00:03:45,030 --> 00:03:48,400
want and we'll turn the blind accordingly.
Yeah,

62
00:03:48,440 --> 00:03:51,490
we're just salary and the connections to,
I was very fine.

63
00:03:56,230 --> 00:03:58,880
I'm going to look at it to make sure I
didn't like solder or any of the pins

64
00:03:58,881 --> 00:04:00,530
together because that would mess that up.

65
00:04:01,260 --> 00:04:04,280
So just making sure that
all the salaries done well.

66
00:04:05,090 --> 00:04:07,760
So we'll put these characters in this
way and then we'll show you once,

67
00:04:07,850 --> 00:04:09,130
once we saw her in,

68
00:04:09,530 --> 00:04:13,940
we'll be able to take the Servo
and just slot it right on top.

69
00:04:14,180 --> 00:04:19,040
Sought it right on top of these
connectors and we should be good to go.

70
00:04:28,810 --> 00:04:32,620
So we're checking the raspberry Pi camera
and now we're going to put it inside

71
00:04:32,621 --> 00:04:37,390
of the Raspberry Pi case just to
protect it and make sure that what mean.

72
00:04:37,510 --> 00:04:41,380
So because this is a nice clean servant
surface on the back to be able to stick

73
00:04:41,381 --> 00:04:43,060
it to the wall.
Perfect.

74
00:04:43,090 --> 00:04:46,540
So we just popped the case.

75
00:04:47,940 --> 00:04:52,330
I don't want to break it.
There we go. There we go.

76
00:04:52,810 --> 00:04:56,200
So on the camera there's this little
blue tab and just pull it off.

77
00:04:56,230 --> 00:04:57,880
So we could actually,
it's the camera.

78
00:04:58,510 --> 00:05:03,510
We don't ruin the camera so the camera
could see out slided and over these

79
00:05:03,581 --> 00:05:07,900
little spokes and the buttons
so it sort of sticks nicely.

80
00:05:08,590 --> 00:05:12,140
And then find the, the, um,

81
00:05:14,350 --> 00:05:16,990
and then I think we owe that.
Oh yeah, the divot is in here.

82
00:05:16,991 --> 00:05:19,000
So just sort of this the tab which,

83
00:05:19,090 --> 00:05:24,090
which powers the camera sits in nicely
and we slip on the cover and that's it.

84
00:05:27,940 --> 00:05:30,640
There it is.
Pi Camera is protected.

85
00:05:31,210 --> 00:05:33,880
So now we can play around with it and
don't have to worry about bumping into it

86
00:05:33,881 --> 00:05:38,140
in any weird way and we'll be
able to install it efficiently.

87
00:05:38,230 --> 00:05:42,190
So now we're going to install the camera
through the hat because we finished all

88
00:05:42,191 --> 00:05:45,640
the soldering and we've done
our single set of output pins.

89
00:05:46,400 --> 00:05:51,220
And by this, so we have the slide the
camera right through here so we don't,

90
00:05:51,250 --> 00:05:54,350
uh, so you know, and we didn't
want to do it while soldering,

91
00:05:54,351 --> 00:05:58,490
so we didn't want to stop it at the
camera. So we want the blue side of the,

92
00:05:58,910 --> 00:06:02,750
of the, um, of the camera
facing the black side of the,

93
00:06:03,340 --> 00:06:05,860
um,
of the raspberry Pi because the,

94
00:06:05,861 --> 00:06:10,861
the connecting pins over here
go up against the connecting
pins on the inside of

95
00:06:11,451 --> 00:06:13,760
this connection.

96
00:06:14,450 --> 00:06:18,580
All we do is we slide
it in gently uninsured,

97
00:06:18,710 --> 00:06:22,940
just slipped right into place
up in. There it goes. So now,

98
00:06:23,300 --> 00:06:25,550
now the camera's insecurity.
So if you pull on it,

99
00:06:25,670 --> 00:06:30,350
it shouldn't slide out and we could,
uh, now I'm going to add back the,

100
00:06:30,680 --> 00:06:34,730
the top of the breath of
the raspberry Pi case.

101
00:06:34,970 --> 00:06:39,940
So it kills right over there the
first thing. So it slides in nicely.

102
00:06:41,020 --> 00:06:44,790
Then this guy,
this top piece also slides in really,

103
00:06:44,820 --> 00:06:48,700
really nicely and once one to after
I agree, attach all the screws,

104
00:06:48,710 --> 00:06:50,360
this camera,
this,

105
00:06:50,361 --> 00:06:55,361
this hat we'll slide in and it will
attach into the Gpio pins on the Pi should

106
00:06:56,961 --> 00:07:00,230
just slip it in really nicely
up and their clicks in.

107
00:07:00,290 --> 00:07:04,370
And now the how does attach and it's
not going anywhere and we'll be able to

108
00:07:04,371 --> 00:07:07,250
control it from the Raspberry Pi.

109
00:07:07,850 --> 00:07:08,683
Okay.

110
00:07:11,090 --> 00:07:14,750
The question now that I'm talking with
Siraj about is like how do we install

111
00:07:14,751 --> 00:07:19,570
open CV on the raspberry Pi because we're
going to need it to use open CV to, um,

112
00:07:19,730 --> 00:07:21,320
determine if we'd see a face or not.

113
00:07:21,800 --> 00:07:26,800
The problem I've had and is that open CV
three is there's no pre compiled binary

114
00:07:27,590 --> 00:07:31,730
on wn. So it's like such a
pain to compile it from source,

115
00:07:31,731 --> 00:07:36,110
especially on a, this raspberry pie
because it's just, it's a relatively slow,

116
00:07:36,170 --> 00:07:38,990
it's quick,
but compared to the original raspberry Pi,

117
00:07:38,991 --> 00:07:41,640
but still a relatively slow computer.

118
00:07:41,641 --> 00:07:44,420
So I think what we're going to do is
we're going to install an older version of

119
00:07:44,421 --> 00:07:49,280
open CV so that we could just get it pre
compiled and sort of work in python two

120
00:07:49,281 --> 00:07:52,980
instead of python three even though that's
what I would have loved to do. But so,

121
00:07:53,230 --> 00:07:57,830
so Raj has been videoing me, so I'm going
to video Sarraj back video assumption.

122
00:07:59,690 --> 00:08:03,720
There we go. Look at that.
Oh my God. Cameras work. Hey.

123
00:08:07,490 --> 00:08:11,940
So there are two modules you'll need to
install onto the raspberry pi open CV.

124
00:08:11,941 --> 00:08:15,890
You will let the camera to detect faces
and I GPIO will control the service.

125
00:08:16,250 --> 00:08:18,650
And then for the code,
we'll look in Maine dot. Py.

126
00:08:18,860 --> 00:08:23,030
So other than open CV and num py, we've
got to help our libraries here. Hi,

127
00:08:23,031 --> 00:08:23,661
video stream.

128
00:08:23,661 --> 00:08:27,110
We'll read in our video stream and
blinds will open and close the blind by

129
00:08:27,111 --> 00:08:29,480
issuing Servo commands.
So named window,

130
00:08:29,481 --> 00:08:33,470
we'll initialize the frame that we can
get the images from and then we can start

131
00:08:33,471 --> 00:08:37,280
the contents of that video stream using
the start method of our helper class in,

132
00:08:37,281 --> 00:08:38,780
we'll initialize our blinds object,

133
00:08:38,781 --> 00:08:41,030
which we'll use to open and
close your blinds in a second.

134
00:08:41,570 --> 00:08:42,830
And in this wild statement,

135
00:08:42,831 --> 00:08:47,030
we can continuously get the images
from our video stream and we'll use the

136
00:08:47,110 --> 00:08:50,300
[inaudible] function of open CV
to get the image from the frame.

137
00:08:50,600 --> 00:08:52,580
And then using the redirects function,

138
00:08:52,581 --> 00:08:56,880
we can detect if there's a face for
knots and store that in the rex variable.

139
00:08:57,270 --> 00:08:59,100
If direct is not empty,

140
00:08:59,101 --> 00:09:03,330
that means that we detected a face so the
blinds come close. Else that can open.

141
00:09:08,140 --> 00:09:09,040
Cool. So I'll, I'll,

142
00:09:09,060 --> 00:09:14,060
what we're doing now is I'm up to the
stage where I want to attach the blind to

143
00:09:14,271 --> 00:09:18,290
my wall. So I'm just gonna
put it right here on the wall.

144
00:09:18,620 --> 00:09:21,530
Nothing special because the
screen's going to be behind it.

145
00:09:21,980 --> 00:09:23,570
And in order to do this,

146
00:09:23,900 --> 00:09:26,660
we're going to use these handy
mounts that come with a blind.

147
00:09:37,520 --> 00:09:38,530
We have the,

148
00:09:38,860 --> 00:09:42,680
the side of Venetian blinds nail to my
wall correctly on the studs so things

149
00:09:42,681 --> 00:09:46,670
don't fall down.
Then up here we have the Servo,

150
00:09:46,730 --> 00:09:50,270
which is sort of gently
attached to the turning motor,

151
00:09:50,480 --> 00:09:54,050
the turning mechanism of the blinds.
So when the Servo turns, we'll,

152
00:09:54,080 --> 00:09:58,910
it'll turn the blind to mechanism instead
of the standard like Steck that return

153
00:09:59,540 --> 00:10:03,230
then attach to the Servo,
it goes directly into the breadboard.

154
00:10:03,500 --> 00:10:07,450
So I broke the little, um, the hat
I had last time. And what this is,

155
00:10:07,451 --> 00:10:08,390
is just the breadboard,

156
00:10:08,391 --> 00:10:13,391
which has the five volt connection
connected to the Red Servo vine.

157
00:10:14,120 --> 00:10:19,120
The ground connection to the brown sort
of align and the data connection to the

158
00:10:19,731 --> 00:10:24,440
18th pin on the, um, on the raspberry Pi.

159
00:10:24,710 --> 00:10:28,840
And this is, that's just the pin I've
chosen to do the pulse with modulation,

160
00:10:28,860 --> 00:10:33,180
the PCM output on which will then
control the servo accordingly. Uh,

161
00:10:33,240 --> 00:10:38,180
and I'm using the pig,
uh, the Pi Pg Gio library,

162
00:10:38,181 --> 00:10:42,470
which works really well unless we
do effective pulse with modulation.

163
00:10:43,040 --> 00:10:45,620
Then that connects the raspberry Pi,
which,

164
00:10:45,650 --> 00:10:48,080
which controls both the camera,

165
00:10:48,350 --> 00:10:52,040
which will look at us when we
were in the frame and the um,

166
00:10:52,070 --> 00:10:56,760
the raspberry Pi screen where we'll
see ourselves and our picture. Um,

167
00:10:57,350 --> 00:11:00,860
now we'll close the blinds
and get everything working

168
00:11:03,650 --> 00:11:06,290
gently. Very exciting, very exciting.

169
00:11:06,291 --> 00:11:10,190
So we've gotta make sure all
the blinds are crafts. Sweet.

170
00:11:12,890 --> 00:11:16,430
Cool. So now they're closed
and we'll just run the, uh,

171
00:11:16,490 --> 00:11:18,200
the main program.

172
00:11:20,810 --> 00:11:25,810
So open CV should start working and my
face is on the screen and it doesn't

173
00:11:26,241 --> 00:11:28,970
recognize me just, yeah.
But if I take a step back,

174
00:11:30,050 --> 00:11:32,480
camera now sees me and the blinds closed.

175
00:11:34,000 --> 00:11:38,020
Now it won't see me anymore
and the blinds open.

176
00:11:39,930 --> 00:11:43,320
But now my face is here so
it closes again. So the cost,

177
00:11:43,340 --> 00:11:47,890
they'll go back and forth, blinds, opening
and closing while I stand in the frame.

178
00:11:48,460 --> 00:11:50,290
If we,
if I step out of the frame,

179
00:11:55,270 --> 00:11:58,000
both seraphs and I are
outside of the frame.

180
00:11:58,900 --> 00:12:02,230
The blind shits they open because
there's no, there's no face.

181
00:12:02,680 --> 00:12:06,550
But if we peek in,
they close.

182
00:12:07,630 --> 00:12:10,390
Yeah, it's working. Please
subscribe. And for now,

183
00:12:10,391 --> 00:12:13,470
we've got to clean up some hardware,
so thanks for watching.

