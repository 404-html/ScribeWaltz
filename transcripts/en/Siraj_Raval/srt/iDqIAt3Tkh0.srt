1
00:00:00,060 --> 00:00:01,590
Hello world,
it's a Raj.

2
00:00:01,650 --> 00:00:05,400
And today I wanna talk about
a platform called trust token.

3
00:00:05,670 --> 00:00:08,190
We're going to go over some code,
we're going to go over some theory,

4
00:00:08,191 --> 00:00:12,130
we're going to go over how it works,
what it does, what's the point of it. Um,

5
00:00:12,280 --> 00:00:15,930
and in the end I'm going to build a
solidity demo just to get you used to the

6
00:00:15,931 --> 00:00:19,290
idea of a theory. I'm smart contracts,
which is what this is built on.

7
00:00:19,560 --> 00:00:23,400
So I want to start off by saying
I was paid to make this video,

8
00:00:23,730 --> 00:00:26,790
but I only said yes for two reasons.
Number one,

9
00:00:26,820 --> 00:00:30,480
I personally know the founders and
I know they have good intentions.

10
00:00:30,810 --> 00:00:33,550
And number two,
I actually believe in the products.

11
00:00:33,551 --> 00:00:36,660
So the last paid video I made
was for Intel because again,

12
00:00:36,690 --> 00:00:40,140
I believed in the product, the
movidius neural compute stick. Okay.

13
00:00:40,141 --> 00:00:42,300
So I just want to make
that very clear before we,

14
00:00:42,390 --> 00:00:46,890
before we get started with this.
Okay. So this is a cool product,

15
00:00:46,891 --> 00:00:51,810
especially as somebody who has become a
bit disillusioned with the space because

16
00:00:51,811 --> 00:00:53,790
of the amount of scams,

17
00:00:53,940 --> 00:00:57,480
because of the scalability
issues with some platforms.

18
00:00:57,630 --> 00:00:59,730
Because of the lack of regulations,
which is,

19
00:00:59,760 --> 00:01:04,230
which are leading to a lot of people
losing a lot of money. So that's kind of,

20
00:01:04,290 --> 00:01:07,380
you know, a few of the reasons I become
kind of disillusioned with the space.

21
00:01:07,381 --> 00:01:12,360
But I like the idea of trust token.
I like where they're going with this.

22
00:01:12,570 --> 00:01:15,060
Um, and so that's why I wanted
to talk about it today. Okay.

23
00:01:15,061 --> 00:01:17,850
So what is the whole point
behind this? Well, okay,

24
00:01:17,851 --> 00:01:22,851
so what it is is it's a platform to create
asset back tokens that you can easily

25
00:01:23,131 --> 00:01:25,380
buy and sell around the world.
Okay.

26
00:01:25,381 --> 00:01:29,820
So basically the idea is that you
can tokenize everything. Okay.

27
00:01:29,821 --> 00:01:34,170
So real estate, oil, currencies,
your dog, your, you know,

28
00:01:34,171 --> 00:01:38,880
any kind of physical object
in the real world, um, you
know, your house, et Cetera.

29
00:01:38,910 --> 00:01:42,210
There's, there's so many things that
you could do, you know, your art pieces,

30
00:01:42,211 --> 00:01:45,540
your music, et cetera. And so you
might be thinking, well, why would I,

31
00:01:45,570 --> 00:01:46,740
why would I want to do that?

32
00:01:46,741 --> 00:01:49,350
I could just put it on some
marketplace and sell it there. Well,

33
00:01:49,830 --> 00:01:54,830
it turns out that not everybody has
access to investment opportunities.

34
00:01:55,620 --> 00:02:00,480
And not everybody has access to the
ability to raise capital for this project.

35
00:02:00,840 --> 00:02:05,840
And so what the idea of
tokenizing everything does
is it democratizes access to

36
00:02:07,171 --> 00:02:11,130
capital. So anybody can raise
capital for their project, right? By,

37
00:02:11,190 --> 00:02:15,180
by issuing these tokens, right?
So if I have some, you know,

38
00:02:15,210 --> 00:02:16,840
house or something,
um,

39
00:02:16,890 --> 00:02:21,690
I could then tokenize that house and allow
anybody to then share in ownership of

40
00:02:21,691 --> 00:02:26,610
that house by issuing tokens. Right?
And so that's one. So the ability to,

41
00:02:26,830 --> 00:02:29,970
uh, raise capital for,
you know, whatever it is.

42
00:02:30,180 --> 00:02:35,180
The second great thing about this is
the ability to then invest in anything,

43
00:02:35,521 --> 00:02:38,880
right? So think about Tesla
stock, right? So Tesla stock,

44
00:02:39,180 --> 00:02:42,850
only certain people can invest in
Tesla, right? First of all, you,

45
00:02:42,860 --> 00:02:47,860
ideally you're an American because
it's an American company listed on the

46
00:02:47,880 --> 00:02:51,360
American Stock Exchange, right? So a
lot of people are not included, right?

47
00:02:51,361 --> 00:02:55,020
They're not included in the ability to
purchase Tesla stock simply because they

48
00:02:55,021 --> 00:02:57,360
weren't born in the United States,
right?

49
00:02:57,361 --> 00:03:01,750
So democratizing access to investment
opportunities to everybody.

50
00:03:01,810 --> 00:03:05,530
Then the ability to raise capital for
everybody is something that blockchain

51
00:03:05,560 --> 00:03:10,090
technology and uh, an implementation of
it trust token or aiming to do. Okay.

52
00:03:10,091 --> 00:03:14,050
So another thing is the idea of an ICO,
right?

53
00:03:14,051 --> 00:03:16,810
So I see owes,
have kind of done that.

54
00:03:16,811 --> 00:03:20,920
They've democratized the ability for
anybody to raise capital anywhere in the

55
00:03:20,921 --> 00:03:24,130
world. But the problem is that
there are, there's no, you know,

56
00:03:24,190 --> 00:03:27,460
regulatory legal framework
around all of this.

57
00:03:27,640 --> 00:03:30,000
And this has resulted in a lot of scams,
right?

58
00:03:30,020 --> 00:03:31,960
A lot of people losing a lot of money.

59
00:03:32,260 --> 00:03:35,830
You don't necessarily have to be an
accredited investor to invest in any of

60
00:03:35,831 --> 00:03:40,570
these ics, but you do in the
case of, uh, trust token,

61
00:03:40,720 --> 00:03:45,550
right? So not necessarily an accredited
investor meeting of $1 million in, in,

62
00:03:45,610 --> 00:03:46,510
in,
in capital,

63
00:03:46,511 --> 00:03:50,470
but they definitely dotted their i's
and t's when it comes to the legal

64
00:03:50,471 --> 00:03:55,060
documents, right? So they've listed
this, this coin on coin list, right? So

65
00:03:59,140 --> 00:04:04,140
if we go to coin list.com we can see a
listing of there's trucks trust token

66
00:04:05,291 --> 00:04:08,470
right there. There it is, right on the,
on the front page of coin list. Right?

67
00:04:08,471 --> 00:04:12,790
So the only other coin
that I think is really,

68
00:04:12,791 --> 00:04:17,560
really cool is file coin of
course. Because again, I know
Juan, he was my roommate.

69
00:04:17,710 --> 00:04:20,740
IPFS is an incredible,
incredible protocol.

70
00:04:20,890 --> 00:04:24,700
And file coin is kind of the glue
that makes IPFS work, right? So, and,

71
00:04:24,740 --> 00:04:26,530
and you know that that's in progress,

72
00:04:26,531 --> 00:04:31,531
but the whole idea behind establishing
coin list was to allow for there to be a

73
00:04:32,201 --> 00:04:36,220
regulatory framework around the
ICO phenomenon, right? So the,

74
00:04:36,430 --> 00:04:37,580
the saft is a,

75
00:04:37,590 --> 00:04:42,590
is a document that was
drafted up specifically for
regulatory compliance with

76
00:04:43,121 --> 00:04:44,620
the security and Exchange Commission,

77
00:04:44,621 --> 00:04:49,180
the SEC and other regulatory
agencies within the United States.

78
00:04:49,510 --> 00:04:54,100
And so if you want to do this,
this idea of an ICO the right way,

79
00:04:54,400 --> 00:04:57,070
you should do it through coin list.
You should do it through the saft.

80
00:04:57,100 --> 00:04:59,500
You should really be legal about it.
Okay.

81
00:04:59,501 --> 00:05:02,890
Because that's the way we're going to
move forward. We have to, we can't just,

82
00:05:03,130 --> 00:05:06,640
we can't just say, okay, there's a
government and there's this, you know,

83
00:05:07,000 --> 00:05:11,650
everything is archaic. Let's just trash
it all and restart. Unfortunately,

84
00:05:11,980 --> 00:05:14,050
that's not how it's gonna work right now.
Right.

85
00:05:14,051 --> 00:05:19,051
We have to slowly bridge our way into
a world where everything is crypto in

86
00:05:19,451 --> 00:05:23,650
digital, but we're not just going to be
able to say, oh, VR is of no use anymore.

87
00:05:23,770 --> 00:05:26,900
That's not how it works. Okay,
so end of that little, you know,

88
00:05:28,450 --> 00:05:29,560
little arguments right there.

89
00:05:29,561 --> 00:05:34,090
So the idea is that trust Hokkien allows
you to tokenize everything, right? So,

90
00:05:34,091 --> 00:05:37,970
and it's been listed on a bunch of,
you know, reputable exchanges, um,

91
00:05:38,110 --> 00:05:41,260
listing the listing of them
is right here, uh, and it,

92
00:05:41,261 --> 00:05:43,600
you can redeem it one
for one for a US dollar.

93
00:05:43,601 --> 00:05:46,840
So one true USD token.

94
00:05:46,841 --> 00:05:50,470
So trust token is the name of the platform
and the cryptocurrency is called true.

95
00:05:50,471 --> 00:05:54,310
USD is worth one US dollar.
So it's a one to one mapping.

96
00:05:54,580 --> 00:05:58,460
What that means is no volatility.
Let me say that again.

97
00:05:58,550 --> 00:06:00,080
No volatility.
Okay.

98
00:06:00,081 --> 00:06:05,081
So the plus side here is that you can now
have some cryptocurrency and not worry

99
00:06:06,141 --> 00:06:10,010
that that value is going to diminish
by 30% in the next hour, right?

100
00:06:10,011 --> 00:06:14,000
Because that's the case with a lot of
cryptocurrencies. But with this it,

101
00:06:14,001 --> 00:06:17,490
because it's pegged to the dollar, you
know, you have that stability. The,

102
00:06:17,600 --> 00:06:22,100
the con is that we are, hey, you
know, like ideologically speaking,

103
00:06:22,101 --> 00:06:23,190
morally speaking in the,

104
00:06:23,360 --> 00:06:27,200
the spectrum of decentralization
and crypto anarchism hey,

105
00:06:27,201 --> 00:06:32,000
you are pegging your digital currency to
this beyond government backed currency.

106
00:06:32,120 --> 00:06:36,030
The whole point is a, it's a
not do that eventually, right?

107
00:06:36,031 --> 00:06:39,950
But we've got to build a bridge first
between the traditional financial world

108
00:06:40,100 --> 00:06:44,150
and the crypto financial world. And what
trust token aims to do is just that.

109
00:06:44,180 --> 00:06:47,170
Okay.
So the idea and the,

110
00:06:47,171 --> 00:06:52,171
and the number they talk about is $256
trillion worth of real world assets.

111
00:06:52,640 --> 00:06:57,290
A lot of it is in real estate, right?
So real estate homes, apartments, land,

112
00:06:57,560 --> 00:06:59,870
this is,
these are not liquid assets.

113
00:06:59,871 --> 00:07:02,780
Meaning no one can invest in
them directly in that way.

114
00:07:02,900 --> 00:07:06,950
You can't trade a piece of a home,
right? Unless you can tokenize it.

115
00:07:06,951 --> 00:07:11,480
And that's what this aims to do. So again,
the team, I know Rafael, I know Steven.

116
00:07:11,481 --> 00:07:13,310
I know Danny, you know,
I met them around there.

117
00:07:13,770 --> 00:07:16,700
They're bay area people and they're,
they're around Stanford, et Cetera.

118
00:07:16,850 --> 00:07:19,370
They worked a kernel, which is a
brain computer interface startup.

119
00:07:19,700 --> 00:07:20,930
When I say platform,

120
00:07:20,931 --> 00:07:24,290
I mean there are five parts to the
system that they've created, right?

121
00:07:24,291 --> 00:07:27,110
So every time you, you say, okay,

122
00:07:27,111 --> 00:07:30,860
I want to tokenize this asset,
let's say it's my apartment.

123
00:07:31,490 --> 00:07:34,700
A smart trust is created.
And so that's the first part.

124
00:07:34,701 --> 00:07:39,230
A smart trust is a smart contract.
This is a solidity smart contract.

125
00:07:39,230 --> 00:07:41,450
This was built on the
theory on blockchain.

126
00:07:41,960 --> 00:07:45,920
And so what it does is it
appoints beneficial asset
ownership to the person who

127
00:07:45,921 --> 00:07:49,730
then creates that a token, right?
So that's what the smart trust does.

128
00:07:50,460 --> 00:07:52,370
The second part is trust market.

129
00:07:52,371 --> 00:07:55,800
And what that does is it allows
clients to higher fiduciary.

130
00:07:55,801 --> 00:08:00,050
So these are trusted third parties who
interfaced with the legal institutions

131
00:08:00,080 --> 00:08:04,850
and are legally bound to manage assets
as instructed by the smart contract.

132
00:08:04,851 --> 00:08:05,750
The Smart Trust,

133
00:08:06,230 --> 00:08:11,090
the trust protocol is the set of
rules or the centralized rule set that

134
00:08:11,091 --> 00:08:14,840
specifies how those smart
contracts can direct fiduciaries.

135
00:08:15,200 --> 00:08:19,670
The trust volt is a decentralized storage
system for allowing for audit trails.

136
00:08:19,671 --> 00:08:23,300
Remember we want to be very legal
about this for acid transactions.

137
00:08:23,450 --> 00:08:27,080
And then lastly, the trust token was
the incentive layer at the very end,

138
00:08:27,081 --> 00:08:28,490
which we're going to be able to use.

139
00:08:28,610 --> 00:08:31,790
So if we look at the stack and it's
quite a big stack, they've, they've,

140
00:08:31,850 --> 00:08:33,950
they've really thought this through,
right?

141
00:08:33,950 --> 00:08:37,490
So you have your physical asset in the
real world, you know, you're, you know,

142
00:08:37,491 --> 00:08:40,970
you're a art piece, your phone,
whatever you want to tokenize.

143
00:08:41,390 --> 00:08:43,070
You have your legal entity on top of that.

144
00:08:43,071 --> 00:08:46,880
That is that a smart
contract asset management.

145
00:08:46,881 --> 00:08:49,850
This is happening in the
form of a trusted fiduciary.

146
00:08:50,700 --> 00:08:55,620
Your Api on top of that that you can then
interact with.

147
00:08:55,920 --> 00:08:58,660
And then you have a blockchain
layer, regulatory layer, um,

148
00:08:58,920 --> 00:09:01,380
and then the staking layer, which
we're going to talk about in a second,

149
00:09:01,381 --> 00:09:02,214
the staking layer.

150
00:09:02,730 --> 00:09:07,320
So the first smart trust was issued
in October 17 and has a bank account.

151
00:09:07,530 --> 00:09:11,070
This is the first time someone
tried to tokenize some product.

152
00:09:11,100 --> 00:09:15,570
So if we go to either scan and we
type in that smart contract, a dress,

153
00:09:16,800 --> 00:09:19,650
there we go. We can see it right
there. On the ethereum blockchain,

154
00:09:19,950 --> 00:09:24,690
publicly verifiable by anybody.
And so normally you would think,

155
00:09:24,691 --> 00:09:26,520
well, you know, there,
there's no need for this.

156
00:09:26,521 --> 00:09:30,480
You would send money directly to the
entity that you want to exchange with and

157
00:09:30,481 --> 00:09:31,440
they would then control it.

158
00:09:31,441 --> 00:09:34,740
But when there's a trusted third
party that's not owned by a human,

159
00:09:34,741 --> 00:09:37,910
but it's automated in the
form of a smart contract, uh,

160
00:09:37,920 --> 00:09:42,450
it just makes the whole
transfer, um, less risky, right?

161
00:09:42,451 --> 00:09:45,600
Because you're, you're automating
trust into this smart contract.

162
00:09:47,410 --> 00:09:49,950
And so right now they
have a true USD token,

163
00:09:50,190 --> 00:09:54,570
but they have plans to have one for euro,
the bond assets, et cetera. You know,

164
00:09:54,571 --> 00:09:56,130
things like that,
different currencies.

165
00:09:56,131 --> 00:10:00,600
But right now they have one that's
pegged to the USD [inaudible] currency.

166
00:10:01,020 --> 00:10:05,460
So, and there's a very, there's very
much a need for a stable cryptocurrency.

167
00:10:05,630 --> 00:10:08,830
Look at this chart of, of,
uh, of Bitcoin's price, uh,

168
00:10:08,910 --> 00:10:11,310
over a period of a year or two.

169
00:10:11,820 --> 00:10:16,050
This is way too volatile for anything
useful as a currency, right? Or A,

170
00:10:16,051 --> 00:10:20,460
as a store of value.
So, uh, a store of, of,

171
00:10:20,520 --> 00:10:24,930
of stable value that is,
okay. So, and, and look,

172
00:10:25,540 --> 00:10:25,800
uh,

173
00:10:25,800 --> 00:10:30,090
trust token is not the only token out
there that's trying to have a one to one

174
00:10:30,091 --> 00:10:33,730
mapping with the u s dollar tether
is currently the largest [inaudible]

175
00:10:33,950 --> 00:10:35,700
collateralized cryptocurrency.

176
00:10:35,880 --> 00:10:40,800
But there they have no legal guarantees
that those tether coins can be redeemed

177
00:10:40,801 --> 00:10:42,030
for traditional currency,
right?

178
00:10:42,031 --> 00:10:45,810
So the whole point of this is to allow
both the investor and the PR and the

179
00:10:45,840 --> 00:10:50,840
entity that they are investing
in to breathe a sigh of
relief and know that they

180
00:10:50,941 --> 00:10:53,970
can trust the idea of
tokenizing their assets,

181
00:10:54,120 --> 00:10:57,690
that they're not going to
lose their money. That's the
whole point of regulation,

182
00:10:57,691 --> 00:11:01,190
right? We are rebuilding regulation
in a way around this, this,

183
00:11:01,191 --> 00:11:05,070
this whole crypto space. Uh,
so, so, so they, they, you know,

184
00:11:05,071 --> 00:11:08,790
the drafted up the saft, they,
um, they're listed on coin list.

185
00:11:09,000 --> 00:11:14,000
You go through a form and you have to
list out some information about your

186
00:11:14,360 --> 00:11:16,500
investor status to be able to invest.

187
00:11:16,680 --> 00:11:21,310
So they've really gone through the steps
necessary to make sure that the sec is

188
00:11:21,311 --> 00:11:22,021
happy with them.

189
00:11:22,021 --> 00:11:25,650
And I think this is an example that the
rest of the space should be following.

190
00:11:27,840 --> 00:11:29,370
Okay.
So what are the use cases of this?

191
00:11:29,371 --> 00:11:33,510
So we know that one use case is
to tokenize your assets, right?

192
00:11:33,810 --> 00:11:38,700
Another use case is to have
a stable cryptocurrency for
buying and selling goods,

193
00:11:38,701 --> 00:11:41,670
right? You know, it's great
to be able to use bitcoin,

194
00:11:41,671 --> 00:11:43,430
but you don't know how much
that bitcoin is going to be,

195
00:11:43,431 --> 00:11:47,190
that you can use this to buy things
where digital currencies are accepted.

196
00:11:47,191 --> 00:11:52,191
And because it's built on top of the
ethereum blockchain using the Erc 20

197
00:11:52,351 --> 00:11:54,880
framework, you know the, and
I have a great video on that.

198
00:11:54,881 --> 00:11:59,881
It's called initial point offering Saroj
search out on Youtube of how Erc 20

199
00:12:00,101 --> 00:12:02,520
works,
but because it's an Erc 20 token,

200
00:12:02,530 --> 00:12:06,580
his backwards compatible with all
services that accept etherium, right?

201
00:12:06,581 --> 00:12:10,210
So there's that and you could store it
in your etherium wallet because you know,

202
00:12:10,240 --> 00:12:13,840
all Erc 20 tokens are backwards
compatible with each other.

203
00:12:14,260 --> 00:12:16,720
So let's get to the fun part,
right? The architecture,

204
00:12:16,750 --> 00:12:19,960
which there's not a lot of information
on it, but that's why I'm here for you.

205
00:12:19,961 --> 00:12:24,070
Okay. So, so the idea is this, they're
there. It's two procedures here.

206
00:12:24,100 --> 00:12:26,800
There's a by procedure and
there's a cell procedure.

207
00:12:26,801 --> 00:12:31,060
Let's go over the by procedure. Okay? So
how do we do this? Right? So if we want,

208
00:12:31,061 --> 00:12:35,620
if we have a hundred US dollars and we
wanted to exchange that for a hundred

209
00:12:35,680 --> 00:12:38,050
true USD tokens,
here's how it works.

210
00:12:38,170 --> 00:12:43,170
The first step is for us to be able
to complete KYC and AML compliance.

211
00:12:44,021 --> 00:12:48,490
What that means is know your customer
and um, what does AML stand for?

212
00:12:49,270 --> 00:12:50,620
Anti money laundering,
right?

213
00:12:50,621 --> 00:12:55,100
So these are standard forms that
the sec needs to make sure that uh,

214
00:12:55,480 --> 00:12:58,570
no one's getting screwed over, okay?
That, that's essentially what it is.

215
00:12:58,810 --> 00:13:01,380
And so what once you complete those,
um,

216
00:13:01,480 --> 00:13:05,140
trust tokens team is going to manually
review that, make sure that it works,

217
00:13:05,500 --> 00:13:09,520
then you will submit that
Info, uh, in the form of you,

218
00:13:09,521 --> 00:13:11,200
you're going to have
your ethereum address.

219
00:13:11,440 --> 00:13:13,450
You're going to take that
a theory I'm address,

220
00:13:13,480 --> 00:13:16,090
and you're going to provide
it to the trust token team.

221
00:13:16,570 --> 00:13:20,890
Then you're going to wire
funds to a trusted third
party. And this is an escrow.

222
00:13:20,891 --> 00:13:23,500
It's called Prime Trust.
It's a Nevada based company.

223
00:13:24,130 --> 00:13:27,310
Once you wire those funds
directly to them, uh,

224
00:13:27,370 --> 00:13:31,540
both them as an escrow and a group of
what are called stakers are going to

225
00:13:31,541 --> 00:13:35,500
verify the validity of your transaction
and then a smart contract is going to be

226
00:13:35,560 --> 00:13:39,730
activated. The will then immediately
receive some true USD tokens. Okay,

227
00:13:39,731 --> 00:13:42,700
so there are two checks here,
right? Checks and balances.

228
00:13:42,880 --> 00:13:46,990
The first is the fact that they have this
third party escrow called Prime Trust,

229
00:13:47,140 --> 00:13:47,921
which is a company,

230
00:13:47,921 --> 00:13:51,730
a trust based company as whole job is
to validate transactions. So that's one.

231
00:13:52,060 --> 00:13:55,040
The second is a group of
stakers. So, and right now, um,

232
00:13:55,090 --> 00:13:58,690
they have a few stakers and what the
stakers are is every time you make a

233
00:13:58,691 --> 00:14:03,460
transaction in this networked, 10% of
that transaction is given to the stakers.

234
00:14:03,700 --> 00:14:07,390
And the stakers job is to verify
the validity of transactions, right?

235
00:14:07,391 --> 00:14:10,660
So when it comes to, and I have
this, I had this proof of stake,

236
00:14:10,720 --> 00:14:15,130
a infographic here where you have
a group of people who are verifying

237
00:14:15,131 --> 00:14:17,560
transactions and the network
based on how much stake they have.

238
00:14:17,800 --> 00:14:19,000
And so what this is,
is it,

239
00:14:19,030 --> 00:14:24,030
it's an additional consensus algorithm
on top of the theorems already existing

240
00:14:24,161 --> 00:14:27,160
proof of work and then they will
transition to proof of stake.

241
00:14:27,310 --> 00:14:31,510
But this is just as a way of
further validating that transaction,

242
00:14:31,660 --> 00:14:36,340
which is good for both, both the person
who is trying to get those tokens.

243
00:14:36,610 --> 00:14:40,180
It's good for all parties involved
because it adds a layer of trust to

244
00:14:40,181 --> 00:14:44,190
everything. Okay, so, so
that's the first part of,

245
00:14:44,290 --> 00:14:47,740
so stakers and the escrow. And we're going
to go into this code in second. Okay.

246
00:14:48,220 --> 00:14:51,410
So that's the buy part. The cell
part looks like this, right?

247
00:14:51,411 --> 00:14:53,960
So if you want to use
the trust token platform,

248
00:14:54,110 --> 00:14:56,270
you'll create this smart trust contract.

249
00:14:56,410 --> 00:14:58,700
You issue the title of
the asset to the trust,

250
00:14:58,880 --> 00:15:02,660
and then you'll lock up that trust and
then you can distribute your asset tokens

251
00:15:02,840 --> 00:15:07,700
to anybody who wants to then buy your
asset. Okay? So that was for how to buy.

252
00:15:07,701 --> 00:15:09,200
Let's talk about how to sell,
right?

253
00:15:09,201 --> 00:15:12,230
So when you want to sell
your true USD tokens,

254
00:15:12,231 --> 00:15:15,770
the first step is to burn them,
okay? So what do I mean by burn?

255
00:15:16,010 --> 00:15:18,770
So the idea of burning coins,
what that really means,

256
00:15:18,771 --> 00:15:20,150
and this is an example right here,

257
00:15:20,360 --> 00:15:23,420
is that you're sending them
to an address that nobody has.

258
00:15:23,421 --> 00:15:27,050
The private key to those coins
don't just magically disappear.

259
00:15:27,051 --> 00:15:31,820
What happens is they go to
a locked account that nobody
has the private keys of.

260
00:15:32,000 --> 00:15:36,560
And once the smart contract has verified
that the funds have been transferred to

261
00:15:36,561 --> 00:15:40,820
that public key,
then the service is notified that hey,

262
00:15:40,940 --> 00:15:45,410
these coins have been burned, a boolean
value. And so once you burned your tokens,

263
00:15:45,411 --> 00:15:45,981
the stakers,

264
00:15:45,981 --> 00:15:50,450
we'll verify that transaction and then
you will receive Fiat's from this trusted

265
00:15:50,451 --> 00:15:55,451
third party and you will receive fee
out from a prime trust and then you will

266
00:15:55,521 --> 00:15:57,860
receive your true USC Tokens. Okay, so,

267
00:15:58,010 --> 00:16:00,770
so that's the basic
idea of how that works.

268
00:16:00,830 --> 00:16:04,100
You a user submits a wire to the company
with the crypto wallet information.

269
00:16:04,310 --> 00:16:06,220
They'll send the signal to Tura,
USDS,

270
00:16:06,221 --> 00:16:09,730
smart contract and verifying you purchase
it. And then automatically, you know,

271
00:16:09,770 --> 00:16:12,770
just the whole idea of a smart
contract is that it's automatic.

272
00:16:12,800 --> 00:16:15,320
They get the signal and they'll
send out this funds. Okay.

273
00:16:15,800 --> 00:16:18,200
And so what it looks like when you
actually buy that, once you add,

274
00:16:18,201 --> 00:16:20,720
verify your identity,
you're a theory and address or email,

275
00:16:20,840 --> 00:16:25,460
you can then deposit USC and withdraw
Usd using this very nice graphical user

276
00:16:25,461 --> 00:16:28,610
interface. Okay, so let's get into
the code here for a second. Okay.

277
00:16:28,611 --> 00:16:30,740
So first of all,

278
00:16:30,980 --> 00:16:34,740
I want to talk about how easy it is
to build smart contracts. Okay? It's,

279
00:16:34,741 --> 00:16:39,741
it's very easy to build smart contracts
and not a lot of people appreciate that

280
00:16:40,041 --> 00:16:44,610
fact. Okay? So what we're gonna be using
right now is the theory, some remix a ID.

281
00:16:44,630 --> 00:16:48,920
This is in the browser. Anybody can
compile, run tests there, solidity,

282
00:16:48,921 --> 00:16:49,850
smart contracts.

283
00:16:50,090 --> 00:16:54,530
So I want to build a very simple one
here called a creator balance checker.

284
00:16:54,830 --> 00:16:56,570
And this is just a smart contract that's,

285
00:16:56,600 --> 00:17:00,340
that's able to record the
address and the amount that,

286
00:17:00,341 --> 00:17:03,950
that the person who created the
contract has in their account, right?

287
00:17:03,951 --> 00:17:06,680
So I'm going to create a
contract and that contract,

288
00:17:06,681 --> 00:17:10,250
we'll be able to tell anybody
who then calls it, how much, um,

289
00:17:10,370 --> 00:17:14,930
crypto I have and the address of
the person who created it. Okay? So,

290
00:17:15,260 --> 00:17:19,340
and they use something like this
whenever you're trying to buy a coin.

291
00:17:19,341 --> 00:17:22,670
And we'll get into that. But I want to
start off with a very simple example here.

292
00:17:22,671 --> 00:17:23,504
Okay.
So

293
00:17:25,340 --> 00:17:30,340
we're gonna start off with a contract
called Creator Balance Checker Creator

294
00:17:31,670 --> 00:17:34,640
Balance Checker. This is a
solidity smart contract. Okay?

295
00:17:34,641 --> 00:17:39,170
And so what it's gonna do is going to
record two parameters. The address of me,

296
00:17:39,171 --> 00:17:44,171
the person created the contract and
the amount that I have that's called my

297
00:17:45,801 --> 00:17:50,250
creator balance.
By the way,

298
00:17:50,251 --> 00:17:55,050
you int is an alias for you into two 56.
It's a 256 bit integer.

299
00:17:55,560 --> 00:18:00,150
Okay? So there's that and now I'm going
to create that balance checker function,

300
00:18:00,151 --> 00:18:05,130
right? So creator balance, checker
functioning, it's a public function.

301
00:18:05,131 --> 00:18:09,120
Anybody can access it. Um,
and so what it says is, okay,

302
00:18:10,650 --> 00:18:12,120
who is the creator

303
00:18:15,270 --> 00:18:17,430
and what is their balance?

304
00:18:18,240 --> 00:18:22,080
And so this is basically
the constructor function.

305
00:18:22,400 --> 00:18:26,310
That's a signs, these values, whenever
the creator creates it, right?

306
00:18:26,311 --> 00:18:30,450
So that's it. That's all it
is. And so once we have that,

307
00:18:30,510 --> 00:18:34,920
now we can get to the fun stuff.
Now we can say,

308
00:18:35,250 --> 00:18:40,080
let's get that contract address.
So, uh, whoever, then Kohl's,

309
00:18:40,081 --> 00:18:43,170
this smart contract is
going to be able to,

310
00:18:43,410 --> 00:18:47,050
is going to be able to then return to
receive what that contract addresses.

311
00:18:47,070 --> 00:18:50,970
Now we can do the same thing for get
the Creator's balance. And again,

312
00:18:50,971 --> 00:18:53,190
we're making this very
simple function to do this.

313
00:18:53,580 --> 00:18:57,120
We also want to make sure that
this is going to return a you ENT.

314
00:18:57,150 --> 00:18:59,250
And speaking of what we want to return,

315
00:18:59,550 --> 00:19:02,220
we want to make sure
this returns the address,

316
00:19:04,170 --> 00:19:08,580
okay? And now we simply just returned
that this isn't just a simple get method,

317
00:19:08,581 --> 00:19:12,660
right? It's a simple get a in the
if we went and go back to https,

318
00:19:12,661 --> 00:19:17,630
a rest idea. Okay. And so now, well,

319
00:19:17,670 --> 00:19:19,290
there's also one more
thing I want to do here.

320
00:19:19,291 --> 00:19:21,570
So we're not just getting
the Creator's balance.

321
00:19:21,840 --> 00:19:24,330
We want to get the creators
two types of balance.

322
00:19:24,331 --> 00:19:27,630
So we want to get the Creator's current
balance and we want to get the creator's

323
00:19:27,631 --> 00:19:30,570
balance at the time
that they created this,

324
00:19:32,280 --> 00:19:36,540
this smart contract. Okay?
So this is going to return,

325
00:19:36,990 --> 00:19:41,830
is going to return, it's going to
return. And this is going to be a you int

326
00:19:44,190 --> 00:19:48,150
return creator adopt
balance. Okay. And so,

327
00:19:48,810 --> 00:19:51,480
so this first one is going to
return it at the time of creation.

328
00:19:51,481 --> 00:19:54,330
And this is going to return the
current balance, which is very cool.

329
00:19:54,510 --> 00:19:57,420
So it can actually
return both across time.

330
00:19:58,650 --> 00:20:00,870
And I want to have one
more a function here.

331
00:20:00,871 --> 00:20:05,010
So let's just say we want
to recover funds, right? So
as long as I'm the creator,

332
00:20:05,011 --> 00:20:07,800
I can recover my funds by doing
this for the smart contract,

333
00:20:07,801 --> 00:20:12,150
I can create a kill
function that will say, hey,

334
00:20:12,300 --> 00:20:16,080
if the person who calls this function,
if the messages,

335
00:20:16,350 --> 00:20:19,860
if the message is sender is the
creator of this smart contract,

336
00:20:20,250 --> 00:20:25,110
then go ahead and kill the contract and
send the remaining funds to the creator.

337
00:20:25,290 --> 00:20:29,970
So I'll say called suicide creator.
Okay. Um, there's that the de,

338
00:20:30,030 --> 00:20:32,160
and now I can close this smart contract.

339
00:20:32,160 --> 00:20:35,700
And so now I can start to compile.

340
00:20:36,030 --> 00:20:40,380
I want to see what errors I
have here. Created a balance.
Great. Start to compile.

341
00:20:40,950 --> 00:20:45,450
Okay. It looks good. It looks good.
And now inside of my javascript Vn,

342
00:20:45,510 --> 00:20:47,070
I will now deploy this.

343
00:20:47,500 --> 00:20:52,480
And now I have deployed
this smart contract to this
test and test net and now I

344
00:20:52,481 --> 00:20:56,710
can check it out. And so now what this
does, this guy here is it kind of,

345
00:20:56,920 --> 00:20:59,380
it simulates,
you can do this from console as well,

346
00:20:59,381 --> 00:21:04,150
but we're doing it via this graphical
user interface where I am now calling the

347
00:21:04,151 --> 00:21:06,460
smart contract,
get the contract address.

348
00:21:06,520 --> 00:21:08,950
So that's the address of
the Creator who created it.

349
00:21:08,951 --> 00:21:12,940
And that's me calling that that function.
Let me do the same for the balance,

350
00:21:13,120 --> 00:21:15,160
okay?
That's how much money the creator has.

351
00:21:15,161 --> 00:21:18,670
And you can see that's exactly the
amount I have in my account here.

352
00:21:19,000 --> 00:21:22,120
And now lastly, I'll do the
same thing for the balance now,

353
00:21:22,121 --> 00:21:24,250
which is going to be a little less right.

354
00:21:24,740 --> 00:21:27,160
And now the last function
I'm going to call his kill.

355
00:21:27,580 --> 00:21:31,930
And that kills that smart contract. Now
what? Now that I killed it, if I go back,

356
00:21:32,410 --> 00:21:35,800
of course everything's going
to fail because that's smart
contract doesn't exist.

357
00:21:35,830 --> 00:21:36,071
Okay?

358
00:21:36,071 --> 00:21:40,300
So I just wanted to give you a simple
smart contract example that can compile

359
00:21:40,301 --> 00:21:42,850
and run for you to see how easy
it is to create these things.

360
00:21:43,120 --> 00:21:47,620
So now let's look at their smart
contracts. So they've got this, uh,

361
00:21:47,621 --> 00:21:51,310
get hub repository with a bunch
of different smart contracts. Um,

362
00:21:51,360 --> 00:21:54,720
and so what I've done is I've kind of
like dawn through them and tried to, uh,

363
00:21:54,730 --> 00:21:59,440
decipher what, what the smart
contracts do, what part does what,

364
00:21:59,660 --> 00:22:04,570
um,
and so basically we can say that,

365
00:22:04,820 --> 00:22:06,910
uh,
for when it comes to buying a token,

366
00:22:07,120 --> 00:22:11,920
you have your compliant token dot Sol
fall and your time log dot Sol file. Okay,

367
00:22:11,921 --> 00:22:15,400
so here,
are there a smart contracts?

368
00:22:17,170 --> 00:22:19,480
Okay, so there's a lot. So if
we go to the highest level,

369
00:22:19,481 --> 00:22:21,160
if we go to the highest level here,

370
00:22:21,370 --> 00:22:26,230
and so they're using open Zeplin great
architectural choice to use open Zeppelin

371
00:22:26,231 --> 00:22:31,090
for, uh, templates to easily create these
smart Erc 20 smart contracts. Great idea.

372
00:22:31,840 --> 00:22:32,890
So true.

373
00:22:32,891 --> 00:22:37,540
USC is the highest level smart contract
they have and it inherits from their

374
00:22:37,541 --> 00:22:41,920
other smart contracts. Modular PauseAble
token, no honer burnable token.

375
00:22:41,921 --> 00:22:45,880
It's a compliant token. It's a token
with fees. It's, it's a withdrawal token.

376
00:22:45,881 --> 00:22:50,080
It's a standard delegates,
it can delegate. So all of
these features, you know,

377
00:22:50,081 --> 00:22:53,500
you can withdraw, it has fees,
it's compliant or inherited.

378
00:22:53,710 --> 00:22:57,190
And to go to this master class
master contract, true USD.

379
00:22:57,730 --> 00:23:01,330
And so in the constructor
it is in the constructor,

380
00:23:01,331 --> 00:23:06,100
it is talking about how many tokens or
are in total, how many are being burned,

381
00:23:06,101 --> 00:23:10,030
et cetera. And then you're going
to change the token name, you know,

382
00:23:10,090 --> 00:23:13,930
different things like that. And you've
got a bunch of a helper methods here,

383
00:23:14,200 --> 00:23:17,380
but it's actually a
very small contract for,

384
00:23:17,381 --> 00:23:21,730
for what it does because everything is
really inherited from other classes.

385
00:23:23,110 --> 00:23:25,240
So KYC and AML compliance.

386
00:23:25,241 --> 00:23:28,990
So what is happening here is it's a
manual review by the trust token team.

387
00:23:29,230 --> 00:23:33,400
And this is a string that
holds that boolean value has
a passed or not. They can,

388
00:23:33,520 --> 00:23:34,870
they can then modify that.

389
00:23:34,871 --> 00:23:38,800
So then once this boolean value is set
to true that you've passed, you know,

390
00:23:38,801 --> 00:23:41,980
the next step in the process
is activated automatically,

391
00:23:43,630 --> 00:23:43,871
right?

392
00:23:43,871 --> 00:23:48,860
So the compliant token is all about
storing that value in particular.

393
00:23:49,130 --> 00:23:51,200
And so this is all about buying.
Okay?

394
00:23:51,201 --> 00:23:55,460
So the second really important
part is time locked controller.

395
00:23:55,490 --> 00:23:59,480
So think about the possibilities here.
You can miss the network,

396
00:23:59,481 --> 00:24:03,080
can mint a token,
the network can burn some tokens,

397
00:24:03,440 --> 00:24:05,930
the network can request for
some tokens to be transferred.

398
00:24:06,110 --> 00:24:10,130
And all of this depends on a Timelock,
right? So has the person sent this money?

399
00:24:10,190 --> 00:24:12,980
Okay, go ahead and do this. Has
a person burned this Hogan, okay,

400
00:24:12,981 --> 00:24:16,820
go ahead and do this and that,
that code is in this Timelock controller.

401
00:24:18,350 --> 00:24:20,930
You can even see that
staking fees can be changed.

402
00:24:20,931 --> 00:24:25,550
You can change the person who is able
to stake, uh, you can switch roles.

403
00:24:25,551 --> 00:24:29,630
So certain people can, you know, have
certain permissions to do certain things.

404
00:24:29,990 --> 00:24:33,460
So there's a lot of permissions
here, but they, all, all of it is,

405
00:24:33,520 --> 00:24:37,090
is inherited true USD,
inheritance, all of it. Um,

406
00:24:37,220 --> 00:24:41,180
that's when it comes to buying a token.
When it comes to selling a token,

407
00:24:42,950 --> 00:24:45,710
you've got this burnable token dot Sol.

408
00:24:46,220 --> 00:24:49,490
And what this does is it simply
burns a token, right? So that, that,

409
00:24:49,491 --> 00:24:52,070
that's all it does, right? When you,
when you say, okay, you know what,

410
00:24:52,370 --> 00:24:57,230
I want to trade my true USD token for
some us dollar, you are then using this,

411
00:24:57,280 --> 00:25:02,210
uh, uh, solidity file to send that token
to nowhere that no one has access to.

412
00:25:02,210 --> 00:25:05,300
And then once, uh, the
network realizes that, hey,

413
00:25:05,420 --> 00:25:10,340
this person has burned this
token, then we're going to, um,

414
00:25:10,670 --> 00:25:14,750
delegate access to real,
you know,

415
00:25:14,780 --> 00:25:19,070
USD Fiat currency and that
transaction will be completed. Okay.

416
00:25:19,071 --> 00:25:22,580
So that's how that works. This
is a cool, very cool project.

417
00:25:22,581 --> 00:25:25,970
I think we can learn a lot
from this project by looking
at the way that they did

418
00:25:25,971 --> 00:25:29,820
things in illegal a way,
which is a good thing. Uh,

419
00:25:29,900 --> 00:25:34,010
and also just the fact that they
seem to have very clean code.

420
00:25:34,100 --> 00:25:37,940
This is a good contract design pattern
to have a high level contract and then

421
00:25:37,970 --> 00:25:41,690
other features that are inherited
into that high level contract. Okay.

422
00:25:41,691 --> 00:25:43,670
So I hope you found this video useful.

423
00:25:43,730 --> 00:25:47,510
Please subscribe for more programming
videos and for now I've got to tokenize,

424
00:25:47,600 --> 00:25:48,740
so thanks for watching.

