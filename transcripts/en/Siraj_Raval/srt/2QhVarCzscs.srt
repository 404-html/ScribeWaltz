1
00:00:00,030 --> 00:00:03,600
Hello world. Welcome to sora geology.
Let's talk about four reasons.

2
00:00:03,601 --> 00:00:05,460
Alphago is a huge deal.

3
00:00:05,520 --> 00:00:09,600
Alphago is an AI created by a team of
researchers at Google designed to play the

4
00:00:09,660 --> 00:00:12,690
ancient Chinese game of
go and go to players,

5
00:00:12,691 --> 00:00:16,230
take turns placing black or white
stones on a board trying to capture the

6
00:00:16,231 --> 00:00:19,860
opponents stones or surround empty
space to make points of territory.

7
00:00:19,920 --> 00:00:23,520
The first reason is that it beat the
best human player in the world at a game

8
00:00:23,521 --> 00:00:26,310
that is orders of magnitude
more complex than chess.

9
00:00:26,340 --> 00:00:27,870
Think of solving chess like painting,

10
00:00:27,880 --> 00:00:32,670
align and solving go like painting the
Mona Lisa one is just way more complex

11
00:00:32,671 --> 00:00:33,480
than the other.

12
00:00:33,480 --> 00:00:37,860
Remember Ibm's deep blue and when it beat
world champion Garry Kasparov at chess

13
00:00:37,861 --> 00:00:42,330
in the 90s at the time that was a huge
deal because no program had ever done

14
00:00:42,331 --> 00:00:43,140
that before.

15
00:00:43,140 --> 00:00:46,710
What deep blue did was they would
examine all possible moves and all the

16
00:00:46,711 --> 00:00:50,700
possible countermoves and all the possible
counter counter moves and so on until

17
00:00:50,701 --> 00:00:54,660
it had searched every single possible
play and then pick the best one.

18
00:00:54,960 --> 00:00:57,660
This is called a brute
force search and it worked,

19
00:00:57,840 --> 00:01:01,650
but that method wouldn't
work for go because in go
there are more possible plays

20
00:01:01,651 --> 00:01:04,320
and there are atoms in the
universe. Crazy, right?

21
00:01:04,350 --> 00:01:06,720
So Alphago can't just
try all possible plays.

22
00:01:06,721 --> 00:01:10,530
It has to use intuition like human players
would what it felt would likely be a

23
00:01:10,531 --> 00:01:11,970
good play to do this.

24
00:01:11,971 --> 00:01:15,540
Alphago uses something called a neural
network and neural network is an

25
00:01:15,600 --> 00:01:18,720
algorithm that tries to mimic
how the brain works. Roughly.

26
00:01:18,960 --> 00:01:21,960
You have a bunch of neurons that are
connected to each other a layers.

27
00:01:22,200 --> 00:01:25,560
You have an input layer,
middle layers and an output layer.

28
00:01:25,800 --> 00:01:29,670
Each neuron performed some
preset calculation on the
data and outputs the result

29
00:01:29,671 --> 00:01:31,200
to all the connected neurons.

30
00:01:31,230 --> 00:01:34,620
This process continues until the data
goes all the way from the input layer to

31
00:01:34,621 --> 00:01:37,260
the output layer.
So if you input photos of Trump,

32
00:01:37,290 --> 00:01:39,570
which really just breaks down
to a bunch of ones and Zeros,

33
00:01:39,571 --> 00:01:42,870
if you think about it like all data
and feed it into the input layer,

34
00:01:43,020 --> 00:01:46,170
what it's doing is recording
commonalities across all the photos.

35
00:01:46,380 --> 00:01:48,150
This is called training
and machine learning.

36
00:01:48,330 --> 00:01:51,960
So given enough Trump photos of
eventually it can start recognizing Trump.

37
00:01:52,110 --> 00:01:56,640
When it sees a novel photo, I'll putting
data that means yes, this is Trump or no,

38
00:01:56,641 --> 00:01:57,474
this is not Trump.

39
00:01:57,690 --> 00:02:01,590
The team created a neural network and
input 30 million expert moves from go

40
00:02:01,740 --> 00:02:04,580
until it could output yes is
an expert move, but it's side.

41
00:02:04,800 --> 00:02:07,890
Then they had to play against itself
countless times until it got better and

42
00:02:07,891 --> 00:02:12,560
better through trial and error. This is
called reinforcement learning. We do too.

43
00:02:12,570 --> 00:02:15,330
Whenever we practice shooting
hoops or playing an instrument,

44
00:02:15,360 --> 00:02:16,620
practice makes perfect.

45
00:02:16,650 --> 00:02:19,650
This gave Alphago a sense of
reflection when evaluating a move,

46
00:02:19,830 --> 00:02:22,050
it could look back on simulated results,

47
00:02:22,230 --> 00:02:24,630
but they also wanted to give
it a sense of intuition.

48
00:02:24,780 --> 00:02:28,020
So they created another neural network
that observed the moves from the

49
00:02:28,021 --> 00:02:31,620
simulations. So by combining
these two networks together,

50
00:02:31,920 --> 00:02:36,390
Alphago was able to give an estimate of
how good a move is by using a mixture of

51
00:02:36,391 --> 00:02:39,060
reflection and intuition.
So in a live game,

52
00:02:39,090 --> 00:02:43,800
every turn Alphago uses this
move evaluator on a bunch
of possible moves before

53
00:02:43,801 --> 00:02:47,790
deciding on the best one and playing it.
It's not a full on brute force search,

54
00:02:47,791 --> 00:02:52,530
but a more educated and smaller search.
It's called a Monte Carlo tree search.

55
00:02:52,560 --> 00:02:53,310
So cool.

56
00:02:53,310 --> 00:02:56,670
The second reason is that this took
one year instead of 10 years to build

57
00:02:56,940 --> 00:02:59,830
leading AI experts predict that it
would take a decade to build a machine

58
00:02:59,831 --> 00:03:03,910
capable of beating the best human
player at go. It only took one year.

59
00:03:04,020 --> 00:03:07,060
It's just another sign of the
exponential progress of technology.

60
00:03:07,320 --> 00:03:09,400
Think of all the trends in
computing that this upholds.

61
00:03:09,640 --> 00:03:12,340
Moore's law states that computing
power will double every two years.

62
00:03:12,370 --> 00:03:15,280
The law of accelerating returns by
director of engineering at Google,

63
00:03:15,281 --> 00:03:19,360
Ray Kurzweil states that technological
progress in general is exponential,

64
00:03:19,361 --> 00:03:20,194
not linear.

65
00:03:20,320 --> 00:03:23,950
80% of the world's data was created in
the last year and we are all building and

66
00:03:23,951 --> 00:03:27,040
creating all of each other's
data at an exponential rate.

67
00:03:27,130 --> 00:03:29,650
The third reason is that
this creates a new field.

68
00:03:29,860 --> 00:03:34,240
Ai Psychology in the second game against
least cdot Alpha played a move that no

69
00:03:34,241 --> 00:03:38,680
human would ever play. Move 37 that
move represents the promise of Ai.

70
00:03:38,860 --> 00:03:42,310
When Alpha go played at Lisa Dole
was completely baffled fan way.

71
00:03:42,311 --> 00:03:44,440
The other go master said
it's not a huge move.

72
00:03:44,441 --> 00:03:47,680
I've never seen a human play this
move before and later kept calling it

73
00:03:47,860 --> 00:03:48,550
beautiful,

74
00:03:48,550 --> 00:03:52,240
so beautiful Alphago things differently
than the best of our species at this

75
00:03:52,241 --> 00:03:55,360
task. Even the creators don't
understand how it happened.

76
00:03:55,390 --> 00:03:57,430
That's the beauty of machine learning.

77
00:03:57,670 --> 00:04:01,840
Programmers don't code every single rule
to give it the building blocks to learn

78
00:04:01,841 --> 00:04:04,840
by itself and unleash it
on massive amounts of data.

79
00:04:05,140 --> 00:04:07,840
We can study Alphago and
learn new ways of thinking.

80
00:04:08,080 --> 00:04:11,080
The fourth reason is that this technology
hasn't yet been applied to other

81
00:04:11,081 --> 00:04:13,810
fields. Think about the recent
breakthroughs in quantum computing.

82
00:04:13,840 --> 00:04:17,770
Google proved first of all that a quantum
computer was possible and second of

83
00:04:17,771 --> 00:04:17,921
all,

84
00:04:17,921 --> 00:04:22,210
that it's solved a specific algorithm
100 million times faster than a classical

85
00:04:22,211 --> 00:04:23,020
computer.

86
00:04:23,020 --> 00:04:26,800
Now think of how smart Alphago would
be if it ran on a quantum computer.

87
00:04:26,860 --> 00:04:30,430
Robotics, genetics, physics,
climatology, economics.

88
00:04:30,520 --> 00:04:33,340
This is just the beginning of new
breakthrough discoveries in these fields.

89
00:04:33,520 --> 00:04:37,270
Scientists have tons of data that
no human could possibly sit through.

90
00:04:37,390 --> 00:04:40,120
Certain probably has a new
particle somewhere in its data set.

91
00:04:40,121 --> 00:04:44,220
We just don't have the
intelligence necessary to sift
through the noise and find

92
00:04:44,250 --> 00:04:45,083
the meaningful bits.

93
00:04:45,400 --> 00:04:48,640
Alphago and the promise of Ai is going
to help us solve some of the world's

94
00:04:48,670 --> 00:04:52,480
biggest problems, and we should all
keep a very close eye on this space.

95
00:04:52,510 --> 00:04:54,730
For more information about
half ago or AI in general,

96
00:04:54,731 --> 00:04:57,820
check out the links in the description
below, and as always, thanks for watching.

