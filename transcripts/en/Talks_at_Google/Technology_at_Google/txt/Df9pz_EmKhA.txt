Speaker 1:          00:00:05       So if everyone could welcome Zach at bars, the creator of electronics, Space Chem in minor or Gis, 100 Schengen io and various other games.

Speaker 2:          00:00:20       [inaudible]

Speaker 1:          00:00:23       thank you. Okay, so the first thing's first, I want to share a secret with you guys. Just that I hate talks and they're really boring and they're just God. I mean I've been to GDC so many years that the game dollars conference and just sitting there and having somebody just kind of talk at you with like they're preplanned deck of slides and it's not very fun. So what I wanted to try doing this time had it, mix it up a little bit, do some Q and a. Uh, so you guys apparently asked a bunch of questions and voted on the best ones and we don't actually know if the people who asked the questions are here today. Raise your hand if you ask a question on the website. Did any of you actually ask a question? Okay. Did you ask all the questions? Okay. So I guess you're going to have to do the proxy.

Speaker 1:          00:01:06       Okay. That, that kind of throws a wrench in that. Okay. So I was going to have people ask questions and then answer them and ask them followup questions. But apparently I can't do that. So, um, I dunno. I think it'd be cool to make this. So it's not like I, I have, instead of repairing a giant slide deck, I prepared a couple of smaller ones. I'm going to start with this one. But then from there I have a bunch of things that are sort of answers to questions that might be asked by the person who has a list of questions that they're going to ask. So we'll see how this goes. Okay. So, um, how many people in the audience are familiar with the Games that we've made? So that's sort of like, okay, so are you flirt with all of them or some of them are.

Speaker 1:          00:01:41       Okay. So, so when I was going to start with is a, um, it's just sort of like a, a history of how we got here and the games that we've made so that we all have like a shared context so we can talk about games. So, um, so what, so I started making, making games when I went to college and it just started off as a, as a fun thing and you get some, some lovely games like this, which was the first game I guess I ever made, which is for a game jam for, uh, for the, the Game Development Club where you're supposed to make a game that your mother wouldn't play. And I won because I was the only person who bothered to try it. So you can actually, this is the probably the earliest game that I've made that you can still download. Like if you go to like our secret old website on the Internet and a, but it's really bad and it's terrible.

Speaker 1:          00:02:21       Uh, another weird game that I made in college is again, common fit of Frag, which was terrible and I really had no idea how to do any of the things that are involved in making this happen from a technical standpoint. But, uh, it, it, as you may know, went on to start some big stuff years later, uh, through some other stuff we'll got through. It was a terrible game though. Um, so there's, there's a game called manufacturer that I made also terrible, this sort of a trend here, um, in which you, you would build factories. And this was directly inspired by the show, how it's made, where, you know, it was back when I was less jaded about making games and then I, you know, I saw how it's made on TV and it was like, wow, this is incredible. Like this is, this is, you know, like we're seeing how are made.

Speaker 1:          00:02:59       It would be so cool not to like to make those things, but to make a factory that makes things like that. And, and that this game, it doesn't really look like it, but was sort of trying to get at that the, the downside, the biggest downside is probably that you had to program in the Lula completely unnecessarily. And that's like a god awful experience. So that's that. That was something, um, here's a game called Rick engineer, which was the like super credi kind of exploration into a game about electrical engineering, mechanics and reverse engineering. Um, the idea that it was going to get a point. So there are these, these test points where you could, I mean, you can't even look at you, you're there. Like they're automatically tagged. This is a terrible interface. Um, you can sort of interact with the circuits at various tests points and you can kind of reverse engineer the circuit and tried to unlock the lock.

Speaker 1:          00:03:44       And this was, I mean, if you're familiar with our earlier games, this is kind of the beginning of, you know, an idea that reoccurs a lot of games about electrical engineering. Um, this was probably like the first kind of puzzle game that I tried to make. It was really terrible, but it's about, uh, like sequential transformation of data. The idea of being that like there's certain can you can't say that. Okay. So there's that whole on the left side where like data pulses come in, which you're one of them different colors and that you can apply like transformations, like filtering them by color and redirecting them. And it's a horrible game. But again, kind of gets us some, some early ideas. Um, there's again fun silicon foundry which is about, uh, you, you said you, you build chips, you build ships by assembling a little parts that I don't think I really have any pictures of it but it was sort of like a little tetris pieces that would fit together and they had different like input and output requirements and you would use it to satisfy like very abstracted ideas of these different products you could build.

Speaker 1:          00:04:40       And over the course of the, and there are probably like 30 different products that you built that are like very simple simplifications of, of electrical circuits that your products and stuff like that. And at this point it should be kind of obvious, like sort of what my background is is that when I went to college it was for computer science, computer engineering and like all of these things that, these ideas that I, I'd sort of, I known that they existed before as somebody who used computers and was fond of computers. But starting to see like sort of how these things work behind the scenes. It all starts coming out. Not really in my classwork because there was nothing special going on there. But in a, in these games that I'm building and uh, there's some sort of other diversions into other areas that are more gamey.

Speaker 1:          00:05:16       This is a game we made called Tex Mex where you, uh, you ran around on a uh, pat that's like a giant sheet of carpet with like, uh, like screen door material underneath of it and it's like a really cruddy, a pressure sensitive pads. So we knew where you were standing and then we took a hatch we mode and this is right when the, we came out and people were starting to like kind of analyze the Bluetooth protocol and figuring out how to hack that. I don't know if anybody was messing around with that stuff when it happened, but it was like, it was, it was cool. It was really cool and I, and for the first time in my life had like the technological skills to actually kind of do some of that stuff. And so we took a we moat and took all the guts out and jammed it into like a piece of metal.

Speaker 1:          00:05:48       So it was kind of like a, like a lightsaber kind of thing. And then made a game that was like inspired by Gundam kind of and like visually kind of looked like it and you would like run around and attack and, and do stuff. And it's Sorta it, it's like the connect before the connectors, the thing. And it was probably about as popular. So, um, uh, yeah, so the, the last game that I made in college was as I was coming out to Seattle to work at Microsoft was a game called Rick engineer too. And I would say this is probably the first like modern electronics game. Uh, this was the first one that actually people really played to any degree on the Internet. Uh, it got on Hakodate so I submitted it to hacker Dan. This was back in like really very, very few people were following what we were up to or what I was up to.

Speaker 1:          00:06:26       And, um, we got the link, I sent it to hack a damn like you guys, like electrical stuff. Here's the game that's about electrical reverse engineering and they posted it and this was back in 2008. And, and that was like the first time that anything I'd ever made got in front of a bunch of people and it was awesome and a bunch of people came and played it and that, that brought a lot of people to my website and kept them coming back. And that was back in like the blog era. So that was like the way to do it I guess. And uh, and so this is a refined can war game, your version of, of the wreck engineer nasty game. You saw it before and uh, and it has like really terrible like full motion video storytelling class. I should have brought more of that because it's there.

Speaker 1:          00:07:03       It's like me, me just straight out of college, like dressed up with like whatever I could find that looks like military surplus clothing, like running around making my, my now wife fill me as, I'm like, we did like a sequence where I'm like running through a field and like have to like go disarm the bomb and like that's all in there and it's adorable and terrible. And Yeah. Uh, so, so that sort of was the end of, of the colleges have games and got into the Microsoft here. It's where I didn't actually make games at Microsoft, but I made games at night while I worked at Microsoft and worked on office. I worked on Vizio for for three years and uh, it was like the opposite of making games when I, I worked briefly, I didn't, I, when I was in college, I did an internship at a studio called breakaway games and they made, it was like 50% expansion packs to like eat like ea games and stuff and 50%, uh, like real, like, um, like serious games, I guess like game.

Speaker 1:          00:07:52       They made a game that was like a simulation of like a military hospital and like one of their infamous bugs is that patients would die and then just get up and start walking around anyway and stuff. So they were like 50% serious, 50% expansions and I worked there. I, I briefly intern there during the summer when you're and worked on a game that was, it was like an adventure game for kids like, but it was made for the Middle Eastern market and it was done by like a bunch of like American businessmen who wanted to promote American values of Bron. So it's like a really weird introduction to the games industry. And uh, and so after like a summary of that, I'm just like, you know what, I don't really like games that much. Like I had been designing games while I was in college and then I go get a real game design job and I'm just like writing c plus plus, which I'm not good at and still I'm not good at.

Speaker 1:          00:08:33       And it's just like, wow, this is this. I could just program anything. And it would probably be about as fun. And on that logic, I went to work on Vizio. Uh, so, which was I guess not true. So when I was there, I worked on a lot of games. Like probably right away I probably started working on stuff for fun at night. And that's how I swear making Flash Games. So downloadable games were a thing, I guess they still are. But, uh, this was right when, when flash games were really, really taking off, as exemplified by the fact that when I was in college, I used to spend a lot of time playing flash games in class. And so as that was taken, I was like, Oh, I'm gonna make some flash games. So you get the bureau of Steam Engineering, which is a game about a seem engineering in a context that's not really real estate engineering, but in a, in a context that didn't exist, which is like a steam powered civil war, which does the theme that comes up again.

Speaker 1:          00:09:17       Uh, you get a game called the critics of what chemical engineering, uh, which is a game about alchemy where you program a little arms to move atoms around. This is both like the, the it followup I guess, to, to manufactory. Like what if, what if you could build a factory without having to write Lula? That's this game. Um, and then this later be obviously become spacecom. Um, you can door, which is something, uh, so, you know, so, so this is a game about building integrated circuits, kind of, and it's again, like stuff I learned in college but didn't learn in college. So this is not how real integrated circuits work, but it's kind of evocative of it. So that was something, oh, you asked to see my, my love of like, uh, like, like Soviet nostalgia stuff, kind of leaking through hearing. Um, uh, I make a game called and fit a minor, so my wife goes away, back home to the east coast for the weekend, and when she comes back, I've made the beginnings of Infinera minor.

Speaker 1:          00:10:09       And, uh, and that's a story that's, that's been a big thing in my life. Uh, so when I really have to get into the infinite later story I guess, but, um, so I made, I made this game, uh, for me it was a sequel to Infinera frag and kind of a way to explore like, oh, what if we took those really terrible, you know, that block engine that could only render like 30 blocks without like becoming a performance and made it so we could render an entire world out of blocks and a, and that was Infinera minor and accidentally started some other games, genres and stuff. We'll get into that later. I'm sure somebody will have a question about that. Um, uh, then I made a game called space cab. So this was our first commercial game and I guess the first game where we're me became an actual, we, um, there were like six or eight people who sit through some means worked on this game.

Speaker 1:          00:10:53       And this was right when, after, I guess I'd say this is like my posts braid game because braid came out and castle crashers and that's like, Holy Shit. Like you can be a nobody, you can be not backed by a publisher and make a ton of money and actually saw your game. And, and that was inspirational because before that I thought I'd have to give away my games. Right. And we look in a fit of minor, like how could you ever sell Infinera minor? Like how could you sell a game like that would never make money, right. So this is really where I was at at this time. And obviously after seeing like space Kim is also a post Minecraft game and the seeing that like, wow you can, you can make a game and somebody can make money off of it. And, and so so so we made, we made space cam and we thought, you know, God, I mean I spent like five grand of my own money, like as a, as an advanced to our artists in the Philippines and everybody else was just working on profit sharing.

Speaker 1:          00:11:42       Cause I was like, okay, this game we could probably make like 10 grand. Right. And I was like, but like if we happen to make like a hundred grand, like I'll quit my job and make games. And so that just kind of instantly, and that happened, like we made the, I'm just like, okay, well no, I'm not quitting my job. Like that's not, that's not enough money to sustain like a bunch of people working. We make it to three grand then or three. I knew that 300 grand, like then, then, then I'll quit my job and we did. And it was like, Oh God, I guess we have to do this now. So I was actually, I was the, so the core original electronics is me and my friend Keith. And so Keith went to Rpi with me. He actually was there, like when I was designing and fit of Frag, it was his idea that in order to build a block, I'll have another block that you pointed shoot at it.

Speaker 1:          00:12:20       So I'm apparently act too. So yeah, it's like, that's, that's like I've been working with him for another, with working with him on stuff for a while. And, uh, and so we were the first two people to do Zach tronics. We had like a tiny little office and he actually quit Microsoft like a week or two before me. That's how more dedicated he was than me I guess. And uh, and this is what started the, into years. So our first game was ironclad tactics, uh, which is kind of alive because ironclad tactics actually came out two years after we started doing sex tronics fulltime. And during a period during which we actually made a bunch of educational games, which I'll show you in a second, uh, we, we thought this was going to be like the hottest shit ever. And if space Kim did this well, like clearly ironclad tactics was going to do this well because all the complaints we heard about space camera that like it didn't look good and it was too hard.

Speaker 1:          00:13:07       This game was easier, it looks better. And instead of selling this well and instead of selling this will IX face him, it's still like this fall. So, so that was a bit of like a, a thing. We can get into that later too. If you need to. But during that time, we also, the thing, the reason I'm still like, I'm here today and talking about making games and kept doing it after us because while we were doing in cloud tactics and perhaps wondering some of our future on that, we, um, we made some educational games for a company called amplify who was owned by News Corp inexplicably. It's felt like a zillion dollars building, a tablet based curriculum that like literally caught on fire. And uh, and so they will only once, and it might've been a power supply or something, I don't know. So, um, so, so we made a game about starch metabolism, which is pretty cool for game and let's starch metabolism.

Speaker 1:          00:13:51       Um, they're, they're all tablet games, so it's, it's like pinball. Acceptive pinball wasn't pinball and you had a bunch of pinballs. And so you flick the little particles around and like, you know, like you, you can push the button to pump the, uh, like the, the lungs and it brings in a new set of air and then you can just take all the oxygen out. And I'm like, swipe it into the one stream and said it was pretty cool but it's terrible. Um, the probably the best educational game we, it was have a tactics, a, a cooperative like eating other creatures simulator. It's Kinda weird. It's matched three and like the animals like have to line up to be eaten by the next one up in the food pyramid. But it's really cool because it represents a haven't done how have habitats where I can't send the word habitat without saying have a tactics now, which is it makes it hard to be taken seriously.

Speaker 1:          00:14:32       Um, so uh, this is a game called factor, which is when like Twitter and stuff we're taking off and like the weird, like we're going to take out vowels in our name. So that was all my idea of the factor and maybe not, I don't even, I love it regardless. And it's a game where you, you are the ship and you move your finger around, it follows the ship and you pick up these numbers to take on the identity of these prime numbers, which allow you to then slice up numbers that are divisible by it. It's pretty cool for a math game. Um, uh, so after, after the fallout of ironclad tactics and realizing like, oh dear God, this, but this game was not going to make as much money as we were hoping was going to, we, we had to radically downsize and we had to sort of think about like what the hell are we doing?

Speaker 1:          00:15:08       Right? Like we can't, we thought that going into the Indy, the Indy times that you could just make any game and as long as it was fun, people would find your game and play it and you make lots of money. It'd be great cause that's what happened was face cam. It turns out we accidentally did something right. Let's face Kim, I guess I really don't even like people claim to know what goes on in the games industry. I think they're all liars or they just are confused or they did too. Well, you know, we were sort of blessed by doing well enough to still be around, but not well enough that we can't just like accidentally coast on our laurels that we have to, we're always just kind of getting by and uh, and so that, that kind of thinking is what led to Infinera factory.

Speaker 1:          00:15:41       Um, God, there was, so there was a long spirit period of time in which I made and Finna minor and then kind of felt bad about it and felt like I couldn't really make another game like that. Or It'd be weird to make a block game and Infinera factors like, you know what? No, like we can make any games we want about blocks. Like who cares? Uh, it'd be cool to make a game that's kind of like space can, but in three d with blocks and you built stuff like factories and like, I mean, obviously you can see the repeating themes and all of these games and that's what in Finna factory and it did well. Right? And so we went from thinking, um, like we'll never make a game that will ever do as well as space camp ever again. I, I legitimately believe that like that's based on was just an element of timing and that we'd never make a game like that again and it would just never do as well in Finna factor did better than space cow soso apparently that's not true.

Speaker 1:          00:16:24       So I'm so that was sort of a cool optimistic thing. Also made a game called ts 100 which almost didn't make um, I caught, I wanted to stop making this game so many times because it's terrible. I was like no one is going to play this. I I took it with me on my laptop. Did you see one year and I had the little printed out manual and I wanted to like get some people to play test it and I couldn't even bring myself to put it in front of anybody to let them play test it cause I'm just like no, like this game is awful. And we brought down the manual to show somebody and they're just like, oh my God, this is amazing. I'm just like, really? So so, so we kept working on it and we shipped it and it was really just like a, this was like a little side project that was a, um, I had started working on this other game cause I was born and wanted to make a different game while working on this too.

Speaker 1:          00:17:04       And it was going to be this big adventure game with a bunch of different puzzles in it. And that was not clearly not going to happen. You can't make two games at once. So it's very hard. Um, and ctis was just like a tiny little portion of that game spun out into its own little thing and, and we shipped it and it actually did really well and it did better than ironclad tactics, like, right. Like that's crazy. Like, so clearly we don't understand how games work at all, but we're successful. The sort of irony here, I guess. Is that, what's the next slide? Okay. Yeah. So, um, the irony here is that these games did well and I'd thought that nothing could ever do as well as space. Kim and I learned that these games did well while I was working at valve after having shutdowns electronics because I was tired of failing.

Speaker 1:          00:17:40       And so that was sort of a weird thing. And so VR was happening. I felt kind of bad cause like none of our games really did well and Vr was happening and there was no way we could make a VR game. And it seemed like it was important to work on it. And, uh, and so I found myself at valve and I worked on VR stuff there. There's a question for that. We'll get there. Um, and then seemingly out of the blue, uh, we, we sold Zach tronics. So electronics is not owned by me anymore. Thank God. Um, that was the worst part of running an indie studio. It turns out, is owning it and having to do the business stuff. I'm not a business person. I'm not that clever or whatever it takes to do business. And, uh, maybe not clever. I don't know.

Speaker 1:          00:18:15       Um, uh, so, so needless to say, we actually, we sold electronics and we now worked for like a publisher distributor who's also electronics. And it's great because it allowed us to make Shinjin io, which is awesome. Right? I mean this is, this is perhaps like the mosaic tronics he game yet. And we made it while technically not being indie, which is really exciting. Um, because I didn't have to do the business stuff and I didn't have to do our taxes. So these are serious problems that I had to deal with. Uh, and uh, yeah and so I suspect more of you are familiar with [inaudible] out cause that's like the new flashy one and a and stuff. And that is the end of that. So that sort of catches up to where we are now that um, we released this game like Decemberish it came out of early access and, and that's, that's, that's the history so far.

Speaker 1:          00:18:57       Does anybody have any questions about this part? Just about anything you saw or any other things I didn't mention or let me thing. Okay. So we're going to take a couple of questions from the door and open it up. Okay. The first question was, what has been the most surprising or unexpected thing that you've seen him play or do with one of your games? Oh, okay. Oh, what you want to come back? So I actually have a whole another presentation that shows off stuff, but it might be better to like, okay. Not just blast through more slides. I was trying not to make us a slideshow, but apparently we're, we run in that that route. Yeah. How long do you spend designing the court in logic of the game compared to coming up with puzzles for, oh, that's fine. I definitely haven't heard that question before now and, but when you send it to me, that was, that didn't work.

Speaker 1:          00:19:37       That was a joke that when you're going, so, um, what is this? This is not okay. We're going to open this in here. Um, so, so I Shinjin io is, is he an Unix? Usually when I do all my design, it's in a notebook. And which means that like in terms of creating art, if I don't really scan my notebooks so it's hard to show off what's in them. Aside from scanning then, which I don't do a, we sent you an io, it was designed not in the notebook. And so this gives us an interesting glimpse into easily scannable documents that show off the development of an out. And have you guys already seen this, this set of documents from ordering the special edition? Anybody get the special, the physical addition of Schengen? Yeah. Okay, cool. So most of you haven't seen this, so um,

Speaker 3:          00:20:22       okay.

Speaker 1:          00:20:24       Okay. So like all good things. A lot of my games start with a list. So the idea obviously I guess like when when we start working on a game, when I start thinking of a game, it's usually some kind of a lot of people talking about game design in terms of like emotional stuff. You want to design something that emotionally resonates with your players. Like for me it's sort of like a, as a program or like a mechanical emotional resonance. Like, oh, it would be cool if there was a system that worked this. Or like if you had a system where like if we could take the idea of microcontrollers and like how circuits work and how like like modern embedded systems work and turn that into a game. Like there's, for me there's a feeling there. I don't know if other people have feelings about like embedded programming resonating on an emotional level.

Speaker 1:          00:21:03       But like there's a thing there. There's a system and I think a lot of, if you look at a lot of our games, clearly there are about systems. I'm not coming to this from a story teller. I don't really know anything about making telling stories but if people could do, but uh, but we're really a part that I bring to this is the understanding of systems. And so like here on this totally boring looking sheet of paper, right? I mean you can see some ideas forming about like, oh like these are some parts and these are some differences. Like some, some abstract and differences between like, like what's the difference in flavor, what's the difference in emotion between a micro controller and a DSP? And like in reality they're kind of the same and they're just kind of like tune different ways. But like there's, you can think about it in an abstract way that's like an abstraction that has feelings of like, oh, dsps are really good at math.

Speaker 1:          00:21:42       And like there's certain, there, there's certain ways that they're different and like there's, there's asymmetries that you can explain it when making a puzzle game and said there's this sort of just like high level like ideas of things that might be mechanics and like, uh, in this case it's based on a real life system. This is sort of where the game starts out and it probably doesn't spend that much time in this period. Um, I like to think visually, right. So the best thing to get out as an idea or some, some visual ideas of like, how would this look like as a system you interacting with? Right. And I mean, so we've got a sketch it over, over on the left side. It was curious or somewhere. So, um, this looks a lot like a node. And I know with the exception of that depends coming up the top and, uh, you know, you, you start to see some ideas kind of forming just in these little sketches.

Speaker 1:          00:22:24       And so I'm definitely a big fan of, of drawing stuff to, to do that. And so, so from the, the basic high level ideas and the emotions that turns into some sketches or start to kind of visually explore some stuff like that. Um, we, we for change and I own particular, we interviewed a bunny Juan, the engine guy and who everybody goes to for anything about Schengen, which almost seems kind of kind of cliche that we did, but he actually, you know, like everybody does, he know that you learned something good from him and a, and he told us about some more things that were kind of like emotional points of doing development and engine and uh, like midnight partner, you know, going to a, like a, the electronics wet markets where it's just stalls, installs, installs of electronics and just like in the middle of the night and you're like, wow, we need like 10,000 transistors, this certain type, like time to go buy some.

Speaker 1:          00:23:05       And then you come back with a box of 10,000 transistors, which actually isn't even that big. And uh, and like these are sort of like the emotional things that I think go into, I mean, how many of you have [inaudible] out? Right? So, okay. Some of you. So it's a game about on the surface you, you build circuit boards and dropdown ships and in rate code for them. And then they do things they generate like timing diagrams and they do stuff and uh, but it's also, it has a pretty intense story where there's a lot of emails of the people you work with. This company in Shenzhen being told and they're funny and they argued some times and all of that stuff is informed by things that we learned about like what it's really like to be like an ex pat in China and all of that.

Speaker 1:          00:23:40       And I mean we don't really have any firsthand experience with it, but we were able to get that from, from talking to um, some actually some, some devices that were invented in Shenzhen, which we didn't turn puzzles turned into puzzles. I the Barbecue Times that tell you the temperature of the thing you're talking. That was like an original Shinjin invention. Not, not like a knock off. And same thing with the hoverboard, although like I guess there's a market, planet money or whatever about the debates, the, the origin of the hoverboard. Um, so the, the thing I like to do, this is really kind of diving into my personal process, but I love making like little like black and white gray scale pixel art that kind of lays out like what, what am I actually going to be dedicating screen space to write and like this, this I guess some, some people when they start making a game, let's start with concept art.

Speaker 1:          00:24:25       But for me it's, yeah, like incredibly detailed technical looking things and cause this says just share like what is, what is the information that's being depicted in this game? Like what, like what are we, what are we dedicating space too? Like you can't, you kind of can't just say like, oh we're just going just to be able to code stuff and they just make it scroll. I have a huge aversion to scrolling in games. Like [inaudible] was the first game I've ever really made where everything doesn't fit on the screen all at once at one time. And like there's a reason for that and it's because if there's, I don't know if anybody's read like the tough, do you like design books? Right? He talks about like the PowerPoint effect. The lousy thing about PowerPoint presentations is that as soon as I flipped away from something, you're going to forget what I was just showing you.

Speaker 1:          00:25:01       And if you can't kind of look at two things side by side, it makes it really hard to compare them visually. Like that's a huge part of how our brains work. So, um, yeah, so everything fits on one screen. Most in most electronics games, all, we're slightly pulling away from that like machine engine. But uh, but we can look at information. Um, here's the design of Schengen solitary. It was just on this piece of paper. Um, from there we have to come up with, and this is I guess sort of a newer thing with electronic scans. When we did space camp, I have, who's plays Bass Con. Cool. Okay. So one of the biggest flaws perhaps what's base camp is that all of the puzzles just have you make chemicals for no reason at all. Right? It's just like, oh, we need a bunch of s settling because, and like that's it.

Speaker 1:          00:25:40       And that's like, that's, we have a story and the story's over here. And then we asked you for acetylene over here and there's no like connection between the two. And one of the biggest complaints we got from, from, from space camp was that, um, it would be great if there was any kind of story justification for why you're building what you're building any at all. And uh, and that was, I think that, I guess that was one of the ones that really resonate. I think it was like, oh yeah, that's right. Like they don't mean anything, you know. So with trying to think, I guess with, within Finna factory, we started exploring with that. Like what if you could make things that actually fit into the story and we Shinjin we wouldn't even harder with it. And so every puzzle in Shinjin is based off of a little pitch that our writer wrote and that we brainstormed before.

Speaker 1:          00:26:18       But we turned them into these things like we want to build a little story around each puzzle and a, and we want to like bring that puzzle to life by creating a context around it that gives it meaning. Um, and I think it was really successful. I don't know. I mean you guys can, can tell me. Um, so, so in this case, I mean like how did it, there's tons of ideas here for puzzles. A lot of them we didn't do, cause they're really hard to turn into like a magic baseball bat. I'm like, this is, this isn't our sort of near future. Everything is lousy or future. Um, we uh, yeah, okay. I was going to make a political check but I'm not going to. But um, but you know, the idea like, Oh, magic baseball bat, it's like the selfie stick or the baseball bat of selfie sticks I guess.

Speaker 1:          00:26:55       Like it just makes you hit a home run every time. Right. And it fits the medically, but it's kind of hard to think of like how do you make a puzzle that like, is that, and I guess it's like, I dunno. So, so not all the ideas really make the cut, but we got a lot of my good ideas here and then we start turning them into puzzles. And so one of my other little quirks is that I like the design every puzzle on a sheet of paper because then you can start them separately. You can right now, like we're working on a game that has puzzled like things in it and they're all pinned up on the wall. Like I'm some sort of like person, like, like uh, like, like detective that went rogue and it's like all the connections drawn up on the wall and like the string running in between them and I can see the pattern.

Speaker 1:          00:27:28       Yeah. So with, with paper you can do that is that you can pin up all your designs and you can see them all at once and you can use your sort of like the visual part of your brain to, to, to see like, Oh, do I not have enough of the, this mechanic being represented or whatnot. Um, making forms was fun too. I guess that's like a more of a reflection of my personality that I like making forms and filling them out. But so from there, yeah, I mean we just, you know, like every, every puzzle has its own little little form. And uh, to get back to your original question, which I think I have to virtual highlight, which is how much time do we spend making the original mechanics versus coming up with puzzles? Um, I'd say it sort of that there's a little bit of time up front, uh, for coming up with the mechanics of the game.

Speaker 1:          00:28:06       And then I like to just try to make a whole bunch of puzzles without even being on a plan, which I guess is another word, electronic state that we make all, I make all of my puzzles without really testing room. And then, um, the ones that don't work don't go in the game at the end. Sometimes they do and then they get replaced afterwards and it Kinda, I don't know, I mean our games are really open ended. Like our games are usually that we built a tool set and then we bought a bunch of challenges and we build them independently so that way you can kind of tackle the problems however you want with the tool set. And that comes across in the end, the puzzle design kind of mechanism that we follow. Um, I guess the other thing too is that especially with Schengen, we change our toolset as we realize like what is possible and what isn't possible in with the tool set.

Speaker 1:          00:28:44       And they'll give you, while you saw the puzzles. And so like essentially like a really boring example is the memory that all of our memory used to be that like you'd, you'd write to it and it would store the values and you'd read from it and then you get them back and that was all you could do and it turns out that's like really useless. And if you wanted to like read from it non destructively you'd have to read and like everything and then somehow rate it back in and it just made everything too hard. And so like right up until the last minute of stringent Ya, we were still changing mechanics in the game. So that's like you never really get to stop working on your mechanics or your puzzles or anything. I don't, I don't know what the moral there is.

Speaker 1:          00:29:17       Does that answer your question person who didn't ask that question? Oh well does that answer your question? Person who did ask that question? This one is actually from someone who's not, how do you make your games fun? I've tried to make educational games in the past and might have turned out pedantic and Fiji whereas yours are actually fun. Does that your question? Oh, I, this is the person that I wanted to grill so I wanted to find out like why, what makes them think that Tektronix games or educational or what makes them fun? Right. Because it's possible that they're neither, but yeah, to constantly easier if I had somebody to escalate it. Does anybody want to like proxy for that person and like feel, has anybody tried to making educational games here and there like disappointed without it was that, was that a hand raised but just to stretch. Okay. Yeah. So, um, I guess I have to imagine, Oh,

Speaker 4:          00:30:05       you can proxy to be if you want. I have done a little bit of work and we can be educational games. Yeah. Years ago as a contractor and I also do find these games fine. Yeah. The answer perhaps as to why. Okay. Do you want a proxy through be, go ahead.

Speaker 1:          00:30:21       Sorry. That's what, what's your opinion of educational games?

Speaker 4:          00:30:24       Oftentimes it seems like there's some particular lesson that equal that is the creator and the educational game watch these students to learn. Um, and it's very difficult to make that into a game and it doesn't fit anything bear. It just so happens I think that we're particular mentality. Engineering is fun. Yeah. And so if you could make a game where you're just doing it, engineering the fun parts, then it stopped how educational but also still fun. Yeah. I like for me, I will say personally as somebody who came into computer science through, maybe it did have a nontraditional route actually vaguely computer science education, um, Shinzen Iot as were up 141st time that I ever actually did a separate program. Oh yeah. Also I learned something there.

Speaker 1:          00:31:07       Yeah. That's okay. So, so that's, that was the perfect answer. Thank you. So, um, so my, my personal, I mean for me I guess God, okay, so space cam made space. Kim was like, okay, this, this game looks so educational. Like if I believe that, like pretty pretty thoroughly believe that like we can, if only we can make education like space camp, everybody would love it and it would be great. And like you know this kind of like the idea of taking, taking systems and problems and presenting them to people in a way that they can solve them and an open ended fashion without having to just like learn stuff and recite it later. Like that seems like it would just blow education wide open and a and it didn't. And so I started really enthusiastic and we made these educational games once that I showed you before.

Speaker 1:          00:31:48       And like I, I would say as we were doing the projects, my enthusiasm kind of like crashed pretty hard. And by the time we got to the end it's like, why are we making these games? And I think that like part of, part of the problem was that when we make a game for real, we, it just, it just is what it is. And we put it out there and we say, hey, whoever wants to play this, play it. If you like it, you'll let us know by buying it or whatever. But you make an educational game. Like they were testing him and they were like forcing the kids to play them and just like sitting them down and saying, you're going to play this game now. And then the kids would play it cause they were told to or whatever and if the game, so I guess it's better than like do this math problem, like kind of not like they didn't, they don't really have any agency and doing that, which is a big thing and game.

Speaker 1:          00:32:28       And uh, and then they asked them afterwards, they're like, now they're never going to quiz them on what they learned. And it's just like, Oh God, like these kids, they're there. They're, they're like in middle school. Like they're not really good at expressing themselves. And even if they are like, they're just kinda like, like saying the answers are not saying the answer is it is, you're just so far divorced from what it is to make a game at that point. Then it's just like it for me, it destroyed all of like the motivation. It's like, why are we like, are we improving their lives by making these games and making them play them? And it's like, well, not really because it, and then you start getting the question for like, look, what is the point of education, right? Like in curriculum. And I guess I, this, this is again a reflection of me, I guess more than any sort of reality, but like the, the idea of like the idea of an educational game, it's, it's, it's, there's already so much bias just saying that like an educational game and, uh, that like it's meant for a school system.

Speaker 1:          00:33:12       It's meant for a curriculum. It's really hard to design games to that. Like you said. And I, I was, here's the, here's a fun anecdote for me is that I was at a serious games convention back when I was in my more naive stage and thought that we can make educational games that are great and the Games would save the world or whatever. And uh, and somebody, there was somebody there from full sail. It was saying that they'd made an educational game, but the lesson they learned is that you have education and you have fun and you just have to kind of dial in, like where on the spectrum, like you want, you want a hint. Right. And of course their game was terrible. I'm not gonna lie, it was a game where you go around and fight people and then do math problems. And so it's like there's fighting and then there's math problems would pop up and it's like, okay, like I guess we can agree that that's probably not the best way to do an educational game.

Speaker 1:          00:33:52       But, but I actually had the audacity to like raise my hand and challenge the person who was talking and just be like, wait, I like, this is ridiculous. It's like surely we can make games that are fun and educational by exploiting the naturally fun things, like an engineering, exploiting the naturally fun things in the educational content. And then after having made them, I actually kind of feel like there's fun and there's education and you just kind of dial it in and drop it in. And like there's, there's, there's perhaps some reason to believe that like education, like learning things is hard and things that are hard are not fun in the way that games are. Right. Like you need like there, there's all sorts of stuff about like flat, like I don't know how many of you know about like flow theory in games?

Speaker 5:          00:34:26       Yeah.

Speaker 1:          00:34:26       The idea that like as you're playing a game you're going to get better. And like there's like a, this is like a graph, there's an area up here that's like too I guess like too hard for you and there's an area down here that's too boring and so you just want to kind of stay in this channel of not being bored but not being, having the game be so hard that you can't play and you can't advance and like education does not line up with that. It doesn't fit in. Like you can't just like they're there that you can hope that like I guess you can kind of design a game so that like people get slightly better or you like more often than not now you kind of boost to their power level by giving them experience and like upgrading their numbers. Like this is like a huge thing that's like the straight game design as far as I'm concerned.

Speaker 1:          00:34:59       But like it's like, cause there's, there's, there's theories about difficulty and a lot of people like say like, you know, people, people need to feel better while they're playing your game. Like let's just make their, make the numbers bigger while they're playing it. You can't do that in an educational game, right? You can't just say like, oh your sword now does more damage, but we're going to give you the same math problems or we're not going to get, you can't, like you can't count on people getting better, especially at like external skills that aren't even really part of the game.

Speaker 5:          00:35:20       That's, it's difficult. So I think that moves nicely to how do you view the difficulty curves and teaching process in each of your games? Is there anything you ever wish you had done differently or anything that you want to try some day? I have a picture for this one was more interesting than trying to explain it.

Speaker 1:          00:35:35       So this is a graph for space camp. And so what this represents, each one had to be used as a puzzle. These are the blue ones are the sort of blue ones are required and yellow ones are optional. And the red ones are the boss puzzles, which you have to, they're, they're a special kind of challenge in space come. That's kind of hard. Um, both because it's a hard puzzle and because it's like obscure as the game play in a way that makes it harder to solve. And uh, and so what this is for each one of these, how many people started up a puzzle and then solved it? And so, um, it's, it's Kinda, it's kind of the same overall. We can see the optional positions, right? There's a lot more people who like, there's a lot fewer people who upon starting up an optional puzzle actually took the time to finish it.

Speaker 1:          00:36:19       Every other puzzle in the game were, was required and often the sequential order, which is a thing that we learned is not a good thing to do. Um, and so like they're, they're pretty, pretty good. The boss puzzles is definitely harder to the last boss is definitely like people got to these poor people who beat every other level up here, fired up to this level and then only half of them finished it. Right. That includes me. I'm in the people who didn't finish this. I've never eaten the last level of space camp and says, I don't know how you can expect somebody to like do something like that. Not necessarily.

Speaker 1:          00:36:49       Yeah, that would be graph number two, which looks more like this. So, um, this one is what happens when you multiply. Basically you multiply each one by like the, all the ones before it and a and have it fall off. And then, yeah, like if, if you're, if you fire up the game, this is your, your odds of actually beating the last level, which I guess makes that fall off look Lester medic. But to some degree I would say our games are pretty bad. But to some degree the game, you know, like your, your progress for any game looks like this. Like I mean how many, how many games that you guys play? Do you actually finish? Right? It's probably less than a hundred percent. And um, so you can actually, you can look at achievements in other games. I used to have a slide for this, but it's on here about like how many people beat various games.

Speaker 1:          00:37:31       So like a fashion or no, um, I guess fashion. Yeah, like that was beaten by like 15% of people who started it up. Super meat boy is beaten by about 4% of people who fire it up. Right. And that's just not a normal like, like super duper hard mode is like 2% or 1% it's cam is super duper hard, right? It's like 2%. So it's like 2% of people who fire up space can, we'll actually go through and beat all of it. And so that's on one hand that's bad. And that's not really like what I would want. But on the other hand, that means that there's a lot of challenges for people all along the game. And we actually, this is something we debate a lot still, which is like how long should the Gambian, how hard should it be? And you kind of, you kind of don't want somebody, well I guess it depends.

Speaker 1:          00:38:09       I don't know. I mean it's, it's possible, perhaps a theory. It would be that you want people to play through your game until they, until they decide to stop. Right? It's worse if they play through a game and then have to stop because they ran out of content or like some other reason, right? Like you want people to choose to stop and having the game get harder, like kind of accomplishes that. And so I, I personally feel like I, I'd feel disappointed if I don't beat something, but other people are different. And, but that's still a debate that we still, we wonder about. Um, so,

Speaker 5:          00:38:38       okay.

Speaker 1:          00:38:38       Playing off this for a second. Okay. Yeah, I'm just going to how quick you can line up. But the, um, the thing that this is, this is actually, this graph is not really useful. It's, it makes a point, but it's not useful to us. And balancing a game, a graph like this is, this is how we do all of our stuff. And we actually did a survey in of factory during early access where we ask people after they beat a puzzle, we only showed the survey people would be in it. We said, how hard do you feel like this level was? It wasn't it, was it too hard or was it too easy or was it just right? And when you look at the levels that people say, I beat that level. I'm like, I feel good because I beat it. But it was too hard.

Speaker 1:          00:39:11       Actually correlates close enough for us, which is not really necessarily statistically good enough, but like it's good enough for us. It, it correlates pretty strongly with people who fire it up a level and then never even be in it. And the, the, the cool thing there is that we can measure this without bothering people in, without asking them and without like making them kind of English over when was it too hard or not. Like we can just track this stat and we do and then we track with stat and all of her games. And uh, nowadays something like this right here would say, okay, this level is too hard because like they should all be claimed a flat and I don't have a picture of it for infinite factory, but when in a factory it was pretty good. Like the easy way, like the first levels were pretty easy and then it kind of picks up the difficulty through here and then it was pretty flat through the rest of the game cause we're looking at them individually and uh, and, and then sometimes it'd be a puzzle that spikes up and it was like twice.

Speaker 1:          00:39:56       It's like, you know, it, it has like twice the fail, like fell out rate or whatever. And then that's how we know that puzzle is too hard. So that's how we bounce our games. I don't know if that's the best way, but that's how we do it.

Speaker 5:          00:40:05       Um, do you have any kind of data on how much the social factor of space can kind of help people where should keep on bleeding? Uh, I mean, just the, this text comparison then Instagram's, yeah, because I was one of the ones that didn't finish it, but I did come back to some levels because of the social factor, Lou comparison with other players and kind of tried to optimize my solutions.

Speaker 1:          00:40:31       That would be a good thing to track. It's hard to tell like why somebody is playing a level. And so I think that's kind of why that's, we haven't explored that. Like, the big thing I like the, the first thing I worry about is people just stopping playing our game. Because if you can't, if you can't play a game, it'll be impossible to enjoy it. Right? And so, so that's sort of our first priority. That would definitely be something interesting to explore. Um, the idea of, of what keeps people coming back. Um, to some degree we're a little cynical, right? That like you compare, like does it does a new customer, like, you know, we could have somebody keep playing the game for longer or we can get a new customer and like, which ones, which one is better? A one theory we have is that the longer that somebody is playing a game, the more likely it is to expose their friends too. It sort of like if somebody has a cold for longer, they're more likely to share it with their friends in a similar way. Um, and so that's something we think about but have very little data for

Speaker 5:          00:41:19       where did the idea of having the social parts,

Speaker 1:          00:41:22       oh, I, I have a thing for that somewhere. Oh, right here. Oh yeah. I have this, this is fine. What we'll get to, this'll be like the ending thing. Maybe I'm just gonna do the beginning of it. So I'm with the codex. Uh, so I made this game. It was just a flash game. There were no histograms. There are no leaderboards. Um, but there were, there were forums where people would start competing with each other spontaneously. This happened is they'd be like, oh, that's your solution. This is my solution. It's, it's better. Like I was able to shave off five cycles by doing this and they'd share it and they'd just be like one upping each other. And we thought of this when we did space camp and the ways that we kind of made this a real thing we made an official was with histograms wear out.

Speaker 1:          00:42:02       But the funny thing is actually we weren't on steam for a while, a space camp. So we couldn't do leader boards that because we won't have to like roll our own little litter word service or something. I don't know. We didn't. So, um, so we, we only had the histograms and then the leader boards were just sort of an out, almost like a, it wasn't very deliberate. Right. We're like, oh, steam offers friend leaderboards, friend leader boards are good. I drank, I'd heard somewhere probably like a GDC, like global leader boards are useless because obviously they are right. Like, you're not going to be number one, you're going to be number like 10,000 no one cares. Friendlier boards are like get people riled up. People like friendly towards and it just kinda made sense for or against. But again, like we, I felt like I didn't think about it.

Speaker 1:          00:42:38       I don't remember thinking about it very hard. I think we just kind of added it because it seemed like the right thing to do for getting on steam kind of naive then. And uh, and I think honestly the leaderboards and probably better than the histograms. Like not everybody has friends who play their games, but like the, when I hear like I don't really hear that many people who are like, oh man. And then I tried to move my line to the left on the histogram. Like it's not the same as like trying to out cycle someone on the leader boards. And so in my mind now I think the leaderboards are almost probably more important than the histograms. I don't know if it's going to like upset like histogram fans out there as our, your histogram fan.

Speaker 5:          00:43:07       Cause I have like I don't have any friends who played your dance.

Speaker 1:          00:43:11       You've got to fix that man. It's like there's a name for this genre now, right?

Speaker 5:          00:43:16       Fair tronics who's compete with each other. I want to be at the top of the leaderboard histograms. Not to try to move my line to the lab, but to see how far to look. Right. I am. I had the factory that I did horrible hacky way and so my cycles graph is up there and I was like, Ooh,

Speaker 1:          00:43:45       yeah, that's, that's something. Yeah, no, totally. We would never get rid of the histograms because they're just too much fun. All right, I'm going to syndicate. It gives you a, it gives you an insight and especially because our players are so technical, they tried that and in histograms to portal too and it failed utterly like it was just him. Does anybody remember the histograms from Portal to Oh yeah. So you're the first person I've ever met who even knew that they existed, which I guess means it was like 100% hit rate for being successful. But our theory on that is that there are a lot, now I feel bad saying that there are less effective cause you liked it but there it's not as, it's hard to directly compete in, in a game like portal too cause you can't just hit a play button to instantly replay your thing, your solution. And so it, it doesn't quite have the same effect. Although there's tons of action games that have scoreboards too. So I don't know, maybe maybe not enough people have tried. Yup. When I was at valve I tried to convince them like we should do a histogram. Like we should add histogram support to the leaderboard service. But I would have had to cut it up myself. I want to broken at all.

Speaker 5:          00:44:45       Which game was the most fun to design and create and which was least, oh

Speaker 1:          00:44:48       that's I. Okay. So I saw that question because I've seen all these events. I don't have an answer for that. I mean I would argue perhaps the least fun games to create where the ones that we bailed on early and you guys don't know about. Right. I'm very much like I only make things when they're fun. We've definitely started working on games that started off looking fun and then as I got into it I just hated it. And then like when I hate when I'm working on, I hate my life and it just like went down and I'm just like, I got to stop working on this game. It's not good. And we've definitely pulled the plug on a couple of projects cause it's just like, it's, it's just emotionally unsatisfying and bed to work on it. Apparently I learned recently I have a very strong aversion to recreating work that other people have done.

Speaker 1:          00:45:21       Then making games that feel like they're too much, just like, oh, like every other game out there has this. And like we, I need to fucking spend like months and months making the same kind of crap that everybody's making already and like that apparently I don't like that. So yeah, out of my favorite game I Shinjin io was really great because we had just like, we just moved into a new office. We just started our team back up. We just painted the whole office and read it because our landlord refused to. And, uh, and we started working on this game and we're like, I'd already, I had already had so much time to kind of like dream about it and like come up with all these ideas that we just were able to just start working on it and it just like really clicked and it was really satisfying and like, that's great when that happens. And so that was probably the most fun we've had yet. But maybe that's just like a, everything is always getting better thing.

Speaker 5:          00:46:05       Um, yeah. So, uh, I have sort of a corollary to the, the previous question that I was a proxy for the, uh, the fun versus educational thing. But this is more about fun versus productive or fun versus useful. So like a lot of the games that you've made and in particular the ones I've been a fan of, like ts 100 and Jens and I, oh. And Space Camp, you're doing some work, you have some tasks that you're supposed to solve and it's an interesting problem solving challenge. Um, have you thought about any ways to try to somehow bring the fun that you've managed to create in those games into more useful work? In terms of either like making our day jobs as programmers more fun or making the fund that we engage in recreationally more useful. Can it be done by you? Have any thoughts on what we might do to make that happen? And I also asked this as somebody who is like, obviously you have worked professional corporate engineering jobs where it's maybe less fun than ideal, uh, for, you know, your programming capabilities. I'm just curious if you had any insight on what we might do to, to bridge that gap.

Speaker 1:          00:47:03       So, so this ties into sort of like, I used to think that games were great for education. Now I think that games and education are just game designers. They only hammer, they have as game design. And so everything looks like a game that needs to be made. And I think that when I, I guess I don't know anything about education honestly, but, um, when I, when I think about how maybe we could improve it, it's not by bringing over games, but by bringing over this idea of like, of, of fun and the idea that work can and should be fun. Like if you're, especially if you're a kid and it doesn't, right? Like you're, you're like, it's the, the home the way, like, I mean there's, there's, I guess it's sort of an open question about white people play and why play exists, but the idea that play is how we learn.

Speaker 1:          00:47:39       Like I think there's a lot of evidence for that and like kind of trying to bring more play into, into learning, right? I mean, I think that's a, I think that's a lofty goal, but I don't really know if that makes sense. Or if you could apply that in any way. Um, as for, for making work more fun. Oh God. I Dunno. I mean, so they've kind of roll back into your question earlier. Um, the games that we make seem like they are about real life things, they're kind of inspired by it, but they're completely artificial. And I don't know, I'm trying to think in, in Shinjin io like we completely changed the way that synchronization works like a week before shipping because too many of our play testers were stupid and couldn't understand it. And of course by that I mean it was not a good system because when you're an assistant designer, if people don't get it, it is 100% your fault.

Speaker 1:          00:48:23       And we had to change it. And like if we were trying to make a game that was about real life Arduinos, cause people need to know how to program Arduinos right? When you can't change it, you just have to kind of like hit a little harder. Like, oh we'll just put some more tutorial text on there or something, which doesn't work by the way. Like the only way to make a game where playable is just to make it more playable into redesign it until it is. And so it's sort of like, uh, like the old saying about like, you know, the way to win a battle is to pick the right battle. Right. And that's very much what we do is that we take on tasks when making these games we take on like it looks like work, but we're really taking on the tasks that were, we think that we can win.

Speaker 1:          00:48:56       And education, I think it's much harder to do that because like you can't, you can't change anything about it. Like, all you can do is like, like in, in our, in our stretch metabolism game, when we ran into problems, we just kind of backed off and like didn't, didn't cover those topics. And, uh, I'm like, you can't do that when, when you're supposed to be teaching specific things. So my, my one grade Oh, you can do, can sit down, but yeah, I don't want to make you stand there just to listen to me. Yeah. Yeah. Um, the, the one and the one idea of, I've seen an education that seems really cool. And again, I say this is like a person who knows nothing about education from a technical standpoint is the idea of um, like a cross curricular classes. So instead of saying you've math class and you have history class and this is something they have at the, there's a school, a charter school called quest to learn.

Speaker 1:          00:49:39       They have a few locations, you have like a code breakers class. We're codebreaker classes about codes and breaking them. And that's like what the class is about. And of course that includes math and history and like you can't take a class and not right, but like it's about code breaking and it's about something that you can get excited about as opposed to an abstract like group of tools, which is not super fun. And I think that's like a way that you can kind of take like, like games aren't like this is a like this is a moving game, right? It's like no, like games. Like if it's just about moving like, and it's like what about shared? No, it's just about moving. Right? Like I said, there are some games that technically are that, but that's not how you go about designing a game. Like you try to have like some emotional resonance.

Speaker 1:          00:50:14       You tried to make it so it's, it's interesting you give people tasks so when they like when something's too hard, they don't just have to like try harder. They can kind of back off from that. I was, I was just talking to the Keith and I still work with about, we've been really into heroes of the storm. I put the games I play are nothing like the games I make. I am super low brow and my games and a withhold I play and so we've been playing, here's the storm, which is a Moba for those of you don't know. And one of the, apparently there was a talk by the lead designer at league or the riot with League of legends. One of his philosophies is that you want to have lots of different skills for people to master so that when like you get in a situation, we're gonna like you keep trying to do this thing and you just can't do it.

Speaker 1:          00:50:50       Cause you just don't have that skill and you're not good enough yet, you can back off and do something else instead. And like if you think about math class, it doesn't allow you to kind of like back off and do something that you can do and gain mastery in a different area and then come back. It's like, no, we're just going to keep building on it over and over again. And if you miss one step, you are out. And like that's how we do it. And like that's a, that's a very ungainly way to do that. Like if that was a game that would be a bad game. But because we don't like, like we, we say like, oh we want to bring games into classes. Not that we want to bring lessons from games into classes. I'm going to stop ranting about that cause I don't know what I'm talking about. So,

Speaker 5:          00:51:22       uh, so the exact term games I've been playing are often about developing solutions for like a fixed problem and everybody's kind of graded against the, the same, uh, criteria I, he'd have like their compared, um, you know, like indirectly if you have metrics, completion time and everything like that. Uh, what do you think about games were like players solutions can compete or cooperate directly with one another. So it's not so much the, you know, the environment and like a fixed puzzle, but rather, you know, you know how they interact and that's a good idea. I've ever heard of the rubber wars.

Speaker 1:          00:52:00       Oh yes. Oh yes. No, I'm definitely familiar with a lot of those kinds of things. Yeah. That's, that's, that is something that, that intrigues us.

Speaker 5:          00:52:07       Hmm.

Speaker 1:          00:52:07       Maybe if you're lucky. Yes. It takes a while and make games. That's the hardest part. And so I, I would, I would love to make a game like that.

Speaker 5:          00:52:15       Hmm. So we're probably gonna have to wrap up soon. So we're just going to end up with the, with the question that we deferred, which is what has been the most surprising or unexpected thing until two 30 right?

Speaker 1:          00:52:28       It's in two 30 on this. Okay. So we have the room reserved for cleanup afterwards. Okay. Well we can start cleaning off while I talk. So I wanted to show you guys something really quickly, which is the secret origin and Zach tronics games.

Speaker 1:          00:52:44       It's just j flap. Has Anybody used this before? Yeah. You look excited. So I, in college I took a class about like models of computation and computational theory and one of the exercises that we got repeatedly was like, you know, like implement a push, like a, like an autonomous automata automata for, um, that, that satisfies these things and accepts and rejects the, is these different things and build a Turing machine. This is that tronics game, right? I mean there's actually, I came out there by somebody else called manufact Toria, which is literally about turning your shins, but like this idea of like,

Speaker 3:          00:53:15       okay,

Speaker 1:          00:53:15       here's the set of criteria. Here's a completely open space where you can design something that's technical and kind of computation knee but not literally programming and have it like meet these criteria over here. And I think a lot of people who make programming games, they never, they never got to experience the beauty of Jay flap. Uh, and they just thought, oh, I have to write code and then do this. And I think the thing that really like this really tapped into something deep in my psyche, the idea that like you can build these things that aren't code but are symbolic or mechanical or processes and still apply the sort of programmatic like criteria to them.

Speaker 5:          00:53:47       And so that's the hidden, that's the hidden origin of Zach tronics games. There's, I wrote this and I have no idea what any of this means. I, yeah,

Speaker 1:          00:53:56       I don't remember anything from od comp yet. It was still like the most important class I took in college.

Speaker 5:          00:54:01       So, um,

Speaker 1:          00:54:08       oh God. Yeah, that was just talking about Java. But yeah, that was, yeah. So I'm going to blast it. Do this and like three minutes apparently. So, so we get surprised by your players. A lot of times, um, people build an impressive things, obviously, like everybody's seeing like, like red standing computers in Minecraft, like that kind of thing of people just building something that's surprising or not surprising, but just like impressive. Um, sometimes at our games people discover unintentional mechanics and exploit them to great depth, right? Like that's, that's a fun thing. And sometimes people just find out new ways to play our games. So I showed you this about the origin of histograms. Um, this is also where solution sharing and space, Kim, it really looks like this as youtube videos. But before that we were like, oh, what if it was like a website that it generated and you could click on it and stuff.

Speaker 1:          00:54:48       It turns out you look at this, you have no idea what's going on here. Right? I don't know what's going on there. I mean, technically I guess that's a solution to a puzzle. But that was why the video came about. And, uh, and that was back when it was like super hard to record a video without like a codex. And, uh, management network and construed door. And you'll see the first, uh, the first universal solution that you can buy, like connecting up the wires here. You can build like any, you can just replicate any set of output universally. And so this, this leads to something we call a Volkswagen thing. Now, after people did this to great degree in Schengen area, which is where you say to hell with what it's supposed to do, let's she and like just get the right output, you know, like the right, the right criteria for the test.

Speaker 1:          00:55:28       So that's, that's, that's somebody else's term that's not mine. Um, and an infant, a minor, we were surprised by or players, uh, I built in front of my kind of play like TF two, like it has teams and classes and stuff. I didn't know anything about game design that all of our players realize that it's more fun just to build shit. That's cool. And, and this would be a thing where our players innovated and we're just like, ah, I don't know what to do. Right. And sometimes being at like the being at ground zero is like the worst place to see what's going on right where you are. And that's definitely, I think what happened with within the minor, um, with space cam, we have some, oh that looks terrible. So, um, so this is like a stall, the stall of Waldo. These are techniques that we had no idea where possible until we ship the game and people started doing them where if you just put it in a structure like this and have you just run off, it'll just repeatedly execute that which it turns out is really cheap from like a a score perspective.

Speaker 1:          00:56:16       There's also like a, I didn't even think this was possible, but at a strictly linear solution.

Speaker 5:          00:56:23       Don't know if you guys have seen that before,

Speaker 1:          00:56:24       but that's pretty cool. Um, and people figuring out the worst example of this, this is kind of like these are fun, right? Like this is cool. Somebody figure out something clever. Uh, when people figured out how our bonding algorithm worked and that each bonder was technically in like a sorted list somewhere in memory. And that if you figured out the order, you could control the order precisely in ways we didn't intend. This is a problem that continually bites us. Something asked over and over again, which is that like should something be deterministic or should it be non deterministic and if it's non deterministic, how do we convey that it's non deterministic? This would be probably mentioned and I know that intention io, when you run a solution, every time you run that same test run, it's deterministic. But when you get to the next test run, it's technically not deterministic from the last one.

Speaker 1:          00:57:03       So, uh, this, this happens all the time. We added logic gates. People are like, oh I'm clever, I'm going to go flip flops. Right? So they built a non deterministic flip flop that if they like took like a class in electrical engineering, they know it was done terministic but because they run the same test run over and over again, it's deterministic. It always initialized as the top at first. And then they get to test one, two and suddenly it's the bottom one and they're just like, this is good. This is a bug in your game. I get so many emails and they're like, this is bugging your game. It's like, no, it's just like part of it's deterministic and part of it's not and it's, it's super complicated. Can I have like five more minutes? Okay. You guys can leave if you need to. That's cool.

Speaker 1:          00:57:32       Um, so this is the greatest thing that anybody's ever made for any of our games, which this is a homemade, like they made it by hand. It's a looping animated Gif and we were going to do youtube video uploads for infinity factory. And this was like 2013 when like everybody was getting really into animated gifs again and uh, and they made this and it just, Oh you can't talk cause you can't actually put animated gifs in PowerPoint. It turns out. And uh, and so like they made this gift and I'm just like, oh my God, this is the greatest thing I've ever seen in my life. And so within like a day I took our youtube thing, just ripped out all of the video stuff that we were planning to do and made it spit out animated gifs instead. And it was the most genius thing we ever did because then everybody just shared animated gifs with all their friends and they like because of the factory loop, we can make the gifts loop seamlessly and it's fucking amazing.

Speaker 1:          00:58:15       It was my favorite thing. So here you can see some techniques. So you actually see, you can see some techniques that people discovered that I really didn't intend and kind of built like with like you can't do anything about it is that rope. Damn it. See if this put it in me, it gets us the Bz so pretty that rotating things as quicker than moving them on conveyors because of like how rotating things work. And then people also use this to build giant, giant rotating arms where they'll just have these arms that just swing effortlessly in one cycle back and forth across the map. Like to the point where when people keep their own like, uh, like high score list with other people they like on, on, on Reddit, they do this for all of our games because we don't have an official high score list cause I don't want to be responsible for making sure people aren't cheating, that they'll say like, here's your best score, here's your best score without giant rotate our arms.

Speaker 1:          00:59:00       Right. Like it's a huge problem. But like we couldn't do anything about it cause it's just kind of weed. That was the game we made. Like, um, we also had somebody who, um, they, this is a pro, this is a puzzle where you're supposed to build a machine that you can drive to like fight off the battle at spoiler alert. At the end of the game, somebody built like a completely autonomous solution that like perfectly like 100%. So the, the battle. So like I didn't even think that was possible, but there they are doing it. Oh wait, wait, what? Oh Shit. What's, what's your, what's your youtube name? Okay. So there might be more stuffing from you. I don't know. Um, okay. So um, so this is a, uh, you can tell like it's a whatever degree you call the [inaudible] for that. A couple people made these, um, somebody bought a typewriter.

Speaker 1:          00:59:49       Like it's getting to the point where I don't even know like, cause all sorts of, there's all sorts of cool things that I, in theory I understand you can do in the game. Like you can build, you can build physical structures that are data because of like their physical, right? And so I'm guessing that's like a matrix of like things that encode the different characters, right? This dude, like almost all of these videos are from this guy gtw one, two, three. So you build a typewriter, but any build a calculator which uses the same kind of method for printing. The crazy thing is it actually supports a ton of precision because it, I'm going to skip ahead really quickly. You can see it, it builds, it does it physically. I think you guys can see here this guy, because he's going to build this number and it, it just kind of builds it as like a stack of blocks. And then the way you add them as you just smash them together and let it like physically carry over and stopped. So it's pretty cool. Um, he also implemented tis 100 and an infant. Yeah.

Speaker 2:          01:00:44       So

Speaker 1:          01:00:47       as far cleverer than I am. So I'm, the code of the program is locked in, but it is reprogrammable and it's really execute. Like I don't even know how the fuck do you do this?

Speaker 3:          01:00:59       Yeah,

Speaker 1:          01:01:00       you consider it hungry? I don't know. I don't want this person writing code for my games.

Speaker 2:          01:01:05       Right.

Speaker 1:          01:01:08       Um, so there, there's a little bit of, these are all going to TRS is boring by comparison. Uh, so we had this instruction called Jro, right. Which lets you just arbitrarily tell one node where to jump. One node can tell another node were how to jump and it's like you can do the same things with it. The problem is that that doesn't look cool, right? Like does anybody know what this is? This code? Yeah. So this is the quick three, like fast inverse, square root thing that like, it's, it's like infamous code. It's, it's, it's, it's really hard to tell how this does an inverse square root. Um, but it's great code and it's great solutions for ts 100 look like this. It's like as it best, like you can tell, there's a comment here that just says, what the fuck? So like, you know that something weird is going on.

Speaker 1:          01:01:46       Like you don't even get that on task because there's not room for such a comment. So like good t I s solutions don't look any different than a bad one. Some people built little fun things like this generates amazed that you can walk around in, but that's about it. Uh, a lot of people built emulators for TSL hundred. I guess that's kind of cool. Like, like there was surprising number of people who made emulators for Canada's 100, which I guess is how program we're going to interact with stuff as to try to emulate it has some fun stuff and sound going to come through. MMM, okay. So the, Oh, I can hear myself going through that. That's what's going on. That's confusing. Um, I'm going to try to, okay. Um, can we link to the microphone into the computer? Does that work? We'll try it in a second. So this is one of those people who bought a flip flop. That's not a terministic they, uh, they think it is.

Speaker 5:          01:02:41       Um, well that does seem like an error. That was just supposed to be funny. Okay, here we go. So here

Speaker 1:          01:02:51       somebody built a game of life. Like these are just things that I didn't even like. I guess that works. Like evidently it works. I don't know how it works. Right. And there's a bunch of that we shouldn't and I know the best ones are the music player ones. So we're going to try this.

Speaker 3:          01:03:11       Yup.

Speaker 1:          01:03:11       That's just going to be feedback. That's not gonna work. Um, this play music, which is hilarious. If we could, you could hear it. So, uh, that, that kind of doesn't work. What's that joke? Um, so here's the last thing I'll show you. So somebody built a, a three d maze or you can like walk around. This means, and the way that they couldn't actually store the maze anywhere. So it like it algorithmically generates the same maize every time because otherwise you just wouldn't go to fit it. Right. And so all the crazies engineered solutions have this train. Like you just can't even tell how they work. And it's, it's like magic,

Speaker 1:          01:03:46       but there's no fun mechanics to discover in that game. So I think the giant rotator arms are probably the best for what somebody has done. So that was another quick thing that I show you guys. Somebody asked about the s 100 patches and so that was totally inspired by Activision. Used to give away. I get, I don't know if they, you had to send him money, but if you photographed yourself getting a high score in a m and it would a game and like next to the TV or whatever and then you send them the photo and then they'd send you back a patch so you could like join, they're like high score club or whatever. And so I saw this and was like, yes, we need to do this for, for like Infinera factory. And so that's where like the first 100 the first 100 people to beat all of the puzzles in the first part of the game, got a patch and a, and it was, it was pretty cool. Yeah. I guess we should start off then. Does anybody else have any questions? We have time rate. Thank you for coming here. Round of applause.

Speaker 3:          01:04:34       [inaudible].