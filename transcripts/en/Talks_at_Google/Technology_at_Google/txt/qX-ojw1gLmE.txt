Speaker 1:          00:06          Computer scientists don't normally write books. We write 12 page papers, we submit to sit calm. So it was somewhat of a surprise to me when I realized I was writing a book. I'd written several chapters over before I figured out what was going on and I think it was a friend of mine. I said, by the way, have you noticed you're writing a book? And I sort of said, oh the, the short term motivation for this book was a project to that national science foundation funded, which several of us encouraged them to do. I called the future in an architecture project. The research community sort of gets sucked into the reality of the short term Internet and everything that's wrong with it. So if you look at a lot of the networking research, it's fairly short term. We made an argument that at least some people in the community ought to be asking, what should the Internet of 15 years from now, what's your the Internet of 20 years from now look like?

Speaker 1:          00:54          So, so they did this project called future and in architecture and pushed a few people in the community to go do some longterm research. And I had an, I had a grant from NSF to sort of look across all the projects and integrate what was being learned. And after I'd been doing that for several years, I realized that the result was probably book sized. But of course the daddy of writing alternative architecture papers has been going on in the research community since 1990 we've had a whole bunch of proposals for, well you could have built it like this, you could have built it like that. And when I started to go back and look at all of those proposals, you realize you can't compare proposals unless you understand the problem they're trying to solve. So a lot of what this book is about is requirements and people say, oh, requirements is so boring.

Speaker 1:          01:45          I want to develop this cool technology. Show me something neat. But in fact, when you actually ask what are the requirements for a successful Internet, it becomes a very, very interesting conversation. So this book is in part about requirements. It is in part about alternative ways. You could have built an Internet, I think identified 26 alternative proposals that have been published that I go through in the book. Not In painful depth I assure you. And to a certain extent, the book is also a personal history because over the decades since I started working on the Internet, which was 1975, um, my understanding of what problem we were solving has completely changed. And, and if I can say just a little bit about my personal history, I, in the 1970s we were just trying to get the protocols to work and it's, it's important to remember how little we knew or how little we were sure of back then.

Speaker 1:          02:42          There were people that absolutely believed you could not write a protocol specification precise enough. The two people working only from the SPEC could actually write interoperable code. They simply didn't think you could do it. And of course today the idea of writing a standard is sort of like, well, I'll write one today, but we didn't know how to do it. And in fact we spent something like two years with the TCP standard in which we alternatively to bugged our code and debunks the SPEC and to bug the code and debug the SPEC and it's cause he had to learn how to write us back. Then in the 1980s which is when I, excuse me, which is when I chaired the Internet activities board, uh, we were getting big and the 1980s was the computer scientist response to getting big, which is we only know one way to scale a system or at least back then.

Speaker 1:          03:32          The reflective thing to do is to make it a hierarchy. So we made a routing into a hierarchy. We had the exterior gateway protocol, which today is BGP. We had interior gateway protocol. We made the domain name system hierarchical. It used to be a list that John Pasta maintain. You can download the file. That didn't work and we had to organize the standards committee. We made that hierarchical too. We created an ITF and created areas and working groups. And then in the 1990s aside from the web, the thing that happened was it started to get commercial. And that was a surprising decade. Uh, cause we didn't know what the commercial internet would look like in the 1980s and the first part of the 1980s the core of the Internet was the NSF net run by the National Science Foundation. And people were playing around with the idea that there should be little for profit experiments around the edge.

Speaker 1:          04:25          But when the NSF declared that we're going to shut down and from that and we were going to have a commercial core, we sort of looked around and said, whoa, we don't know what this is going to look like. And in fact, BGP, the border gateway protocol is interesting. It's the first protocol I participated in designing where the specific goal is to shape industry structure. And we didn't understand in the 1970s and eighties that we were shaping industry structure. But in the 1990s this became painfully clear. But my personal experience in the 1990s was, was, well, I'll tell you a specific story. In the first part of the 1990s I put a lot of work into quality of service and we built diff serve an insert and all this kind of stuff. And we were trying to get it deployed in the Internet. And we went to Cisco and said, put this stuff in your router.

Speaker 1:          05:18          And they said, we like a customer, go find me a customer. So I went to the largest ISP at the time and I went to the CTO and I said, hey, there's this cool this sort of stuff and you ought to put this in your network. And he said, no, I like clean answers, but that wasn't the one I want. I said, why not? And he said, the following, wonderful sentence, he said, why should I spend a lot of money? So Bill Gates can make a lot of money selling Internet telephony for windows? And I said, ah, the competitive interface, the specification of the Internet protocol, which is a cut point in the stack, is a money insulator. And you guys know this because you live above that and you constantly watch ISP is trying to figure out how to suck into your value proposition. They're trying to pull money down into their layer.

Speaker 1:          06:12          And, and I've, I've talked to some ISP is actually in Europe, the problem is more substantial. Uh, you know, I was talking to one of the ISP is in Europe and uh, and, and they were trying to figure out how to suck money out of Google. So that, and I said, well, why are you trying to do this? And they said, well, Google has some. And that was, that was the depth of their logic. So, and by the way, then the CTO said, the following interesting thing to me, he said, and by the way, if I did turn on, if I did put quality of service into my network, why would I turn it on for anybody but me? It was 1995 we didn't know to call it network neutrality back then. But all of a sudden I realized there was a problem. So I realized that the technologists, we're not in charge of the future of the Internet.

Speaker 1:          06:54          Uh, hired an economist. I've had a political scientist that's worked for me. I've collaborated with lawyers. I've become painfully multidisciplinary. This is usually a symptom that you're over the hill, but I've been doing it for awhile. So the book is in large part about requirements and the requirements are not just technical. There's a chapter in there on economic viability. What does it mean? How do you think about designing a protocol or set of protocol one Kwanna call in the book of the architecture so that it is viable as an industry structure? Uh, in fact there's some nice economic theory about this. There's an economist, one of my favorite economists is a man named Ronald Coase. Uh, and he is famous for having articulate what's called the theory of the firm and just said, why do firms exist? It's really just question. If you naively believe your economics 101 class, which is to say competition disciplines to the market and you always want to buy the, the, you want to pick price and quality for years procurements.

Speaker 1:          07:59          So, so why do you have a big firm? Why isn't it the firm? Lots of little from lists that are constantly competing with each other. And he made the point that the process of negotiation, of finding the price, finding the quality, that the negotiation itself was costly. He called it transaction costs and he pointed out that of transaction costs are too high. Then it's cheaper to build that coal, that decision into the firm. And so in some sense planning, which is what happens inside a firm competes with competition to see which one's more efficient and the interfaces where you're most likely to see competition are the ones where the transaction costs is lowest. And one of the ways we can make the transaction costs low is to have a clean specification on the Internet, on the interface, which is to say that protocol boundaries defined industry boundary.

Speaker 1:          08:50          The reason Internet service providers look the way they do is the internet protocol specified the way it was. And if we had specified a differently, the industry structure would be different. Not every economist I've spoken to said, well, Duh, but, but I didn't get this. There was another famous con conversation I had with an economist, and I put this into book too. Um, he, he doesn't like me to tell this story and name him because he's worried that somebody might think the conversation was actually serious, but he's, he does work for Google. And, and he said to me, the Internet's about routing money. Robert in packets is a side effect and you screwed up the money routing protocols. And I said, I didn't design any money routing protocols. And he said, that's what I said. And whenever we look at disfunction, for example, the failure of quality of service and the Internet, it's not because it doesn't work, technically it works just fine.

Speaker 1:          09:50          It's because it didn't work economically. And this was this wonderful quote from the CTL, why should I spend money to put this stuff in so that the apps running on top of it work better, but the apps aren't paying me. I said, oh, okay. So there's a tremendous dislocation there. So, so there's a chapter in the book on economics there. A couple other areas that we clearly screwed up in the Internet of very technical one which is very geeky, is network management. And it's really hard to get the networking community to work on network management because they want to polish the data plane. I'm going to optimize, we are taught to optimize. So I'm going to get the packets to flow 10% faster. I'm going to fill that gigabit link 100% full. But in the early days of the Internet, our telephone company friends, when they weren't busy saying to us, it won't work.

Speaker 1:          10:39          It won't work. It won't work. Which is what they mostly said, said if you don't attend a network management in the very beginning, you're going to build a system that's impossible to manage and you should engineer in every one of your data plane protocols. That wasn't the word. They used management tools and we didn't do that. So there's a chapter in the book on management. Um, if you want your Internet to be successful, your protocols have to last for a long time. The Internet's been around longer than, I guess it's not longer than Unix, but bought longer than most anything else in the Internet space. And what, what is it that you did if you set out to build a system that would last a long time? It turns out they're absolutely conflicting theories in that space. One theories is requirements change. And so your architecture has to adapt.

Speaker 1:          11:28          Your system has to change over time because the requirements will change. And so flexibility and adaptability is key to longevity. But there's a competing competing theory, which is the thing that makes your network survive is the stability as a platform layer and IP. The Internet that I am concerned with, you know the stuff up there, the guys [inaudible] you guys are just apps, right? You're not the internet, your apps not to the user. You're the Internet. Facebook's the Internet. Twitter see Internet. But you know, as a network engineer I just moved bites. Okay. But the stability of the platform, the fact that the Ip layer is not going to change rapidly, it makes it an inviting place for innovators to come and sit on top. And as soon as you have innovators sitting on top of you, then they will demand that your platform survive so that they can survive.

Speaker 1:          12:22          And so you're going to virtuous circle there in which the platform doesn't change. But how do you deal with changing requirements in that space? Well, people have argued that that periodically you just have to throw it out and start over, which is one of the reasons why we encouraged the national science foundation to think about a future Internet architecture project because maybe that time will come. I had a friend who was in a different business, he was in the automobile industry and he talked to me about the history of collaboration. I don't know whether anybody here has ever worked on a carburetor. Yeah, okay. It's the Spaghetti Code of the automobile industry. If you ever took a carburetor, a little vacuum tubes and vacuum tubes on vacuum tubes, but they're so mature, they were so good that nobody could displace them. And they were just fantastic fuel injection.

Speaker 1:          13:13          Guys were stalking them from the other side of the street saying this would work better, but it wasn't mature. But what killed carboration was a sudden dramatic change and requirements simultaneously. The need to be very fuel efficient. I remember the fuel embargo. How many of you were born in the few of environment? My God. Um, and the need that's back there. I asked her I to remember the fuel embargo, right? And the need to be a very fuel efficient and cost effective and good performance. And when they had to deal with an emission control and when they had to deal with all of that once the carboration guys that couldn't quite do it, the fuel injection guys took them. And the only place you can find a carburetor today is on my lawn mower, which it could not, it's not true. My now is electric, but carburetors held off fuel injection for like 20, 30 years.

Speaker 1:          14:05          So it's pretty frustrating to live on the other side of the street stock in the success story saying, well maybe they'll stumble and I can take them. But that was the whole idea behind the, the sort of episodic replacement theory. So this is our chapter in my book on longevity. I outline 27 competing theories about how a system can be designed, so it'll live a long time. So there's a chapter on economics, there's a chapter on longevity as a chapter on management. Uh, and as I said, there's also a chapter on my personal history, my, my journey of discovery. These various transformative conversations I've had with economists, uh, which caused me to hire an economist. Uh, there's also a long discussion in the book on security. You can't talk about the internet today without talking about security. And I confess I've gotten somewhat grumpy when I go to Washington and, and people say, why didn't you think about security from the very beginning?

Speaker 1:          15:09          You got that done. And the answer is what we did think about security from the very beginning when maybe didn't think about it and right. We should try to think about it. But the thing you got to remember is when somebody says, I want the Internet to be more secure, or they say, the current meme is the Internet's broken. What does that mean? What does it mean to say the Internet's broken? I just don't know. But you have to take that aspirational word. I want more security. It's a motherhood where you know, cheap, secure and you have to break it down into actionable elements. So if you want to talk about security holistically, you have to sort of say, well what's a way of breaking it up into actionable components? And when you do that, you realize that different parts of the ecosystem are responsible for different parts of the problem.

Speaker 1:          16:02          And I thought I would give you just a couple of examples in that space because security is such a hot topic right now. Remember to me the Internet is not Facebook. The Internet is not Google. The Internet is not Twitter. The Internet is a general platform that carries packets and apps can be built on top of it and you can build any kind of app you want. You know, when Tim Burners Lee came along and defended the web, we all said, oh, what a fantastic thing. It just naturally ran on top of our platform. And then when nobody was looking, we rent, rent, fixed, all sorts of things that would work better. But you know, the illusion was, you know, it just, it's just an APP. It just happened. And when video streaming starts, we knew we were going to do video. We were streaming video in the unit in the 1980s it's just, it wasn't commercially viable.

Speaker 1:          16:49          We knew we could stream video, we knew we could do, we just had to wait for enough people to have broadband and for the cost to come down, it's a cost issue. You know there were some curves, we were watching the curves, which is how much does it cost Netflix to mail out a DVD and mail it back and what is the cost going to be to stream the stuff over the internet. And you could see those curves coming in to come together. Now there was also, Netflix also had our rent, this licensing problem. They, they didn't have the licensing rights to send the stuff online. So there's another issue there. But we've re engineered a lot of the Internet again to, to make video streaming work. And you guys know that you've put a lot of effort into youtube. You know how much effort you've put into it.

Speaker 1:          17:32          Um, Netflix and youtube together are 50% of all the traffic flowing into most ISP today. Okay. American ESPs and other countries are suffering the same fatus network as Netflix shows up, but you have to go back to security. When you begin to break the problem into parts, you realize that security is not a dimension along which you're optimizing and there's perfection out there. It doesn't work. Security is a multidimensional space in which different objectives actually compete with each other and different stakeholders compete with each other and to build a successfully secure Internet is to say you have built a compromise in which all of the actors will, will allow your solution to survive if you build a, if you perfect privacy scheme, this guy from the NSA shows up and says, can I have a little word with you? And he does security too. He calls it national security, but it's security.

Speaker 1:          18:30          If you build a network that's completely encrypted, of course all the people that wanted to look at what you were doing so that they could gather demographic information about you get cranky. So there are all these tensions in the system. But I wanted to say a couple things about security because it is so important than um, I broke the problem in the book into four parts, which is people who trust each other or trying to communicate and there's a third party who is trying to interfere steel modify block. Okay? That's the classic problem of information security. The second problem is I connect to you and you attack me.

Speaker 2:          19:10          Okay?

Speaker 1:          19:11          No, I go to a website and it downloads malware or to, you know, a download email and it turns out to be spam or have a malicious attachment. The third problem is the mechanisms of the, the Internet that I'm talking about are themselves broken and most of the mechanisms in the Internet today are broken. And the fourth one is denial of service attacks because that's sort of in a special category. Just so say a few words about some of these things. If you look at the, the basic services of the Internet today, they all suffer from poor security. The domain name system is insecure. The certificate authority system is insecure. The routing protocol, BGP is insecurity. I said, why is this? Why, why, why, why, why? Um, the basic vulnerability of the Border Gateway Protocol is that I can announce that I'm the best route to someplace. And if somebody believes me, some of my traffic comes here. So I think, I think a while back there was some Google traffic that went to Russia and there was apparently some Nigeria. And who said it was all my fault. I'm terribly sorry. Don't blame me. I, this is weird. We knew this vulnerability existed in 1983 it's documented that we knew the vulnerability existed in 1983. So, you know, you could say, why the rude word, do we still have the problem if we knew it existed in 1883 and, and the answer is not a technical one.

Speaker 1:          20:39          First of all, there are bitter, unending debates about what component that insecurity is actually the most important to fix. What is the security vulnerability? And we really got to deal with, and if you can't get people to agree on the requirement, you're never going to get them to agree on a solution. Okay? Some people think without the problem is his attack on the inner inner exchange of packets at an exchange of packets across an exchange. Some people think it's the injection of false routing, disagree about what the thing, and the second problem is, the people who suffer are not the people who would have to pay. It's another example of why should I pay a lot of money to save him money? If Comcast puts a whole lot of money in to making sure that their routing is perfect, did they make any more money? No. Other people have fewer attacks on it, but those are other people. Those other people pay Comcast. No, no. I've talked to Comcast and they do put a lot of effort into this because they want to be good citizens, but the other problem is

Speaker 1:          21:49          they can't do it alone. They may be the biggest consumer ISP in the United States, but they need other people to do things. So there's a huge coordination problem. So if you have a problem where people can't agree on what the problem really is, there's what the economist called a negative externality, which is I have to spend money so he can save something and there's a terrible coordination problem and there's nobody in charge and the whole essence of the Internet, there's nobody in charge. Oh we love it. Whoopee. Okay. There's nobody in charge. It makes it really hard to fix these problems. Okay, so the discussion of economics relates to the discussion of security. I want to come back to a couple of other aspects of security because I've been thinking about it a lot. I talked about the classic communications or information security problems, which is I want to have a trusted conversation with you and somebody is trying to mess it up. The classic solution is here come the cryptographers over the hill, we're going to encrypt everything and then everything will be great.

Speaker 1:          22:49          Crypto is not pixie dust. You can't sprinkle it on a problem and make the problem go away. I, I was talking to a counter intelligence friend of mine and he said, only amateurs think you have to break the crypto. We just mess with the keys. And if you look at the horrible problems we have today with their certificate authority system, which in fact Google is, is I think leading the charge to try to make it better. And the reason why we have horrible problems with the certificate authority system, which have to do with lack of trust, a lack of understanding of which actors were trustworthy, an inability to coordinate a global system in which people are definitionally untrustworthy,

Speaker 2:          23:28          uh,

Speaker 1:          23:30          cryptographers tend to say, well, we'll solve them. You over there you go solve the key problem. No, that's where the problem is. Everybody go over there and solve the key key management problem. That is the key issue. Oh God, I said it. That's the key issue. I'm sorry. Forgive me. But there's one other thing I want to say about information security. If we teach this in school, we say there are three elements with sometimes six, but the most important ones are confidentiality, integrity, and availability. And in the early days of the Internet we were trying to figure how to do security. We, we were trying to figure out who we could talk to and the only people we could find to talk to, this is 1970s what's the national security agency? And we went down there and said help us think through network security. They only had one concern, which was disclosure control.

Speaker 1:          24:25          They said, you know, if the spy steals the stuff it's gone man. So you got to just have a hundred percent attention to disclosure control and what that meant. And by the way, the integrity on the unit, it's really easy because what comes out, it's supposed to be what goes in and you can usually tell. So so, but their attitude was, you know, if you think you've got a data leak, just turn the network off. Cause it was not at the time operationally central to what they do. So there's a tremendous gravitational pull to confidentiality or disclosure control. But there are three elements to this story. There's disclosure control, there is integrity, integrity and there's availability. It's called the CIA triad, which is not to be confused with the Central Intelligence Agency and availability is an element of security. You can't solve availability by sprinkling crypto on it. It doesn't work.

Speaker 1:          25:18          Availability involves using resources that are trustworthy. If there's a DNS sending you to the wrong place, you have to be able to know enough to stop using it. If you're being routed through an inappropriate part of the internet, you have to be able to avoid it. Have, we do not have in computer science a general theory of availability. But if you look at what my security friends have done, they have paid a great deal of attention to disclosure, control and integrity and they have absolutely screwed up availability. I had, I had an interesting little annoying a fat the other day in which I was, uh, trying to download a update of a python module and I went to the, did all the thing, you know, pip install, whatever the hell your type, I don't remember what your type, and the thing came back and it said, uh, the, the certificate, the signing certificate for the code is invalid. It's probably out of date and so you can't download the module.

Speaker 1:          26:24          I said, what? What's plan B? There was no plan B. You can't download the module. And I'm sure my security friends thought good day's work. Okay. We provided with very, very low probability that almost certainly there's a was out of date because the guy's an idiot and you didn't update it. It's like, you know, there's 0% chance that it was actually a malicious, but they stopped me cold. Now my attitude is they carried out a 100% successful security related to tackle me along the dimension of availability and consumers. I'm sorry, I hate that word. Users. What they want to do is get their job done and we keep saying, why do people click through these warning boxes? Nevermind that the warning boxes are and explicable that click through them because they have to get their job done. And anybody who is designed a security system which stops the user dead, it doesn't give them a plan.

Speaker 1:          27:20          B has failed security one on one, but that's not the way we teach it because we focus on integrity and disclosure control. And so we sprinkled crypto on everything and hope it's done a flame off. Um, the other thing I wanted to say about security, and there's a long chapter about this is this idea of being attacked. I can attach to a website, uh, it sends me malware. Some of my friends who are very technical say, yeah, we really have to focus on the correct implementation of out of applications. You know, they too can have buffer overruns. Oh my God, don't tell me about another buffer overrun. The misbehavior you get, let us say in the web today is not because of implementation bugs. It's because of bad design. No, I'm sorry I won't take back. Not Bad. Because of deliberate design decisions. That is to say the way the system functions is insecure by design.

Speaker 1:          28:22          Now that shouldn't surprise you because it's very hard to imagine anything as complicated as the web that doesn't have risky modalities. I mean, I can hit somebody over the head with a hammer. So the risk of modalities in the web, or not surprising, but in fact conscious decisions were taken to put functionality into the web was known to be risky. When the idea of downloading active code first came up, every security person I knew was standing on the sideline saying, that's the stupidest idea I've ever heard. You're all going to die. You're all going to die. Why would you download code from somebody that you don't low? No know. We tell our kids don't take cookies from strangers. Why would you take code from a stranger and run it on your computer and I, we actually talked to Nsa about this and they said inspecting code to see whether it's malicious as a fool's errand.

Speaker 1:          29:10          The only way you can reliably have downloads of active code is that you have a very clear sense of whether the senders trustworthy. You've got to be embedded in a space of trust, but if we have risky modalities in the applications, you can't expect the packet layer to fix that. The application guys have to fix this and they have to take the responsibility for understanding how to balance this feature, feature rich space that everybody loves. You know, what did you get for downloading codes? My God, you've got Flash, you've got, you know, animated dancing cats and it, boy, that's worth it. Um, against the security risks. And it is an application problem, but that's not something that is understood when you go to Washington. They say the Internet's broken, fix it, and you get some draconian ideas in Washington, some of which I hope I have helped to stamp out. I had a Senate staffer a while back say to me, this sounds like nonsense, but you understand exactly what he was saying. He said, why don't packets have license plates? And I know what he meant. He meant why isn't there some identifier in a packet that a third party like a policeman can look at to unambiguously understand who sent it. Okay. Why are all actions on the Internet accountable to a person?

Speaker 1:          30:36          Well, I mean, there are lots of good answers to that. One of which is socially, it's a terrible idea. Um, it eliminates any possibility of anonymous action on the Internet. And I think there's a space for anonymous action. Uh, furthermore, who would issue those identities in a global world? Almost certainly sovereign states would assert their right to issue those identities. So what would it mean if I have a packet that goes by and it says that the identity of this, of this, the sender of this package is verified by the sovereign state of Iran. Do I feel better now? You know, so, but if you don't have an accountable internet, what do you have? And there's been very little attention paid to this. So, um, although my book is about Internet, I actually spend a certain amount of time talking about applications. And one of the projects we're currently doing it MIT is to see whether we can think in a more methodical way about how to help application designers deal with this tradeoff between embedding risky actions because their feature rich and dealing with the fact you only want to use them in a context where the people you're communicating with you trust.

Speaker 1:          31:41          So the book has some of my personal history. I talk about stories from the two thousands as well as the 19 hundreds and 2000 and ten's a, there's a chapter on what does it mean for a network to be, to meet the needs of society, chapter on requirements. And we have one on management as I said, availability, security, longevity. And then there was a discussion in the book of alternative. So why, and I'm going to stop in a second. Why are people proposing alternatives to the Internet? It actually does what it does pretty well. What it does is move packets for machine a to machine B. The reason they're proposing alternatives is because they wanted to do something different, not because they think it could do exactly what it does better than it does. And they want to put more features in because that's what engineers always want to do. They want to add features. Every people here familiar with the expression, second system syndrome.

Speaker 1:          32:42          It's when you built up system that sort of does something pretty well and you say, I'm going to build a second one, it's going to do everything and they'll fail. Okay. Um, so what have they talked about putting in? Well, one thing that they've talked about adding isn't, well you send a packet to a machine, but most people don't want to get to a machine. They want to get to a service that's on the machine or they want to get some information on the machine. So why don't we tell the network what service you're trying to get to or why don't we tell the network and what information you're trying to get through? Why don't package to have the names of information in them. This is an idea that's been around for a long time. I think it was first proposed around 1995 by David Cheriton, I think.

Speaker 1:          33:21          Uh, it now goes by the name of information centric networking and it creates a really interesting problem. How do you build a routing protocol that can run, that can route to a few billion things as opposed to the Internet today, which is routing to a few million things. Uh, but that's not the real interesting question. The interesting question is do you want to give, do you Mr Google, do you want to give to the network, the control over where the network goes to retrieve a copy for mentioned piece of information or do you want to keep that control inside your firm? Protocol design is actually over industry structure and balance of power and there's a lot of discussion this in the book that adding more features to the network may in fact be empowering the wrong person, whether it's a state that would like to carry out surveillance or an ISP that might like to manipulate to get money across that money insulator. And uh, the future is not being defined by technology. The future is being defined by these forces, economic forces, political considerations, contention in the industrial space. And, and that's why I'm no longer running a purely technical group, but I think I should stop and take questions from.

Speaker 3:          34:35          I had heard some interesting stories about how they originally set up protocols between the big eyes, peas to transfer packets between each other. Um, I had heard that the fact that it zero zero cost between them was an interesting story. Have you heard that one? Okay. And in the original structure,

Speaker 1:          34:53          the Internet, little ISP bought service from big eyes please. We call that surface trends that other people might call it long distance. You pay them and they get you everywhere. But the ISP is that are at the top half to interconnect in order to exchange traffic with each other. Now that's not getting to the whole Internet. That's just getting to, I want to get to your customers and you want to get to mine. And there is an apocryphal story which I think is in the book, but it's an apocryphal story. I can't figure out whether it's true that those first few commercial wide area Internet providers had to figure out the business terms of which they were going to interconnect. They understood the technical terms on which they were the business terms of the issue and they got together and there was a conversation and at one point, so the goes, one of the guys in the room said, oh, I thought you were going to pay me money.

Speaker 1:          35:44          And it's, it's comforting. It's complicated when you're having a conversation with somebody and you're bargaining and you don't even know which way the money's going to go. Friend of mine totally broke a car dealer. It was just amazing. He, he wanted to buy a new car and so he was trading in a used car, but his mother had recently reached that age where she can no longer drive. So they actually, it was trading at two cars to buy a new car. And when they worked out the bargain, he got the car and the dealer had to give him money and the dealer said, you just broke my brain. I understand the math, but if I give you the car, you're supposed to give me money. The idea that I'm giving you the car and I'm giving you by just opted. Totally. So there's a conversation in which somebody said, wait a minute, I thought the money was going to go the other way.

Speaker 1:          36:25          And so as the story goes, all of a sudden the people in the room who were technical businessman suddenly realized that if they let the lawyers in the room, there will be a three or negotiation. And so they stood up and said, quick before the lawyers get here, I don't pay you, you don't pay me shake hands. We interconnect, let's get outta here. And thus, so it is said revenue neutral period was born. Yeah, that's been disputed over and over over again. The latest dispute of course being whether people like Google and Netflix have to pay to interconnect with ISP. And that was, you know, a fee three years ago was a serious nasty dispute, which led to lots of congestion on the Internet. Some other questions?

Speaker 4:          37:03          Sure. So there's two pieces. One is when you talk about security, one of the more recent excitement's at least for inches around the tls 1.3 right? It has been the conflict between end to end security and folks who are, for instance, running a data center and need to know what's going on in their data center or wanting to based. So there's, there's end to end, but then there's also you're running across my equipment. I need to know what you're doing or what's being done so that bad actors can't come in. Um, and then another piece of somewhat correlated to this, I'm curious to your viewpoints is the tussle that's going on now between network management and visibility versus it's just so pervasive encryption versus being able to manage the networks in a reasonable fashion and how to um, manage that discussion.

Speaker 1:          38:02          I don't have definitive answers to either one of those questions. The questions are very well formed when when a data center says, I want to be able to see what you're doing, I want to be able to see what people are doing or, or some actresses, I want to be able to see what you're doing. That is the fundamental tension. Who is, who is responsible for protecting me? If I'm talking to you and I trust you and you and I have an encrypted conversation, I don't want a third party looking at what we're doing now am messing up their system. Well that's an issue that they have to police. Do they have to see exactly what I'm sending to see whether they're messing up the situation? If I think you may be attacking me, then Indian encryption is the whole wrong idea. I mean, I can explain, I explained this, uh, by a real world analogy, if you're sending me letters, you probably assume that you don't want somebody opening those letters.

Speaker 1:          38:57          But if you think they're full of anthrax, then all of a sudden it's, oh, I do want. So yeah. And I want them addressed in a hazmat suit and well trained and they know exactly how to deal with it. And that in fact is the tension between two of the fundamental security goals that you and I ought to be able to have a secure conversation if we trust each other. And I would be lovely to have a third party to protect me if I think you're going to attack me. And the transition there is not under the control of a third party. It should be my decision about whether I trust you or my decision about whether I would like a trusted third party protecting the transaction. Okay. So I don't want people unilaterally saying, my job is to, is to look at everything you're doing.

Speaker 1:          39:36          I want him to say, Hey, I want to, I want you to do something for you. I don't trust this person. Now the question of network management that's, that's come up again and again and again and I'm, I, I have to say I am reasonably not sympathetic to the more extreme arguments that say I have to be able to see everything you can do. So at management manage it. I think in particular what's going on in the mobile networks today where they're recoding the video and doing all this kind of stuff reflects the fact that we made some bad engineering decisions. And the, the incredible capacity we have in the wireline network is not matched by the capacity we have. It doesn't, you know, the wireless network, they're just capacity constrained. And so they say we have to engineer our way out of this. And because there is this barrier between what the application guys are prepared to do and what the network has to do, the system is, again, there are these protocol interfaces.

Speaker 1:          40:43          They have to say, well I have to fix these problems but I sort of have to fix them on my own. So I'm going to try to figure out what you're doing and trans coded and all this kind of thing. And the wireless guys for a long time I've been saying, you know, this layered model sucks because if we had better integration between what the application guys did and what the network did, then in fact the application guys could do a better job of helping us manage our network. But those are different firms and they may actually be in competition with each other. So in the end, there's a technical problem, which is a lack of standards to create cross layer of coordination. But there's also a tension between companies that in fact have Evers interests. And I don't believe we should sacrifice and to insecurity as a stop gap there. We should force people to solve the problem the right way, which is to say, let's build new protocols that go across layer that provides the transfer performance information across layers. This woman looks like she wants to mic back.

Speaker 4:          41:45          I saw her reaching out for it. Sorry. Yes, yes. I completely agree that one shouldn't sacrifice. Yeah.

Speaker 5:          41:53          Hm.

Speaker 4:          41:54          But there's a challenge both in it going the other direction. And also if we want to have protocols communicating between the applications to the network, then it becomes a trust but verify kind of challenge. And what information do you want to put in? Like with quick, there was a whole discussion about, you know, is it safe to expose a single bit of information that can be used to determine a round trip times, right? So there's a challenge of what information is, how do you agree on what information is safe to expose to the network and how does the network trust that information from the application when there's not a potentially cost or economic or other type of challenge to requesting as much as you want.

Speaker 1:          42:37          And that's uh, and that's a very tricky one because there's, there's no venue in which we could have that discussion today if you, if you go to the ITF. Yes. Although I, ETF is slowly shifting. They're incredibly uncomfortable having a conversation. Whose motivation is relates to, what am I call the industry structure?

Speaker 2:          43:04          Um, the,

Speaker 1:          43:09          do you disagree? I think there's some pieces that are shifting there. There are pieces that are shifting. I agree with that, but, but to have a conversation in which different actors with adverse interests get together and design a protocol is a, is a very tricky thing and need some very fair minded people who are sitting in the middle too basic to try to arbitrate this thing. And I don't think we have the structure to try and make that happen today. Um, I certainly ran into that. I've run into that over the years, multiple times.

Speaker 2:          43:39          Uh,

Speaker 1:          43:40          well let's take some other questions. I saw somebody with a hand over here.

Speaker 5:          43:43          So you mentioned, um, uh, the insecurity of BGP. Um, as an example of innocence where you have a problem where you would need multiple ISP to adopting technology to improve something. But if just one, if you have just one on board, it doesn't, yeah, it doesn't get you anywhere and so they don't want to be the first one. Do you, so in that case or anything similar, do you think there's any possibility of positive progress being made with like government regulation saying, Hey, buy by 2025 you all need to support SPG p if you're going to operate in America for instance. Or is that, is that a dead end?

Speaker 1:          44:23          The question is how much does, does it help if we do it domestically?

Speaker 1:          44:28          Uh, you know, if, if traffic from a Google site ends up in Russia because something, some packet which was either erroneous or malicious, it emerges from Nigeria. You know, what does, what does, I'd probably, the traffic was not originated in that Google traffic was not originating in the United States. It was originating get a Google cache somewhere in Europe. I don't know where I'm, on the other hand, you could say at least we could secure the domestic experience and maybe when people go overseas they should understand that it's going to get worse. I think, well, let me, let me give you an analogy. Uh, when we, when we came to understand that there were certain certificate authorities that were not trustworthy. I think the Chinese a subsidiary that was issuing fake certificates saying the Google's over here in Facebook's over here, you can't, you can't wear the sovereign state of China.

Speaker 1:          45:22          We're going to do whatever we want. You know? And they don't necessarily say, and by the way, we don't like it very much, but the implication there is if we're going to attack Google, that's our sovereign, you know, what are we going to do? Okay. So what you guys proposed was certificate transparency and the idea behind certificate transparency is you can issue you, Mr China can issue any certificates you want, but you have to put it into the public log so that anybody can see it. And our browser won't honor that certificate unless it's also in the log. So you can lie, but you can't lie in private. And we're putting, using social discipline, which is actually a better way to try to discipline a trust space than technical tools. Okay. And some of the most interesting proposals to deal with BGP do not involve adding SBG p or something like this.

Speaker 1:          46:12          They involve various kinds of public logs, which if you choose to put something in, it will make your world better. If I check it. So, and it becomes voluntary, it's, you know, so, so I think, I think the way we're moving is probably not to have continuing fights over secure BGP, secure origin, PGP, all that stuff, but perhaps something that sits alongside it, which is a kind of a log system in which the, the actors that are interested in improving their security have an action they can take. That is to say it's in their interest. So we don't have this, this misaligned interests, but I think that's the way to make progress in this space. And I apologize to the sounds like trolling, but when you say public log to be in blockchain, no, they look at what Google has done with certificate transparency. It is not blockchain.

Speaker 1:          47:02          Google is saying, trust me. Actually they're not. They're saying trust. Any two people trust any two organizations, one of which is Google the, the certificate of the, the, the, the certificate transparency log. You have to write your, your, your assertion in either the figure of the room into two logs, one of which does not belong to one to one. It belongs to Google. So no, it doesn't not have to be blockchain. Blockchain to me in almost all cases is overkill. Whether you think it's a good idea at all. To me blockchain is a, is an example of somebody trying to design, I was talking about applications that have risky modalities. To me blockchain is an example of somebody trying to build a restricted application functionality into a system in which nobody has to trust anybody.

Speaker 1:          47:50          You know, I can do look at the basics. It's, it's like you're going to pay me money right now and you and I have to have no trust in each other whatsoever because we trust the mechanism. It's a purely technical solution to creating a trustworthy transaction into trust free space. And the real world doesn't usually work that way. You know, the, the world actually works much more efficiently because it's willing to make a few trust assumptions. And I dunno what China thinks about Google, but most people are willing to believe that the, that the certificate transparency log that Google runs, which in fact is blockchain in the sense that it's forward change. You can't go back and change things. It's not a literally a block chain, but it's a for retaining protocol and it's done. The, by the way, the reason Google did that is to protect themselves.

Speaker 1:          48:39          That is to say somebody could come to Google with a court order or a, or a, or a small nuke and say, I want you to go in and change that entry. They can't do it in a way that can't be seen, that can't fake an entry, even if they're being coerced. So the structure of the thing protects them from coercion. And I think that was actually more important in engineering decision then. Then Google is not trustworthy, but that, but that makes them more trustworthy because look, they say, you know, we can't even be coerced into changing the century. So it's blockchain ish, but it's certainly not. It's certainly not a zero trust blog team. Leeza.