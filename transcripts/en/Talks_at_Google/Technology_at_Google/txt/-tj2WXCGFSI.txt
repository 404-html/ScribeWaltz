Speaker 1:          00:05          Mitchel resnick is a professor of learning research at the MIT media lab where he develops new technologies and activities to engage people, especially children and creative learning experiences. His research team called the lifelong kindergarten group develops the scratch programming software and online community, the world's largest coding platform for kids. His group also collaborates with the Lego company and the development of new educational ideas and products including Lego Mindstorms, robotics kits, Mitchell cofounded, the computer clubhouse project and international network of a hundred after school centers where youth from low income communities learn to express themselves creatively with new technologies. Mitchell and the scratch team have partnered with Google and google.org to increase youth coding efforts through projects like cs, fairest, Google's CS curriculum for nine to 14 year olds and Blakley, which makes app development more accessible. On a personal note, I worked with Mitchell to develop scratch and traveled around the world doing scratch workshops with children and educators.

Speaker 1:          01:17          I remember how exciting it was for kids to build projects, bringing their creations to life and how enabling and empowering these tools can be for those who might not otherwise have found themselves coding. Working with Mitchell and the scratch team helped me internalize that coding did not need to be an exclusive skill restricted to engineers, but rather a tool to enable anyone to creatively express themselves or to tackle personally meaningful projects. Mitchell's passion for people, education and empowerment has inspired me and countless others and I'm excited to introduce him to speak with you all today.

Speaker 2:          02:03          Yeah,

Speaker 3:          02:06          great. Well, thanks so much, Tami. It's great to be talking here at Google without a scratch continues to grow. We're forming stronger and stronger collaboration with Google ads will be mentioning in the talk, so it's great to be here and to talk with you and to share some of the work we're doing now and looking ahead to some of the things just talking to work on May, their projects in collaboration with people here at Google. Uh, we've had lots of different ways. We've also been very fortunate to be able to have Phil from Google who then come and work with us. I'm here with my colleague Tim Pekin, Fernando who we stole from Google twice. She came to work with us and visit student, went back to Google and then recently came back and started working with us. There's been lots of flow back and forth about people add ideas and it's been great to have the history with Tommy.

Speaker 3:          02:48          Uh, so I even went back into the archives and found from scratch was launched in 2007 10 years ago. This was the scratch team and you can see myself there and there's Tommy as an MIT. She was finishing up at MIT at the time, I think shortly after this, then started at Google. So it's great to reconnect and be able to have continued through the years to continue to share ideas. Um, since time he left the scratch team in 2007 scratched, it continued to grow and grow. It's like, you know, over the last decade, scratches really groans where there's the number of people joining the scratch online community. To this past year there were 8 million young people who registered in the scratch online community and you can just say, oh, it's been growing and growing over the years. But I think for us what's most important is not just the number of people involved but to creativity expressed by them and the way this is really transforming their lives and the way that, that they can create things and express themselves.

Speaker 3:          03:45          So I want to start with the story of one of those millions of young people just to give a sense of what the experience is like for young people when they joined the scratch community. Uh, citizen, a story about a young person, everyone starts with the username. This is someone whose username was Ypsi and Ypsi described, you know, an empty was growing up. One of their favorite things to do was drawing and they love to draw things. And if they got started with scratch, we, one of the empties friends explained that scratch was a way to make your drawings come alive. And that was really intriguing for epsy. CFC tried out scratch and this was one of the first projects that they worked on and scratch. And what I like about this, as you can see, it's ipsy is drawing and just has a little bit of animation.

Speaker 3:          04:30          You see the ears of wiggling in, the eyes are moving. Uh, and you can almost see here Ypsi starting with something that they're comfortable with and like dipping their toe in the water to try something new. So this is the scratch programming, you know, for those who haven't seen it with scratch, you build up programs by stacking together graphical programming blocks. This was one of [inaudible] first, you know, programs and project as a way to start exploring to testing something new and hips. He found that they really enjoyed working on these types of projects. Just started spending more time on scratch a little while later. This is a project you really got ipsy known in the community. You can see if these projects got more and more sophisticated. This is a project that ft worked on called lemonade time. And in this project you can use the Arrow keys to move the odder and is the arm moves around the otter, gets tips from different animals.

Speaker 3:          05:21          That daughter comes across the bird, the frog. And the goal is to be able to get all the ingredients to make lemonade is yet to get the ideas for, get instructions and tips on where to get the water, the lemons, the sugar to make lemonade. So Mc put this in the online community and it became really popular. So if you go to the online community, you can still see this. This is the page for lemonade time. And you can see it was viewed 17,000 times. Uh, it was loved close to 2000 times. Uh, it was remixed 88 times because in scratch anybody can take a project and then make modifications to it. Changing the images, changing the code, it's all sort of an open source culture around scratch. Everything that is shared is covered by creative Commons. So as long as you give credit, you can remix other people's projects.

Speaker 3:          06:08          So 88 people made remix projects, alumnae time, nearly 2000 people, 1,830 people gave comments giving suggestions or feedback or encouragement. And you can tell that IPCC was listening to these comments and reading them carefully because if you're look in the instructions here, it says edit due to popular demand. The otter walks a little faster now. So like any good designer, it's easy, you know, listening to the audience and making changes based on what comes across. A lot of the comments were about MCS artwork. People really liked ipsy artwork and several people said, we'd love to see more of your artwork, can you share more of your artwork? So ipsy started putting up some projects like this one branded as [inaudible] studio and it's a collection of different artwork. Did Mc sharing with the rest of the community and hits the road? You can edit them as much as you want, but you must credit me if you use any of these sprites spread to the objects and scratch this assigned that if she was learning how to be a good member of the online community and sort of understanding this idea of sharing, we under creative Commons, and this was definitely an evolution for epsy as it is for many members of the community.

Speaker 3:          07:18          At first, IPCC was upset when people were taking their projects and, and remix in them or using them in different ways or taking characters feeling. That's my character. They shouldn't be able to do it. But over time, if she came to recognize their, would everyone shares everyone benefits. And this time that you're our team, we are constant communication with people in the community. Try and tell people, understand this, but just a constant, uh, sometimes people would say learning how to share is even more difficult than learning how to code. Uh, so that's the real thing that I think a lot of kids are learning. But you know, if she was doing this, but then you know, is it continued to do, it came with all sorts of different things. Here was, you know, even a tutorial that ipsy did showing how to make scrolling backgrounds.

Speaker 3:          07:58          You saw it in the lemonade time that the background was scrolling behind the Otter Carter's, he moved the, or it's not so easy to make scrolling backgrounds and scratch back. We're trying to figure out how to make it easier, but it's not. So we'd say the ipsy figured out how to do it and they made this tutorial showing how to do it and then even commented the code showing people how to do it. This is again signed. It took us by surprise when we imagined that we would do tutorials and some teachers would do tutorials. What took us by surprise is that so many kids wanted to do tutorials. So if you go to the scratch website, there thousands and thousands of tutorials done by kids how to do scrolling, you know how to use variables, how to use the vector paint editor, how to make your projects popular on scratch.

Speaker 3:          08:41          You appeal. Do tutorials about everything. Uh, so just tell him do we just, people are using the community in so many different ways. So I think just by looking at these projects you can see what ipsy is taken away from participating in the community. And I think what we see is episodes is really developing as a creative thinker and we think that's more important today than ever before. For us it's not just about learning the coding skills, although clearly if you're looking at, you know, the scrolling back on MCS clearly learning some coding skills. But for us what's most important is that if c is really learned to think creatively and I think that's more important today than ever before. You know, we live in a world that's changing so quickly that we don't know exactly what skills kids will need in the future as they grow up.

Speaker 3:          09:22          But we know they're going to need to be able to come up with creative solutions to the unexpected things that confront cause they will be confronting all sorts of unexpected and new situations. And we think that's what's happening, you know, with with young people like [inaudible] is there to try to support that development of creative thinking. We developed scratch with four guiding principles of the, we call them the four p's of creative learning projects, passion, peers and play. So with everything we do, whether it's developing scratch or running a workshop or giving advice to parents about what toys to get for their kids, we're always guided by thinking about these four p's cause it's a good framework for thinking about how you can really help support creative thinking. So if you look at scratch, you can see that it really is, is aligned and guided by these four pieces of creative learning.

Speaker 3:          10:09          The first one project we saw, ipsy was just constantly making projects in the scratch website is based on projects as the core unit of sharing on scratch. There's 30 million project that kids have shared now might seem obvious if you look at scratches, say well of course they're working on projects, but that's not the way most kids learn to code. Go to most coding websites and kids are given a puzzle or a problem to solve, they get the answer and then they're moved on to the next puzzle or problem. And again, when I was 10 years old, I would have enjoyed doing that. Lots of kids enjoy doing it and you can learn some computational concepts that way. There's nothing wrong with that. But if you really want to develop as a creative thinker, it's not just a matter of learning how to solve a certain puzzle, but being able to do a project and with a project, I mean to start with your own idea, to develop, you know, some prototype with it, to show it to others, to experiment with it, to get feedback, keep revising it, to have a way of expressing your ideas to the world.

Speaker 3:          11:04          So with a project kids, they aren't just developing their thinking but also developing their voice. You know, coming up with an idea and expressing their ideas to the world. So we really tried to see scratches. It's like a type of writing. The same way when you learn to write is not just to get a task done, but the way of expressing your ideas. We see scratch the same way as kids work on projects and the second P of passion, I think we all know that we're all willing to work longer and harder and persist in the face of challenges when we're working on something we really care deeply about. Uh, so for us it's so important to give kids the opportunity to work on things they really care about. So as we were developing scratch, we want to make sure that you could do many different things with that because we know different kids have different interests and different passions and we want to make sure to align with the interests of all different.

Speaker 3:          11:53          I mean some people suggested, well, why don't you do it? All you do is to make games. Kids like games. And it's true. Lots of kids like games board about kids who don't like games, then they wouldn't be interested in it. We want to make sure that kids can make gains, but they can also make animations and simulations and and interactive stories because different kids have different interests. We want to let all kids build on things they really wanted to want to do. And you can see that in Ypsi his case, you know, we're ipsy with you was drunk. It was building upon their interest in drawing and use that as a way to get into coding with peers. We saw from the beginning that we really wanted to make sure that learning to code was a social experience. The too often when people think of coding, they think of the individual sitting, you know, by themselves looking at the screen.

Speaker 3:          12:38          And of course he spent some time doing that and you know, sometimes that's an important part of the process. We know that a lot of learning happens in collaboration with others. So when we launched scratch, we launched the online community at the same time integrated with the programming language. And to us that was really important. And a lot of people, you know, they weren't quite sure what we were doing because what, why do you have to have an online community with a programming language? For us, the online committee, both served as a source of it was, uh, it was a way to have an audience for what you created because when you create something, you want to be able to share ideas with others and get feedback. Cause we saw ipsy getting feedback. It also serves as a source of inspiration. You can look at the online community and you see again, millions of projects that gives you ideas of what you want to create.

Speaker 3:          13:25          So we want to have a way that we have kids connect with each other. They would learn with and from one another both to get feedback and inspiration from one another. And then finally play. And I saw him was called, played the most misunderstood of the p's because people here playing there just think, oh it's about laughing, having fun. And there's nothing wrong with laughing and having fun, but we think of play in a different way. We see it almost as an attitude or an approach to the things you're doing. When you have a playful approach, it means you're willing to take risks to try new things, to test the boundaries, to experiment. Uh, and we want to make sure that was possible. So we've really set up scratch. So it's easy to put things together, take them apart. You can make pro, you know, your programs.

Speaker 3:          14:09          Something like building with Lego bricks, lego bricks or so Tinkerbell and you can play with them, trying to things, take it apart, try something else, continually iterate. And we want to make scratch really easy to iterate. He could keep experimenting. So that's what we did and try to make it. And we also in moderating the community to make sure the community is, uh, a type of place where you feel safe, experimenting, trying new things. So these four p's of guided, you know, the things that we're doing. And from this, I think this really underlies your house. Why scratch has been growing over the last 10 years and really has, you know, grown, you know, beyond what we would have imagined. So last year there were 200 million unique visitors to scratch. Then. Not all the, we're creating projects about 10% about 20 people created projects, but people just visiting and trying out scratch.

Speaker 3:          14:55          It's things is about 200 million unique visitors, you know, every country in the world from the beginning we want to translate to May different languages. So it's easy to make the blocks switch to whatever language you want and even if you see someone else's project to project that was done in New York, a child and Tokyo could look at it and switch the blocks to two Japanese make a change to it and a child in Buenos Aires could then change the blocks to Spanish to facilitates collaboration by everyone change it to their own language. A 45% female, hundred percent. Everything is free that the software is free, the community is free. It's also open source. So we've really tried to build it. We'll all the development is done an open source way where, and we have people helping out. We've been really appreciative. Bunch of people at Google have helped out.

Speaker 3:          15:41          We did an initiative last year through Google serve and people helped out. We hope as we continue to develop others helping us out and every day there's 150,000 new projects that kids are creating in the scratch community, uh, who's creating them. This is a histogram of the ages that people join the community, the peaks at age 12 and this pretty much hits what we'd aim for when we developed scratch. We aimed at age eight to 16 and that's roughly where, you know, the bulk of the people are after scratch came out, we did another version called scratch junior, which is her ages five to seven at the lower end. One thing that took us by surprise as there's more use at the higher end than we imagined because even though we designed for eight to 16 is getting used in a growing number of introductory computer science courses at universities.

Speaker 3:          16:27          Uh, sometimes for a whole semester, sometimes just to get started. Like at Harvard, they use it as the first week of the introductory computer science course there, see us fifth day. And they found that when they shifted over to doing scratch in the beginning, the number of people dropping the course, we went down dramatically, especially among women. They used to have a huge dropout rates of women and at least they speculated with scratch. People were able to have a success very quickly and get a sense of what's possible and what type of things they might do with scratch. And then after it's in that course, they do shift other things. Big Scratch serves as a foundation for getting people started, you know, within the use of scratch. When it started 10 years ago, a lot of it was being used in homes and afterschool centers.

Speaker 3:          17:10          Right now the fastest growth is some schools. There's a lot of you, and that's partly is, it's a cultural phenomena that more schools are getting injured in introducing coding. So scratch is being used and in many different schools here in New York, it's, it's, it's one of the, you know, the language that's really being used, especially in elementary schools, uh, with the different efforts and cs for all efforts is really supporting the use of scratch. Going out to schools. I wanted to give you some sense of how it's being used in schools. So show a few examples of things that we've seen in different schools. The first one is from India. This one is from Bangalore where this was, I think it was a 13 year old. It was in the class where they were studying the layers of the earth as the final project. They were making scratch projects about what they learned to share, what they learned about the layers of the earth.

Speaker 3:          17:59          So the teacher explained to us that this dude, he's speaking his native language of Canada, and he was explaining the different layers that are inhibiting. He was really excited about was the fact that things are moving aside to earth. So explain things are moving and you could see it gets down to the water table or things are moving and put some sound effects for the water table. So it's again, a way of sharing. So this was a case where scratch was actually introduced to school and everyone was using gut. Sometimes kids learn scratch at home, but bring it into school. That's the nest example. This is from a a middle school in the United States where they were studying in a social studies class. Robin Rapa Nui, Easter Island, the island off of South America. And this dude did something sorta like Sim city, but Sim Rapa Nui, he had learned about the economy and the culture.

Speaker 3:          18:50          And you know, fishing is important to the economy. So to survive there you have to cut down a branch to make a fishing rod and go fishing. But if you take down too many branches to God, happiness goes down because there's a certain way that they respected environment. So it's a way for him to show what he had learned, but also to help other people learn about rapid noway. I'll share one more example from elementary school. And this is an elementary school where I really like these examples where it's used across the curriculum. So this elementary school teacher introduced to scratch. And then the same way that if you learn about learn how to write, use writing and all of your classes, whether it's history or science, your use, your writing everywhere they use scratch everywhere. In this claim. This is an example from a book report when they read Charlotte's web that this was one of the student's book reports and you can see they're using language, you know, they'd read the book and they're writing about the book.

Speaker 3:          19:40          One thing that caught my attention with this example is notice how the pig gets smaller as it goes further away. So this was also using what they learned in art class about perspective. That to make sense, look further way you make it smaller. Then if you look at the code in order to make it smaller, what the student not to do is multiply it by a fraction, multiply the size by a fraction less than one repeatedly to make it smaller and smaller and smaller. So as learning mathematical ideas while doing that. But again, using mathematic ideas with a purpose. So there's a reason, you know, that they knew why they were learning multiplying fractions. Most kids, you're talking multiplying fractions and you think, why am I learning this? Uh, but here there were learning, multiplying fractions for a purpose. They, there was a reason for doing it and they can make good use of it here.

Speaker 3:          20:25          Uh, actually right before this talk it, before this talk, I was talking to Max and it was really happy he came. Uh, he was telling me about it in his third grade. They're making games where they had to show some things about rocks and minerals to let other people learn something they didn't know before about rocks and minerals. So that's another great example. I think there was just recently he was doing that and that's a way of sort of using scratch as a way communicating and sharing with one another. So I think we see more and more of that happening. Um, so in our collaboration with Google, we also are doing a lot aiming at schools. You know, with Google cs first program, it's an afterschool initiative increasing being focused on school. So we see that as a great collaboration and we're really pleased to see us first got started.

Speaker 3:          21:06          Uh, they chose scratches, the primary programming language. So we've worked with them and it's been great to see the way that they have built all sorts of resources around scratch. So those types of collaborations are really important for us because we have a relatively small team, we have language out there, but the cs first team is the great job of creating all sorts of resources around it and supporting both the mentors who are facilitators running these sessions and also developing the materials for kids to use as well. So we really looked forward to doing that. Let me give one more extended example of one where, and we see this happening a lot, where of someone who starts to learn scratch in school but then continues doing things outside of school and that also makes us really happy. Actually I was at an event in New York City actually is doing cs ed week in December.

Speaker 3:          21:52          I was down here and it was this, the Cs for all people had an event that I went to and there I met a couple of high school students and it was talking to them and they, they weren't using scratch anymore. They used an elementary and middle school. But what I really liked it, they said what they liked about scratch was they said it was the one thing they did at school. They wanted to continue to do on their own afterschool. And for us, I think everything should be that way. So everything we developed, we try to make it the kids would want to do on their own. And that was the case there. This is another member of the scratch community. Uh, this bubble one oh three is her username. Um, she's from South Africa and she first learned about scratch in school where this is one of the projects.

Speaker 3:          22:30          If you go to her website, to the profile, you can see the water cycle on. It shows how, you know, the, the, you know, the water from the, from the lake or the ocean goes up and makes a cloud and it goes and it rains. So it's talking about the water cycle. But she learned that she then started making games on, around, this is a fabulous farming games that she made. She made a presentation about South Africa. She was really proud of South Africa and she went to share her pride with other people in the community and she also made tutorials like ipsy dead and this one dude that bubbling at three had used variables and she was excited about what you could do with variables and wanting to share that with others. But the project that really caught our attention and a lot of people's attention was a project that she worked on called colour divide. And this was a collaborative project that she did with five or six other scratchers. They were like in three or four other countries. So they started exchanging ideas in the online community and bubbling a three. It started this role playing game with others and then decided to make a trailer for a movie that they wanted to make about color divide. So I'll show you now that a one minute clip, this trailer that they did, and this is an five different scratchers working together to put together the trailer for color divide,

Speaker 4:          23:48          land of color and magic. Every child at the age of 12 faces the test to determine their magical strength and their color rank, but all is not as it seems. This test means everything to me. I called today, what if I don't get a color? I don't want to call it anyways. I'm going to fail the test vanish. Haven't you ever wondered what's out there? I mean, there's gotta be something I got to close to the gates and I solve something. Avoid hate living in this place. The magicians are dictators. They told my family, they destroyed, they destroyed my fruit and bird together. We'll fail this test again. Minute mean.

Speaker 3:          24:46          I think one thing that really struck us with this is the fact, obviously a big programming after they been a lot of time doing this, but you can really see that for Bubba one of three, there was sort of a deep meaning behind this. You know, talking about growing up in South Africa, turn about this color divide and everyone being given a color and being ranked by your color. So we then talked to her and she says, growing up, I've definitely seen the scars that apartheid is left in my country and the people. I'm really exploring that through the different characters that are part of this story, and again we see this over and over. A lot of the kids are using scratch or oftentimes is they go into their teen years, they're spoiling things about throwing identity, things about the community around them. So you see them tackling issues that are deeply important to them.

Speaker 3:          25:28          Of course there's a lot of things from scratch, they're funny animations, but it also is an opportunity for kids to really develop their own ideas, to share ideas with others as use it as a way to, to sort through important ideas and also to sort through ways of engaging with the design process and the creative process. So bub, one of the three also said, she said because of scratch, I've become more confident to try new things, to express myself. I'm more comfortable with taking risks and making mistakes. Now when something goes wrong, I see it as an opportunity to learn something new. And again, that's what we were hoping for with scratch. When I talked about the importance of play and are my, does a playful approach, a willingness to take risks, a willingness to things go wrong, have been then an ability to try to iterate and to and to debug things when things go wrong to to try new things and that's exactly what she was getting out of this.

Speaker 3:          26:17          So really happy. We hear scratches talk this way and bubbling it. Three also talked about the importance of the online community for her. She said, I've been constantly blown away by the kinds of support and collaboration and sharing that happens in the community. That's one of the main things that keeps me coming back to scratch every day and we see that over and over that for a lot of kids, they come to scratch to create a project. They stay for the community, they connect with other people, the way they share with each other. In this case, collaborating with others, you'll on, on projects interacting and getting inspired by others. And I think it's not an accident that this example happens to come from a young woman in the community. Uh, just last night, this is, I've done my freshest data. Just last night, one of the graduate students in our group, a shrew to Darwin was talking about showing some of the latest data should look at about some gender differences on scratch.

Speaker 3:          27:10          As I mentioned, it's about 45% female, the scratch population. Uh, one thing we'd already seen was that if you look at the number of projects that people create, the, you know, the boys and girls from scratch, each crate, roughly the same number of projects for true to is just looking at the data and saw the following as far as on the social side of scratch. We, if you'd like a project, you can give it a love. And if you look in the left hand side here, you see that, that uh, the female participants in scratch are much more likely, they get 50% more loves than others. So on average each be more participant gives 12 loves only eight for male participants as far as giving comments and other projects, female participants, 28 male, 16 almost twice. And for me I found this really striking because we'd already seen and look into community.

Speaker 3:          28:01          The getting social feedback on the community is the most important determinant about whether someone stays on scratch. So when someone puts up a project on scratch, how quickly they receive some social feedback, a comment or love has a huge influence on where they make a second project. So the fact that the young women on scratch are doing much more comforting and loving really shows the important role they're playing to help continue the people working on scratch. So it, and it really shows how the creative side and the community side scratch really are tightly linked with one another. So the sign that we continue to look at, and I think right now we're sitting on top of this huge trove of data cause you know, there's 30 million projects on scratch and you know, we've saved everything. So we're still sorting through it to try to learn more about the creative process and the coding process.

Speaker 3:          28:47          As we sort through this on scratch. I want to end by giving some examples, looking ahead about the next generation of scratch they're working on. So we're now working on a third generation of scratch called scratch 3.0 that will launch this this August. The first generation of scratch that came out in 2007 was a downloadable I applications you did low used locally and then you could share on the website where the community was. If he saw something in the community, they looked interesting. Got to download it to see the code and, and play with the code. The second generation of scratch in 2013 was all in the browser so you could start offering in the browser. And that really led to a real growth and scratch it really re uh, it made it removed a lot of the friction between creating and sharing. So you could sort of see things in the community, go inside right away, see the right online, see the, see the code, manipulate the code, try different things.

Speaker 3:          29:45          So it really opened up to really lead to some of the recent growth and scratch the third generation are coming out. Now. One of the motivations for it is to make it much better suited for mobile. You know, back in around 2010 or so for Scott, as we started working on Scotch, Scotch do porno, we made the decision to implement it in Flash, which at the time seemed like a good decision. Right now it's not looking so good. So we really need to be moving into a new infrastructure. So scratch the porno, be all html five based, be much more designed with mobile in mind. So that's one thing that we want to do and we started need to do, but we also want to make it much more of a, a basic, a platform that can be extended to all sorts of different ways.

Speaker 3:          30:27          And this is something, again, we've been done a lot collaboration with Google for the programming language itself. We've been working with the blockly team and building on the infrastructure of blockly from here. Uh, but then using some of the design ideas we've had from scratch. We had a great collaboration working together on the new set of blocks that we were using for this. And these blocks again, or open source as blocked the has been. So in addition to using his box and our scratch 3.0 we want to have this as a standard, you know, grammar for block based program that anybody can embed in their own apps or toys or whatever products they have. So we were trying to make this service standard programming grammar for everybody, but then we'll also use it inside our own version of scratch. The scratch 3.0 another way in which we're extending scratch and make it more modular is make it much easier to extend scratch.

Speaker 3:          31:20          So in addition to the core capabilities of scratch, we're having a whole, what we call the extension mechanism to make it easy for people to add new scratch blocks. So of course we want make, we want to have it so that we can extend scratch. We also want to let everybody else extends scratch as well. So now this is not an essay. Most kids want to do this, but there's more developers can add their own scratch blocks. And there's a way down here just in the interface. If you just want to add an extension, you can go down to the bottom left corner, add an extension. Let me give you some examples of how to do it. So I'm actually going to run some things live here from uh, from the prototype of scratch. Three Point Oh oh

Speaker 3:          32:08          sorry. There it is. So this is one, this is using the extension with the microbead. A lot of you are probably familiar with the microwave is very low cost to interface device. Uh, and so here's the board is very, you know, it's signed it. If the BBC helped in developing this and they'd give to every school child in England is now spending the United States only costs like, you know, less than $20 to get the board. Uh, and what we're doing now is so we can put, do sign like this and notice as I, so here it's using the, these extra blocks as just saying this as an accelerometer. So when it's tilted,

Speaker 3:          32:45          it's both making the flowers spin and then it has, it should have a little smiley face shows up on here. She can see that the code, they're shut down. We just want make it easy for anybody to do it. Again, we work with the micro team, but we want to let anybody who's making new types of hardware be able to extend it. So we're working with the Lego company, so as they add new robotics kits, there'll be using scratch and just having extensions to the both youth, the scratch blocks and their own apps. But also we'll have extensions in the scratch 3.0 where you can control your lego robotics. We're also working on some of our own hardware extensions. So this is one the, right now we're calling this scratch bit. It's in development. Uh, one of the graduate students, the group Craig Hanning is working with uh, others including Andrew's Lewinsky was leading the whole scratch 3.0 development process and a bunch of other people on developing the scratch bed. Do this. So here actually my put this little screen,

Speaker 3:          33:44          so hopefully if I, so this also has an accelerometer and I'm trying to get the, the balloons and the tacos and I get different points. I get two points for every talk on one point for every balloon. And if I want things to get out of the way, I think by cover I thought there was a point that sound, but maybe that's not fair because he has trying to make it so that it's very easy to take different types of physical devices. You'll like this. And with different sensors, accelerometers, light sensors would ever, you know, buttons, knobs and be able to wireless. They come here, there's all Bluetooth, you know, communication. In addition to extend it through hardware, we're not extend things from the, uh, either through a web based or saw or software side. Here's an example. This is already in scratch because the spirit of the type of things we're doing, this is one that uses the camera and notice, oops, it should be as in the camera. Oh did I hit the wrong one? Let me try it one more time and see if,

Speaker 3:          35:01          thank you. So here you see the mini figs are falling. But where I can do with my head, I knew, I think a big part of what we end up doing in our group, if we see inside we can take a look and this is the key block. There are very few new blocks. This one just says if there's video motion on this sprite as grabbed by the threshold, do something. So obviously there's a huge amount of information coming from the camera. I think a big thing what we do is how can we take all that information, put it into the right building blocks. They're like kids use it in a meaningful way. So we just did it. So you see how much motion there is on your sprite. So in this case, if the, if the mini fig is falling, it sees motion in the background, it then you know, jumps upwards. Uh, we also have with you can see what direction it is. So you could, you could also do it by Swat and one direction. It can move one way or the other way. But just a few simple primitives is what we're doing. We're also in 3.0 we're extending this to do some things with the object detection. Uh, let me show one other thing that we're doing.

Speaker 3:          36:18          This is one that actually was just got added to the, uh, prototype this week. This is one of the ones that we're working with people at Google on Todd's a translate feature. So here's why. So these are just some of the extensions, the work on Nelson Division One is what I was just talking about. Here's a translate one and notice there's a new block. Let me make it bigger. So basically you can translate a word to any language where you could just have a translator to whatever the web browser is set too. So I can make this and they would translate things to whatever the person using the project, whatever their browser is set to be. If I just set it to a particular language. So I could just, you know, say Oh to French stuff, I translate French. Hello, it says mom, sure I can then put it inside a say blocked, have the cat say so normally lips. So there's the cat saying hello. But now if I just say translate hello to French for two seconds, now the cat will say bomb shore. And if instead of saying to French, I'd say translate hello to wherever the browsers, that tool then the cat will talk and whatever language the browser is set to. So these are things we're doing. So the, again, this is a great thing that came out of the collaboration. I'll show one more, uh, sort of a fake example cause this isn't actually running the prototype. So it's a little bit of a,

Speaker 5:          37:43          uh,

Speaker 3:          37:45          the trick just to show you what we're aiming for.

Speaker 3:          37:50          Again, we're working with Google on speech recognition blocks. So it's, we know that obviously communicating with speech is something that kids are interacting with all the, all the time now. But for us it's really important that kids don't just spend their time feeling, gets magical of talking to something. Uh, and then it talks back to we want kids to feel that they can create things this way too long. Kids spill, create their own speech interfaces. So we having some new blocks worth on the speech synthesis side where we'll actually say the words out loud when this synthesize voice, but also do some speech recognition. It's like, here's one where if you see the key part here, it says, when I hear, what time is it though, then speak it's party time. Uh, and then it will still play a certain sound. So if I say, what time is it? Oh, see you time.

Speaker 5:          38:42          Hey.

Speaker 3:          38:44          So again, our real hope is that again for let kids there to create their own type of speech interfaces and conversational interfaces with these blocks. And again, we're still trying to figure out the exact right building box St. The key thing is making sure that we preserve what's the core power of it, but make it simple enough and versatile enough that kids are Gmail to use in a may different ways. So just to wrap up, you know, we see lots of ways to scratch is going to continue to do that. We tough scratch, continue to get out to the world. And for us we really, we do want to say it as a new type of fluency that something that when we teach kids to write, it's not just a that they can use writing in their jobs. So though people do use writing in their jobs but so that they can express their ideas to the world.

Speaker 3:          39:29          And we see scratch the same way when I led all kids grub feeling they can use the powerful technology of their times in a way that they can express their voice, expressed their ideas to the world. And to do that we want to keep on that focus of projects, passion, peers and play. So there's always more new technologies, whether it's object recognition, speech recognition, speech synthesis. We want to keep integrating new technologies. But always in this framework of providing kids with creative learning experiences and leaving them in control. So it's not that just interacting with things but things where they can do it. Cause I think that's going to be the key to help kids grow up to become full and active contributors in tomorrow's Society. If you want to read more about this, I did just finish a book that is called lifelong kindergarten.

Speaker 3:          40:13          We used the metaphor of kindergarten was, I've been really inspired by the way kids learn in kindergarten. The idea of the four p's came from opposite observing kids, Kinsey kids in kindergarten. If you think that the class that kindergarten, uh, that uh, kids are building towers with blocks, making pictures with finger paints and crayons and the process, they learned important ideas. They build a tower, they'll learn about structures, develop a, but even more important, they learn about the creative process. You know, they learn how to put things together to experiment, to iterate, to often, and they leave kindergarten, they end up sitting in desks listening to lectures, filling out worksheets, and that doesn't provide them the opportunity to continue to develop as creative thinkers. So they really aren't getting prepared for what's needed in today's society. And to make matters worse, uh, you know, a lot of kindergartens today, you go in there and kids are drilling on math, flashcards and doing phonics worksheets, kindergarten becoming more like the rest of school.

Speaker 3:          41:07          And what we want to do and what I talked about in the book is to make the rest of school the rest of life more like kindergarten. And that really inspired us with scratch. So from kindergarten we got the four P's and inspired scratch. So the book tells you more about the underlying ideas for scratch that do it. I may just to end with one final thing. Uh, every year we do have an annual dinner in New York City. It's organized by the scratch foundation. Lisa, Brian's here is the executive director of the scratch foundation that helps, that helps support scratch. And this year, uh, we're, we, we honored two people each year and this year one of the two people are honoring is Maggie Johnson, you know, from Google. And you know, it's a great way that she serves as a champion for so many of these causes. So it's been great clarity with Maggie and others at Google and we have such admiration and respect for what she's doing. So we're honoring Maggie along with David Siegel, who's been a great partner. He leads a company here called two sigma is again a great champion for supporting kids and coding and creative thinking. David. But thank you very much. I'd be happy to take some questions now.

Speaker 2:          42:09          [inaudible]

Speaker 6:          42:15          hi there. Thanks so much for the presentation. Very exciting. Uh, I was wondering if you can clarify the associations between scratch blockly and a code.org or any other associations we may have heard about but are a little confusing at least to me.

Speaker 3:          42:28          Yeah. So here's, um, I'll go a little bit of history. So scratch got started around 2007 and there's some other people based on scratch, started working on other blocks related languages. And in fact, some of the other things that got done then inspired blocked the another MIT professor and Hal Ableson spend a sabbatical at Google, worked with others at Google and started the blockly project, uh, rock or at least he started app inventor where, which was making use of block light. So it's sort of using together some of these same block based programming ideas, the block who's being developed separately from scratch. But it was in the same spirit as we started work on scratch. 3.0 we decided to join forces cause he saw the each of us could gain from working together. Did we had lots of experience of how to make these blocks really, uh, work well with kids.

Speaker 3:          43:21          So we had a lot more experience working with kids with a block group, had a great experience and great expertise in making a great infrastructure for these blocks based languages. So we saw each at scientific gain from working with one another. So we've joined forces to basically the, our new version of, of Skratch blocks is building on top of block light. So our scratch and these are now on top of block. It's a fork off a block that block the continues to be developed and we're short of tape building on top of that and making it specialized, especially for kids. Uh, code.org which is a separate organization, has a separate site. This new focused on getting kids engaged with coding and CS education. They have used blockly and a lot of their activities do, they put a lot of activities online, uh, of their own, some of which use blockly.

Speaker 3:          44:08          So block that gets used by many other sites. Uh, code.org are also features, many other types of activities by others. So I've worked with scratch. Sometimes they'll get featured on the code.org site. So code.org is sort of this general site that has their own activities. Some of them based on block they but also they feature especially at Cs ed week, other coding activities. Hopefully I gave some sense. You all right. Thanks a lot for being here. Um, my previous job before I was here, it was as a k 12 math and coding teacher. And I use scratch in the classroom. But this was right around with 2.0 came out before you had a lot of the classroom management tools that I think you've had in the past few years. I, and I'm just curious, a scratch moves into a lot of classrooms as you noted with cs for all other programs.

Speaker 3:          44:51          I'm curious how you feel about, like you mentioned the projects on the one hand and sort of the flashcards and the drilling on the other hand, like how do you feel about scratch being sort of molded to fit into like a mandatory classroom environment where people are interested in, you know, defined learning metrics, seeing progress assessments and things like that. But it's a good question. Then I do think we want to make sure that scratch moves into schools, that what we, what we love most about scratch doesn't get squeezed out of it and I think there are ways of doing that, but so I think we're constantly working on and work with educators to feel what are the best ways of introducing scratch into classrooms and maintaining the spirit of scratch. One of my former students who's now a professor at Harvard Graduate School of Education Power and Brennan has done a great job of this cheese, made a curriculum called the creative computing curriculum guide that's based on scratch, but it's very new.

Speaker 3:          45:37          It's shown how to make use of it in classroom settings. So that's one example of how the of trying to take the scratch programming language but introduced in a way that we say say it's true the values but still is aligned with the needs of classrooms. So there are many others work on that as well. So I think scratch and other languages are getting introduced to many different ways. Uh, our hope is is to try to make sure that it gets out to the world in a way that stays true to those values. But there are tensions there. I think some of the tensions come up outpost to things that we care about most. I talked earlier about the importance of helping kids learn to think, create a flight. It's not easy to get a quantitative measure of how you've advanced in your creative thinking is much easier to get quantitative measure of.

Speaker 3:          46:21          How often do you use a conditional statements so you can look as long as projects and see they're using conditionals more and grade them based on that. Uh, we hope that that's not the way kids ends up being evaluated cause that'll sort of distort we think and what it's going to be most important. There'll be learning something that way. It's not stated. There is no value in that, but I think we want to make sure that kids continue to have this learning, not just the core computational concepts, but also design strategies and creative ways of thinking. So we constantly working with educators trying to feel the best way of doing that. It's an ongoing process. I think it would continue. A lot of people are continuing to work on it.

Speaker 7:          46:58          I have a question about the design of the scratch language. Um, I think in a lot of other languages, uh, some of those complicated things that you were talking about, like playing audio might be part of like an Sdk or a standard library or something, whereas a in scratch, maybe it's, those are more like keywords or blocks that are built into the language. So I was just wondering what you thought about that. Yeah,

Speaker 3:          47:21          well, we wanted like where as you started scratch, we want to have a relatively, we're going to take it easy for everyone to have sort of this consistent collection that was going to be used. Uh, and we were that there are too many different, you know, we too many different things. You have to go and search for different things. It was going to make them more challenging, propelled to get started. So we tried to figure out what were the core things we've thought was most important and there's a hundred or so core blocks and scratch. And we tried to think what are the things are gonna be most important for the way kids want to express themselves? Before we started scratch, uh, Tommy had mentioned, we worked, we had developed this network of afterschool centers called computer club houses for young people in low income communities.

Speaker 3:          48:00          And we saw the kids at these clubhouses, they wanted to create their own interactive stories and games and they loved manipulating media, but there weren't good tools to let them create their interactive stories and games. So we definitely had them in mind. So we want to make sure they were the right primitive building blocks to let you manipulate sound music, images, you know, photos, make it easy to bring in your own. Also to personalize that, to bring in your own voice, to bring in your own songs, bring your own images. So we put a priority on that to making our core set of things. And we found you could go pretty far with that. As you can see now we are having these extension. So we're trying to see how we can keep it that core set but still make it possible to extend in different ways.

Speaker 3:          48:42          There's still challenges that were, can we ought to think about, um, by having an online community. That's one reason we want to keep it consistent. So if you saw us on the online community, it was clear that, that you had all the tools to make it. So now if you see something, the online community that's using the micro bit you and have our microbead, what does that mean as it confusing? So we're trying to figure how to keep the community, uh, done in a way that you could filter out things that aren't relevant for you. So those are still things that we're trying to work through.

Speaker 5:          49:13          Uh,

Speaker 8:          49:14          you mentioned that you've worked a little bit with Lego and scratch and I was wondering if you'll, you guys were working on kind of bringing a scratch to Mindstorms and Yo, if you've thought about the differences between Lego's approach to programming environment where it's all image based and you have blocks that are just, um, pictures and your approach where you have blocks that have words on them and are like that. Yeah.

Speaker 3:          49:51          And there's also some other differences in the, the mice, the program lags that comes with mind storms, uh, Elsa use it, some different just programming paradigms as well. It's not just the visual of the icons versus words. It sort of grew out of a data flow tradition rather than the control flow tradition. So there's some differences in some of the ways that the languages are structured. We do, we continue to work closely with Lego. A lego is work on a next generation of Mindstorms. We're working closely with them and trying to no influence with some of the ways that they'll be doing this in the future. Obviously we are deeply committed to the scratch approach. I do see that we're to the scratch approach of the basic grammar, but for scratch junior we do use icons rather than words and we think in some situations partly based on age and party on other factors we think someone is using the icons can be fine if people haven't seen on scratch junior we use icons and use it horizontal. You snapped box together horizontally as opposed to vertically, but when you use the icons of makes more sense doing it that way. So we do see a place for both word based text based on the blocks and icons on the blocks based on different situations. So we're working together in fact on scratch 3.0 we're building on the same infrastructure. It'll be easier to switch back and forth between them and we think there's a role for both based on what age you're aiming for, the type of applications.

Speaker 8:          51:15          Can I just follow up? Do you have an idea of kind of what that age a switchover is between,

Speaker 3:          51:22          well, what we chose for like scratch junior, we'd say five to seven scratches eight and up. But it's not that they're hard boundaries. We're also still exploring I think on different devices as we do more things with coding on a mobile phones, we think there might be some bands, if you're doing small programs on phones, there might be some advantages for all ages. Starting with icon based blocks. We just doing small programs, if you're doing longer programs, going to text makes more sense. So I think we're still exploring some of the ways to go between them. It's not just age based. Thank you very much, Mitchell, you're, yeah, I'm happy to. We could just maybe call it then, but I'm happy to stay around people just come up and talk informally and maybe that makes sense.

Speaker 2:          52:09          [inaudible].