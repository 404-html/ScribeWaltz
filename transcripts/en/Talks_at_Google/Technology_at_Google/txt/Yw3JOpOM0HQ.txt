Speaker 1:          00:05          Hadi partovi is a tech entrepreneur, an investor, and the CEO of Education, nonprofit code.org. Born in Tehran, Iran. How they grew up during the Iran, Iraq war is high school, did not offer computer science classes. So he taught himself to code at home on a commodore 64 after immigrating to the United States. He has spent his summers working as a software engineer to help pay his way through that, uh, his college and high school and graduating from Harvard with a master's degree in computer science. How they pursue the Caribbean and technology, uh, companies like Microsoft word. He rose to the executory ranks. He founded two startups. The first one was a huge success and the second ad, the small failure. And now he invests in advisors, other technology startups. In 2013, Huddy and his twin brother Ali launched education nonprofit code.org we had, Heidi continues to lead full time as CEO could. Dot Org has established computer science classes in 20% of the u s classrooms created the most broadly used curriculum platform for k 12 computer science and launched the global hour of the code movement that has reached over a hundred million students. How'd he has served as an early advisor or investor at many things, startups including Facebook, Dropbox, Airbnb, and Uber. He currently serves on the board of directors of Exxon and convey, so please join me welcoming Hadi Partovi to speak for us. Thank you.

Speaker 2:          01:40          Our vision is that every student in every school should have the opportunity to learn computer science. I like probably many of you began learning on my own at home, which was how, you know, in the eighties or nineties, people started learning computer science. But in the 21st century, this is the field that everybody should have access to. Uh, I start my presentations by talking about why this is important. Uh, and most audiences have some inkling of why it's important. I would expect her Google, it's, it's not a very hard pitch to explain that people should learn computer science, but some of the statistics behind it still surprise people who just automatically believe computer science should be taught. There's three reasons for teaching computer science to students. One is for economic opportunity in their careers. The second is to give them a well rounded education. And the third is to help make school fun.

Speaker 2:          02:26          And I want to go into each of these in a little bit of depth. So talking about opportunity is the easiest case for teaching computer science. Uh, computing has become not only the fastest growing and highest peck paying sector of wages, but it's now become the largest sector of all new wages in the United States. Uh, and this is not just in California, in Washington, it's in every industry in every single state. Uh, this is a picture showing the breakdown of all new wages in the country in currently open jobs. So not people who are currently working, but the opportunity to get hired, looking at where the salaries are, the biggest sector is not computing. This hasn't always been the case. It's also the fastest growing slice of the pie. So it's uh, you know, as we hear about computing work, automating other jobs, this is the one part of the job pie that is actually growing and it's, it's gradually becoming a larger and larger slice of the Pie.

Speaker 2:          03:17          Uh, it's also the best paying, uh, area of, of work in the United States. In fact, the, this graph compares the lifetime earnings of a high school graduate versus a university graduate versus a university computer science graduate. Uh, the difference between the second two is almost as big as the first two. So congrats to all of you here who are computer science graduates, uh, to be in that third bucket. Um, but the jobs and career opportunities aren't the only reason to be teaching computer science. Uh, in the 21st century. Computer Science is foundational for every child regardless of what career they go into. Uh, the best example I make is when I was going through high school, every student would learn how the digestive system works, how a light bulb is turned on using electricity or that a squared plus B squared is c squared. In many cases these students aren't going to become, you know, electricians or mathematicians.

Speaker 2:          04:10          It's just part of learning how the world around us works and being well rounded. Uh, in today's age, understanding what an algorithm is or how the Internet works is equally foundational. These are things that students and adults use every single day and not having the most basic understanding leaves people out in the dark. I'm not the only person saying this. Taking back to one of my, uh, personal sort of role models over 20 years ago, Steve Jobs said computer science is a liberal art. It's something that everybody should learn, take a year in their life, one of the courses they take because it teaches you how to think. Ah, it's been 20 something years since he said that. And still the majority of America's schools don't offer a single course in computer science hat. Last year, President Obama also supported this call to action saying in the new economy, computer science is no longer an optional skill.

Speaker 2:          04:59          It's a basic skill. Uh, and again, the problem we're trying to solve is the majority of America schools, whether elementary, middle, or high schools don't offer any computer science courses at the other reason this is irrelevant and this is probably the one that is most personal to me. And there's a, it's harder to sort of make a case for is to help make school fun again. Uh, and what I say is, you know, most of you have left school a while back. If you look at today's students in school, they increasingly, it feels like they're being forced, fed to memorize stuff that doesn't really matter. Uh, you know, if you're the child of a single income ma, you know, sorry, a single parent who's like maybe working in a Mcdonald's and your other parent is working in a parking lot and nobody you knew went to college and then you're at school memorizing the capitals of countries you'll never visit or you know, the histories of something from hundreds of years ago.

Speaker 2:          05:52          It just doesn't relate, especially since most of the information you learned in school a could do for you. You know, you're learning long division in fourth grade and you have a calculator you know, easily that could do the same thing as what you're learning to do. Uh, so most kids don't find school very engaging. Most teachers also feel like it's this process where there's continuous testing and teaching to the test. The whole school system doesn't feel very fun. Meanwhile, computer science is Super Fun for today's kids. These are some examples of what students say about using code.org to learn computer science saying, I loved it purely and wholly. It was fun to do. I want to do that over and over again. I really enjoyed what I could do with it. I enjoyed the interactivity and how it felt to control it. It felt really satisfying.

Speaker 2:          06:36          I wish we could do that every day. That's something that's, and that's a middle school student in Idaho. That's something that no students says about most of school, pretty much ever. Uh, and so when teachers feel this, they automatically realize this is something slightly different than the other stuff they're teaching in the classroom. Uh, or, or a teacher from New York saying our students have asked to have an hour every week, which is again the type of demand you don't hear for most of the other courses in the school system. Um, this is from a teacher in Florida talking about AP computer science. His students saying, this is crazy fun. I'm pretty much going to tell all my friends to take this class. And that's kids in, in Florida talking about taking AP computer science that the students interest in computer science is the most important reason that our schools should be offering this.

Speaker 2:          07:20          Um, and then my, this is one of my favorites is a teacher saying that, you know, today's project was a slam dunk. Students came in right away and started talking about it before the bell rang. In fact, when I tried to start the class, the students that I was trying to quiet down, we're already talking about their project. Uh, we regularly hear about teachers using coding as the sort of candy in the classroom saying, you know, you, you can't do the coding until you finish your math homework or you know, kids not wanting to go to recess because they're so, so engaged doing computer science. Um, the now a national measure of this was actually done by a group that was trying to uh, understand how to get students more interested in biology. Uh, this biology survey went out to try and find out why aren't kids enjoying biology?

Speaker 2:          08:03          And they asked students what are the subjects they like the most? Uh, it turns out biology wasn't very high on the list. Uh, but computer science ended up being number three just behind art and basically music and dance. So art, music, dance. And then computer sciences is in the third category in terms of students most favorite subject to learn. Uh, which is awesome. Uh, but it then begs the question, if this leads to the best paying jobs in the country, the largest source of economic opportunity. And it's also among the top favorite things kids want to learn. Why aren't our schools teaching it? Uh, and that's basically the problem that code.org has been setting out to solve. Um, the examples, just this is probably easy for you to understand why computer science is fun, but these are examples of things students have created in elementary school classrooms, in middle school classrooms or in high school classrooms.

Speaker 2:          08:53          These are basically apps that kids make on the code.org platform. And what's exciting about it is for the kids, they're making something just like an art class. It's something they can take home or put on their phones and show their teachers or show their parents and friends. And yet at the same time to build these things, you need to learn about angles. You need to learn about velocity or acceleration concepts you learned in other classes, but in a much more creative way. Fundamentally, I asked for any of the kids entering school, especially if you envision somebody entering kindergarten this school year, they're going to be graduating from university in the year 2030 what are their career's going to look like? I used to say that unless you want to get a job flipping burgers or driving trucks, he should learn something about technology. It turns out there's now robots that flip burgers and trucks that drive themselves.

Speaker 2:          09:41          There's literally not a single career you can imagine in 2030 that's not going to be impacted somehow by technology and our schools should teach something about how that technology works between all the problems we have in America today, especially looking at what's happened on the political spectrum and how much Americans are concerned about opportunity and the American dream and the rich poor income divide and all these issues in our country. I believe if you think about our future, teaching computer science to our students is among the most important thing we can do for the children. For our children. And what's awesome about is it's also not politically charged. Like many of the other things we could do. This is something that everybody agrees with on both sides of the aisle. Now, unlike most nonprofits, we don't just talk about our idea as an opportunity or as a problem that we're trying to solve.

Speaker 2:          10:29          A that doesn't have results were extremely lucky to be working on something that has incredible results and has turned into a global teacher led movement, uh, with frankly stunning results for something working in education. When I started code.org, pretty much everybody told me, you know, you should start a summer camp or make an afterschool club or try to do something online. And what they were really saying, they weren't saying this, they were just implicitly thinking, don't try to change the public school system. I think people were just implicitly ignoring that. We have this trillion dollar a year system that has 50 million students in it that never changes. So let's figure out some end run way of teaching computer science outside of the school system. And we took the approach that the school system needs to modernize. This is the chance to do it. And what's enabled that has been the teachers that support this work.

Speaker 2:          11:18          Uh, this is a picture of all the teachers that love code.org had, I'm just kidding. It's a rock concert. Uh, but, uh, the reason I show this picture is the number of teachers that support code.org is literally a thousand times the number of people you see in that picture. It is truly a global movement in terms of teachers deciding they're going to teach computer science in their classrooms and they are really excited about it because for them, they're coming from what feels like a stodgy system that doesn't change and they're modernizing it as well. Um, and this movement began with something called an hour of code, asking teachers globally to just teach one hour of computer science. And that one hour has been enough not to learn anything other than to learn that you can teach computer science, even if you're a fourth grade teacher or a seventh grade English teacher and that your students, even though they come from an underprivileged background and are struggling with reading and writing can actually learn coding and, and create apps.

Speaker 2:          12:15          And that learning has then sparked the passion of hundreds of thousands of teachers, which then caught the attention of celebrities, CEO's, governors and presidents of over 13 different countries and is now driving lasting change globally. Uh, and what's great about this is that this has been a grassroots bottoms up movement. I'm sure you've seen her. I just showed pictures of presidents talking about the importance of this and we've had celebrities, tech leaders, so on, but the, but the strength of this movement has really been teachers in the classrooms deciding that this is something their students need. Um, this is both help change perceptions of computer science. It's also helped drive results as speaking about the perceptions. Uh, at this point, 90% of parents want their child's school to teach computer science. And this came from a Google sponsored pull that Gallup did. A 75% of Americans believe computer science is cool in a way that it wasn't 10 years ago.

Speaker 2:          13:08          Uh, so when I went to school, computer science was the nerdiest thing you could take. You can frankly didn't want to tell anybody that that's what you were spending your time on, just cause he'd immediately sink in the popularity ranks in middle school or high school. Uh, whereas now it's actually considered to be cool. In fact, 17 magazine had a cover story about how the cool girls are the ones that are learning to code, which is completely different than when I was going to school. At this point. The majority of parents and even the majority of teachers believe students should be required to learn computer science. Uh, and the majority of Americans rank it right after reading and writing and math, uh, among the top four most important subjects to be learning a. So everybody at this point believes that this should be taught. Now in terms of actual change in the education system, the impact we've had in four years is, is really frankly historic.

Speaker 2:          13:57          It has never happened before. Over 120 of the largest districts in the country have all embraced computer science and begun districtwide citywide rollouts, including New York, Los Angeles, Chicago, Miami, Las Vegas, Houston, Broward, San Francisco, Oakland at it where we live. Bellevue is also on the list. Uh, Seattle public schools is not, although almost every public school system around Seattle is. Uh, and we're working on Seattle, uh, and we'll, I'm sure we'll send, get there. Um, over 60,000 teachers have attended workshops to teach computer science. Uh, this is really important to point out because when people talk about how are we going to get our schools to teach computer science at the impossible way to do it is to try to get Google engineers to become full time teachers. Uh, or frankly any computer science professional. Trying to get them to take a pay cut from a tech, uh, you know, profession and go into schools is hard.

Speaker 2:          14:51          And more importantly, most Google engineers is probably wouldn't make great teachers. It's not easy to teach. Uh, and then you know, you, you don't need a Google level engineer to teach ninth grade computer science. We don't have surgeons teaching ninth grade biology either. We have science teachers doing it. Um, so, and the things code.org does our curriculum lowers the bar for what a teacher needs to know to teach computer science and then our training workshops bring the teachers up to that bar so they can then be an effective teacher in a classroom without ever having had a computer science background in many cases, not even having a science or math background. We have English teachers and social studies teachers now teaching Ap College Level Computer Science, uh, which is frankly a stunning accomplishment, uh, for the collective group that has worked on this. Um, at this point, 20% of all students in the country have begun coding on code.org, which is great.

Speaker 2:          15:43          And 31 states have either changed policy or begun work towards rolling out computer science at a statewide level as part of their curriculum. Uh, and this isn't just a, a national change, it's a global change. Uh, actually this slide is out of date. We're already at 16 countries. Uh, 16 countries have changed their new national curriculum and just the last four years to add computer science. Most of them have mandated computer science or computational thinking to be taught in primary school from grades k through eight. Uh, and there's more countries already lining up to do the same thing. So this level of change has, I don't believe ever happened in the world education system in terms of the speed of adopting of a new course. And this is really thanks to America's teachers more than anything else. Uh, you know, America doesn't lead in education.

Speaker 2:          16:32          Uh, most countries don't look at the u s education as the sort of like shiny example of something to follow. Uh, but we do lead a technology. This is the country that invented the personal computer, the Internet, the smartphones, social media, web search, a ecommerce, all of these things were invented in America. And so the countries of the world actually look to us for leadership in this field of education. And so what happens in America's classrooms is actually having much, much broader change than just our own country. Um, the work we're doing@code.org is not just building a movement. It's also building a platform. And by platform I mean like a coding online platform. Uh, so co co.org has now become one of the fastest spreading online learning platforms. Uh, we have roughly 10 or 20,000 students joining every day. We have between 10 or 20,000 teachers joining every month.

Speaker 2:          17:24          Uh, my personal sort of favorite sort of role model in the world of online learning is Khan Academy comparing ourselves to Khan Academy at four years old. We're twice the size Khan Academy was when they were six years old. Uh, which is a great measure and we're not competitive with Khan Academy. We teach a very different things. Uh, but as a measure of something that's basically worked its way into classrooms, we're doing fantastically well. Uh, and the reason is the stuff we do is designed to enable students and teachers to start coding and creating immediately without prior experience, without needing to install eclipse. Or some other thing on your computer and on any modern browser without even needing to know how to type or even knowing how to read and write so we can meet students at any level of experience. Even a preschool or kindergarten students can start coding.

Speaker 2:          18:14          Um, and all of this, the work that we've done is free and it's open source. And as a result of that has become the number one platform and curriculum for teaching computer science in k through 12 all around the world. Uh, I want to do some quick demos to give you a sense of the technology, but I want to see a quick show of hands. How many people here have seen coding on code.org before? All right, so I'm going to do two quick demos, but one of them will be short because you probably have seen it, some version of this before. So the first is our, one of our hour of code tutorials. And this just gives you a sense of why our curriculum is different than traditional curriculum. How the way we combine the ide, where you do the coding with the videos that teach you about it and the sort of instruction on what you're supposed to do. Um, the first thing is just the fact that we have star wars as one of the brands supporting us is pretty cool. Uh, the fact that we can have a video that has an opening sequence like this, uh, and this audience doesn't work.

Speaker 3:          19:14          MMM. Um,

Speaker 2:          19:16          so I'm not going to play for the video, but the video tutorials, we have basically how people like the crater of the star wars movie and all the women who actually played a role in making the star wars movie teach this tutorial just to emphasize the importance of women in computing. Uh, and then the code you need to write is to control the little robot. And you have ray, who's the, the heroine of the new movie telling you, you know, you need to write the code to get this little BB eight guy. Let me see if I can make this bigger. So you need to get BBA to get to that scrap metal. And this is a very simple problem. You just need to move them to steps to the right. These are the four types of commands he could do, which was very limited.

Speaker 2:          19:55          Uh, and his code right now is he can, when he runs, he moves, right one step and I'm going to just have him move up, which is not the right thing and then move down and then move right? Again, that was not very complicated, but for if you've never, ever done any coding before, that is so much more fun and easy than install visual studio. And then, you know, figuring out what sub routines you need to include and like what libraries you need and then compile and then how do you, what you need to do. And then it also shows you, this is the javascript for the code that you made. This, as many of you may know, is based on the open source blockly sub routines that uh, uh, the, the blockly source code that Google has helped us with. One thing I was also really exciting when we launched this tutorial was being to say that we were using intellectual property by Disney, open source code by Google funding, by Microsoft running on Amazon's web servers showcase in every apple store.

Speaker 2:          20:58          Uh, there's so few things that have this many otherwise competitors working together on one problem. Uh, and this tutorial has been done. I'm not going to walk through all 15 steps or the different puzzles you walk through, but after 15 steps in about 30 minutes, you can make your own game featuring r two d two getting chased by storm troopers are running after the storm troopers. You can write your own rules and then play it on your phone. Um, and these, these one hour tutorials are super fun. Uh, but we've built a complete ide for building much more complicated things. And I want to give you an example of how that works outside of, uh, sort of curriculum. So this here is our ID. That's called APP lab. Uh, it's over here. You can create an APP and I'm going to show you really quickly how it works. Um, so I'm gonna make my app, I'm first going to put a background color on the screen. So she was like a blue color. And then can I put a label here that says my drawing APP?

Speaker 4:          22:00          Okay,

Speaker 2:          22:04          can y'all see that?

Speaker 2:          22:07          And then I'm going to put a piece of texts, a text box here saying to, to ask somebody, what should we draw? I'm going to say enter a number of sides and I'll put a button to draw. I'm kind of rushing through this. It doesn't look very good, but okay, so we have a little app that if I click the draw button, it'll draw a shape. And so I need to attach some code to this so I can go into code mode. And then I can say on event when I get an event, and any of you are familiar with the document object model, know that this isn't the full document object model. There's no such thing as an on event call. Uh, but you know, I can say, you know, when the button is clicked, I can start writing some code. And so I need to figure out how many sides my shape needs to be.

Speaker 2:          22:52          So I'm going to set a variable to that sort of x will be the variable that keeps that uh, an x. We'll get the number of sides. So I need to get the text from this thing. So at the text for that is the text that's in text input one. So now we want to draw an x sided shape, uh, for that I'm going to need a for loop. So here's a four loop. And so as I'm doing this, you probably recognize what this looks like. Even though these are blocks, you can actually switch and see this in text mode. And this is basically you're typing in Java script seminar account. I goes from zero and it should go up to x. And so x times I want to draw a line at and we have turtle drawing commands to make this easy. So I can say move forward and I can drag blocks interior even if I don't want to type. So I'll move forward, let's say 50 pixels and then I'll turn right. And this will need to be 360 divided by x degrees to get to x sided shape. And so this is a very simple app. I can now run my app and say I want a five sided shape.

Speaker 4:          23:56          Yeah,

Speaker 2:          23:57          it should draw a Pentagon. So not super amazing, but it was relatively fast. I don't need to create an account, I don't need to install anything and I can share this and I can send it to my phone. This is probably the best part about this for students and the speed at which we can let you create something and then get it on your phone

Speaker 2:          24:20          is what really makes this magical for students. So this is, I basically set myself a text message and you probably can't see my phone, but just from the color you might be able to recognize it. It's the same thing with the little text box in Soma and basically does exactly that on your phone, uh, for prototyping in school. The other solutions for doing something like this takes so much effort at and this base, he shows by making coding easy, accessible, web based free. We've made it much, much easier for students and teachers to engage with us. And this is just like five minutes of showing what this looks like. We've made literally 400 hours worth of exercise and activities starting from kindergarten all the way through a high school AP computer science to make this stuff easier. The reason code.org has become so big is because we've lowered the bar so much for schools to engage in computer science.

Speaker 2:          25:09          Um, we act very small. We're a 60 person startup and our DNA is like a tech company. So we act small but we think really big. Um, and as a result of this shows that the growth of AP computer science in schools, which is the college board exam, which is basically the pinnacle of the computer science sort of a learning pathway. This current school year that just ended was our first time teaching AP computer science in schools. Uh, and that's basically what AP computer science looks like after the first year of code.org teaching the course. Uh, and since we care a lot about diversity, this is what the picture looks like for women in computer science and for underrepresented minorities in computer science. In both cases, we more than doubled participation in the AP program in just our very first year of teaching it next year.

Speaker 2:          25:56          I expect we will more than double it relative to where we were last year. Uh, yet again, uh, just because our growth this coming year is more than double our growth from last year. Uh, so the, the impact we're having in terms of the entire computer science pathways, not only getting students into try and computer science, but getting all the way to teaching basically college level computer science to kids in public schools. Uh, and I want to say something about diversity because you know, when, when I look around this room and when you look anywhere in the tech world, diversity is a problem. And that problem is partly because of the cultural issues in the workplace, issues that we all hear about. But a huge part of it is also what happens in the education pipeline that our education system has almost the exact same diversity challenges in computer science.

Speaker 2:          26:44          Traditionally computer science has been a 80% male dominated and more than 80% non basically white Asian or Indian dominated field in k through 12 as well as in university as well as in the workplace. The work code.org has been doing is in every school, particularly with a focus on urban and rural schools, which have the most underprivileged kids. And as a result of that, our students are very different from, uh, from what you see in the traditional workforce. So, uh, in our classrooms, the classrooms are 45% female. They're almost 50% underrepresented minorities. And something that people don't talk very much is how many of them are poor kids. 47% of them are kids who can't even afford lunch and they're learning coding and computer science. Uh, and if you look at our kids taking the AP exam, even passing the AP exam, there's similar numbers that are female percentage on the AP exam is lower.

Speaker 2:          27:38          But our percentage of minorities and basically a less affluent kids taking AP computer science is matching the, the entire country's diversity. This is a fantastic story for opportunity and diversity. It'll change what our workplaces look like in the tech industry and it's really giving a pathway to these kids who otherwise wouldn't have won. Uh, studies show that women are 10 times more likely to take a computer science if they studied in high school. Black and Hispanic kids are eight times more likely to study it in university if they take it in high school. And in fact, uh, black and Hispanic students are more interested in learning computer science then white students are, they're just less likely to have it in their schools. And as a result, they never tried in high school and then they never go into it to university, which is why the k through 12 system is where to make this change.

Speaker 2:          28:26          Um, in general, I believe the American dream is really a global ideal for opportunity for all. And every one of us is here where we are because we caught a break@somepointinourlivesandtheworkofcode.org is basically helping bring that level of opportunity to the kids who need it the most in America at schools. I think that's it. But I lastly wanted to close by thanking the very generous donors who support our work. Uh, you know, we, we wouldn't be anywhere. We are without the, the various corporations and individuals who support us. Google is one of our largest supporters. Uh, and we've been very lucky to have Google support since the very beginning. Uh, so, uh, thank you very much for your part of your work is helping feed co.org through the generous work that you do. Um, thank you very much.

Speaker 5:          29:12          Uh, please [inaudible].

Speaker 2:          29:18          Uh, I would like to ask [inaudible] to join us for the panel discussion. Thank you, honey.

Speaker 6:          29:23          All right. Um, I want to thank Heidi. Um, I think that is just one of the most inspirational, uh, uh, you know, real life stories. It's, it's amazing. I have the privilege of having worked for Heidi, uh, over a decade ago. And, uh, I was there when he started this and I am absolutely amazed at what he has accomplished and the level of depth and passion that you guys can see in how he's speaking about the subject. It's, it's really amazing to have a global impact in such a short amount of time. So thank you, Heidi. Thank you. Um, so, uh, first I'd like to start with, you know, why did you start code.org? Okay,

Speaker 7:          30:05          so this is actually an interesting thing, which I would say, um, I didn't start code.org thinking I want to change the world's education system, which would be a very arrogant thing to think. Uh, I just wanted to make a video. It's to say that computer science is important and I was at the time kind of unemployed and not really doing anything of value and just thought, what can I do that's useful with my time? Uh, I didn't make sort of a home movie. I kind of used all of my best connections from two decades of working in the tech industry. So I managed to get Bill Gates and Mark Zuckerberg and Jack Dorsey to participate in this video. So it was a pretty big affair, but it was just one video and I had no plans for what would be coming beyond the video. I thought I'd put out this great video that computer science is important in schools should teach it.

Speaker 7:          30:50          Uh, the video went viral, not only to get 10 million views, more importantly, 20,000 schools reached out and said, we want this. And that's what made me realize if 20,000 schools respond to one video, there's just a real interest in this. Um, but the, uh, the personal reason I got into it, it's just because of my life story of success in tech. Uh, but what I love telling people about this is really, you know, this did not start as a big plan or this flash of genius or anything. Uh, and considering that in four years, so much of the world education system has changed starting from this one little video. Anybody for me has really drilled home this idea that if you have a big dream, if you work hard at it, I'm an aim big, anything is possible. I think many people's ambitions, uh, are held back by their fear of trying for something. And sometimes if you aim extra high, you actually have a greater chance of succeeding because more people want to support you.

Speaker 6:          31:49          Thank you. Heidi. Phil, I know you were also involved in the early days. We'd love to hear your story.

Speaker 8:          31:56          I'd like to tell a little bit, um, um, because I hope that you all will will also join me in comport computed, uh, supporting cs education and uh, this is a potential area of growth for the Kirkland campus. So, uh, I too had worked with Hadi. I have always been super impressed by the way he approaches things, including the way he approached a CS education, which is, it's a nonprofit, but it really does work like a startup. And, um, he's been incredibly driven. So, um, initially my involvement was helping him launch the website around the video and start to establish connections with people. Um, and, um, that was just really incredibly rewarding to be able to help out a little bit for this. Um, I, I also felt a strong need to want to give back. I mean we, we've all been really lucky and for this country to continue to be successful or for Google to continue to be successful, we need everybody to have opportunities and do well.

Speaker 8:          33:00          Um, beyond that, I had the great fortune to work with code.org for a year helping them scale for hour of code. They'd been tremendously successful as such that they're scaling pressure on the website. So I helped them with some technical and team improvements to the site. And this is an example of how Google is really, really far sighted about this. They gave one of their engineers to, to help, um, a nonprofit that they support it, um, to, to succeed, not for short term profit concerns because they knew this was about making Google successful for the long term and about making society successful. Um, beyond that, starting in September, I'm joining edge edu. This is the organization within Google that supports both internal, uh, CS education, which you've probably seen in some of the classes if you've taken the machine learning bootcamp or something like that. They do that, but they also support external education. Uh, that includes the, the blockly framework that code.org uses a, that includes some of the funding efforts, um, as well as platforms that Google is building to help promote CS education in general. Um, so I, uh, there are already several, um, program managers and non engineers and Kirkland working on this. Um, I will be the first engineer. We do have an open head count. So if, if cs education is something you're excited about, a police talk with me.

Speaker 6:          34:33          All right, well thank you. Fell. Um, hi. I know you've made a pretty convincing case about this already, but I'd love to hear from you why you think all students need to learn to code.

Speaker 7:          34:44          So this is a question we get all the time. Um, usually with a more critical version of delivery, people regularly say, you know, why are we, why should we teach third graders how to code? Or, you know, not every kid is going to become a coder. And this is something that is often viewed as, you know, code.org is trying to get people into tech jobs or something like that. Uh, and I usually say we're not trying to get every kid to learn to code. We're trying to get every school to teach computer science, which is very different. Uh, computer science is much more broad than coding. W The only reason we're called code.org is because we wanted the shortest URL possible. Otherwise we would have been schools to teach computer science.org. Uh, but, uh, computer science includes things like learning how does the Internet work or how to keep your computer safe on the internet or big data and data analysis. And when you think about that, those types of things, how networks work, these are much broader than just learning to code. And every school should offer them, uh, you know, just data analysis type of thing that almost every 21st century jobs at a need, some version of that staying safe on the Internet, every, every child can benefit from. And as soon as you realize the broader view of computer science, the idea of having schools that don't teach it suddenly seems really short. Shortsighted.

Speaker 6:          36:04          Who Do you feel like teaching computer science? Um, when our teachers are struggling to teach the basics. How do you think that we can, I know you have amazing statistics in terms of the teachers that have joined the force in terms of teaching computer science, but you know, as you know, it's, it's easier to grow small numbers. What do you think it takes to bring it to the masses? I'm one the teachers are struggling with a lot of the basics in our education system. Yup. Yup.

Speaker 7:          36:31          Our education system is not great. I should start by saying, um, nobody looks at the US education system no matter who you are and thinks this is just amazing. Every country should do it this way. Most of the teachers and the education system don't feel that way either. It's a system that just feels kind of left behind or improperly tended or so on, schools or short on budgets. There's just all sorts of issues in our country. Make teaching also harder as well because kids come to school with all sorts of home issues that they bring and so on. So our schools are struggling and our teachers are struggling there frankly on the front lines of trying to help a lot of kids get to a better path. People regularly asked me, can these kids who are struggling to learn reading and writing and the teachers who were not able to get them to pass basic graduation requirements, can they learn computer science?

Speaker 7:          37:21          Uh, and I actually be believed that teaching computer science in the schools can actually help rather than make it harder because it can make school more engaging and more relevant. And I made this point earlier about making school more fun. Uh, it's not something that the adults necessarily know cause they didn't themselves study computer science so they don't even know what it's about. But once they try it in the classroom and they see how engaged the kids are, it actually makes a difference for the rest of school. And we've had so many stories about this that a wonderful, just a few weeks ago, one of our, not not weeks, a few months ago, one of our teachers wrote in about a student that had stopped coming to school in ninth grade and four 47 school days straight. This student just stopped coming. Imagine a ninth grader who just for two months no longer comes to school.

Speaker 7:          38:07          That kid, if that, if that continues, their life is on a very, very different path than, than anybody here. Um, and then the teacher wrote into the dad saying, we're about to start this new computer science pilot with code.org could you have your kid come and try that? Maybe. Maybe they'll like it. And not only the kid liked it, the kid has now stayed in school and he literally credits the fact that he's learning coding for the reason he was coming at school. That's a, that's an extreme example of a kid who otherwise would basically be lost in our society to now they're, you know, they're back in school again. But that that small dynamic is a microcosm of what lots of students feel because computer science is more relevant to them. Then trigonometry or Middle Eastern history or you know, learning languages and countries, they'll never visit her. A lot of the other things that we have to memorize in school just to pass tests.

Speaker 6:          38:56          So how do you feel we can help our teachers? You know, it feels like they're really critical to do the vision behind code.org. As you said, it's a teacher led movement. How do you think we can actually help our teachers?

Speaker 7:          39:10          We do a lot of things to help teachers are our main customer@code.org as teachers, you know, for any tech startup it's important to know who is your customer. And for us it could be the the students or the parents or the policy makers or whatnot. But teachers are our most important customer. Uh, everything we do is focused on how to make teachers more successful and more appreciated. And appreciation is actually a really important thing. Um, teachers generally feel underpaid, disrespected and unappreciated in America. Uh, part of why code.org has been successful is because we are, we continuously lavish our teachers with praise for the work that they do. And they noticed that because nobody else lavish them with praise. Uh, but then we also help them with all sorts of little things. Um, you know, for example, the fact that you don't need to create an account to do the hour of code makes it just one step easier.

Speaker 7:          40:02          Um, we even do things like, you know, we have a lot of unplugged activities that don't require a computer. Uh, but they require stuff. For example, we, we teach kids how to do sorting, uh, you know, sorting algorithms by giving kids a deck of cards and then, you know, telling them to get together in a group and put the, put the deck in order and then come back and say how you did it. And it's a nice way of learning, just trying a sorting algorithm and then explaining what you did. You're kind of putting your mind into algorithmic thinking. But one of the ways we help our teachers is we shipped the ducks have cards to them so they don't need to go to the store and basically by the deck of cards from their own salaries. So teachers who teach our courses, they could get basically like a box of the deck of multiple decks of cards, some paper cups, like a bunch of little stuff they need to get like all the shopping they would otherwise need to do. They literally get it from code.org in fact where we ship $500,000 a year of stuff like that to classrooms basically just to save the teachers the hassle because if they had to buy the decks of cards themselves, many of them wouldn't. And they wouldn't teach that that exercise cause they just don't have the time or money to do it. The little things really matter.

Speaker 6:          41:14          Yeah. That's amazing. It's everything that you guys have done. It's, it seems like you paid attention to a water of the little details that add a lot of convenience. Um, so I'm curious if we add computer science, what should it replace in the curriculum?

Speaker 7:          41:30          Yeah, this is a about controversial question. I might give my mom global answer just in this room. I'll first tell you the diplomatic answer. Um, because there's actually, you can add computer science without replacing a ton. In most cases. In elementary school, you don't really need to replace anything because it's so much fun. Uh, if you imagine like the second grade classroom, if any of you have kids in second grade, kids aren't learning every hour. Math, science, English, history, you know, you have to interrupt their class time with play time just to keep them engaged. You know, it's like 20 minutes of reading and outlets like dance and then then like 20 minutes of math and now let's sing and you need to mix it up. That up for the students. And coding actually fits into the fun category in elementary school, which is very, very different.

Speaker 7:          42:22          It's not what the students are teachers expect, but once they do it, they realize actually we don't need to fit it in because of that. Um, in middle school, what computer science typically can replace is outdated tech ed courses. Every school added Tech Ed to their middle school programs starting in the eighties or nineties, and what they're still teaching today, there's middle school courses in most schools teaching how to browse the web, how to do Internet search, you know, things like that. And everybody doing it. The teacher's like, all right, kids, now we're going to learn how to browse the web. And the kids were like, I already know how to do this. What should I do? And the teacher's like, I dunno, like, you know, it's, it's that system wants something to replace it, which is why schools come to us asking, what can we replace this crappy course with?

Speaker 7:          43:09          Uh, they actually, part of the demand we get is because they realize they're, they're teaching something outdated. Um, in high school you don't need to replace anything because in high school students choose what they get to take. Uh, so as long as you make a computer science available for one hour a day, as long as 25 students enroll, that hour is full. That teacher salaries paid for some other course lost its, you know, its students and some other courses we'll have one less hour. It's being taught in the school needs to shuffle around the teachers some, uh, but you don't need to replace something. And in fact, what schools regularly find is 50 students sign up and then you need to two hours a day dedicated to computer science. And basically the students are choosing what to replace by voting with their feet in the schools that teach computer science. It's the fastest growing of course in terms of student enrollment. Uh, and so students are deciding whatever it is that they're choosing not to have time.

Speaker 6:          44:01          I'm curious. One thing that was surprising to me is certainly when I went to school, um, I nobody thought computer science was fun. Um, and I'm, I was fascinated by the stats you sharing. Um, how, how has that switch happened? I mean, as a little bit of a chicken and egg, which is until you try it and you get the instant gratification, you don't realize it's fun. So how do you get students to try in order for them to, to realize there's a whole new world of opportunity there?

Speaker 7:          44:31          Sure. Um, the biggest change has been when I studied computer science and probably when you did it and probably what most people in this room study computer science, uh, the curriculum had been designed I think from the math establishment, which isn't bad or wrong, but it's definitely a more narrow view of computer science. As an example, I remember having to learn recursion and to learn recursion, I had to write the code to calculate the FIBONACCI sequence and it's like recursion is cool, but the FIBONACCI sequence sucks. Like who cares about the FIBONACCI sequence? Uh, unless you're a math guy and you think about the patterns and leaves and things like that, but like it's a very narrow use of recursion. You could teach recursion by making a cool fractal, which is, and then you like, you're much more likely to show a fractal to your mom then the Fibonacci sequence and your mom would be much more likely to get excited about the fractal then about a bunch of numbers.

Speaker 7:          45:26          Um, so the creativity of what the course is actually teach is, I think the most important reason, uh, computer science is more fun. And that's partly about changing curriculum. It's also partly because kids now have phones and you know, that little thing I showed you, you can make something and get it on your phone. That wasn't possible. Uh, when, when I was learning computer science, you have a question, question of all the amazing stats you showed to me. The one that's most amazing is the one about the number of kids with free and reduced lunch because that seems very counter to what I would think that those kids are in schools where they tend to have less money, less ability to buy the infrastructured by the, the computers for them to use. So I was curious if you could talk a little bit about how and why, what you need to do to get a stat like that and some of your philosophy behind that.

Speaker 7:          46:26          Sure. Um, by the way, Larry works a bit at Code Dot Archies his 20% time project I'd Google is to volunteer for us. And we were very thankful for his time at. So in terms of the, the questions you asked, the first thing I'd say is that the majority of schools have adequate computing and Internet access infrastructure to be able to teach computer science. Most schools don't have one to one computing in order to teach math on computers because every student takes math every day of every school year. Uh, and so you'd need every kid to have their own computer. If you want to move math and English and, and sort of those fields onto computers, you need way more computers and way more Internet bandwidth. Computer Science is either taught in elementary school one hour a week, which means the kids cycle through it or it's, if it's in high school, it's an optional class and not every student takes it.

Speaker 7:          47:22          And so you need about 30 computers for every thousand kids and 90 something, 96% of schools have that and they're internet. Uh, it's not all schools, but other than the 4% that don't have that, most schools have adequate computing infrastructure and our stuff we work go through the trouble of making sure it works on older computers with smaller resolutions and things like that. Uh, the other thing that's, that's counterintuitive that people don't expect cause they're stereotypes is this. I think there's a stereotype that kids in these underprivileged schools are less capable and it's not true at all. They're there, especially if you get to them young. Um, in fact, we just did data analysis of our AP computer science course, which is the college level course comparing the diversity in our computer science classroom to the diversity of the entire school itself. Uh, you know, so if the school had 60% underrepresented kids, what percentage in our classroom we're, you know, black or Hispanic students versus a school that had 20%.

Speaker 7:          48:26          And, uh, if we plotted every school on this map and they almost perfectly lined up with the, uh, the line of basically, you know, a slope, one line, meaning diversity in our computer science classrooms matched at the diversity of the school from a, from a race standpoint. Uh, and, and this really gets to the point that the issue we have is access in schools that don't teach computer science. None of those kids are learning in the schools that do teach computer science. The representation matches both racial diversity and socioeconomic diversity of the students. Gender diversity is harder. Gender diversity, kids stereotypes, mess with them. And the girls, Cinco, this course isn't for me because you know, I, from all the movies I've watched the people doing that are like these white 18 year old boys in a dark basement with an energy drink and a star wars poster. And like, that's not me and I don't want to live that life. Uh, and that holds back a lot of women, uh, but on, on socioeconomic diversity and racial diversity, it's much more that they just literally don't have it in their classroom. And so they don't get the chance.

Speaker 7:          49:31          Shiny. That room here is curious to know how can Google, there's health, there's lots of ways Googlers can help. Uh, if you look on our website, there's a button called help us, uh, or it's code.org/help. Uh, the easiest way to help is to follow us on Facebook or Twitter and to retweet the stuff we share. Uh, the next easiest ways to buy one of our hats or, or socks. We have code like a girl shirts that are super cool and very popular. Just buying our swag. Uh, it doesn't make as much money when you do that, but if you wear them, it helps spread the idea that computer science is something that everybody should do. Uh, but there's many other ways and there's a list of them at donating to us is always appreciated. Uh, telling google.org to continue supporting us as a very important, uh, you know, Google's foundation branch, google.org as one of our top supporters and the way they decide where to give money. A lot of that comes from feedback from Googlers. Uh, you know, most corporations make their decisions top down as, you know, Google's decisions are made in this sort of weird neural network kind of way. Uh, and, and literally when we talked to the folks@google.org, they talk about whether they're hearing about code.org from the, you know, the hive mind of Google. So however that works, if you could communicate to the foundation side of the hive mind that you're excited about their support for Google dot for code.org ad, that would be really helpful as well.

Speaker 6:          51:00          I guess similarly, how can technology companies health more holistically other than the individual technology employees?

Speaker 7:          51:08          Financial support is a really big part of it. And Google is not our top supporter. I think they're number four or five. Uh, but the work we do costs real money, uh, and, and that really matters, you know, uh, but then employee volunteering is also super helpful. Uh, there's a page code.org/health which lists these things and one of them is the signup as a volunteer to basically help teachers and classrooms and inspire students. Uh, and, and that's another great way as well.

Speaker 6:          51:37          Um, so I've been told to wrap it up. Um, and, uh, how do you, I'll just leave it up to you for your closing words. Um, and I think that would be the best use of our time.

Speaker 7:          51:48          Okay. Um, I'll stick around if there's any other questions. The one thing I'd say in closing, and I kind of said this already as it's been unreal that our education system has changed to embrace computer science at the pace it has. And in fact, every, almost every week or two weeks, I, I still need to remind myself that this is actually happening. One crazy example of this is just the very recent momentum in just the last six weeks for entire countries decided to do national rollouts of computer science for their entire country, uh, almost one country every week. And it's been hard for us to even keep up on reporting the news because it changes so quickly. Uh, but that, that change is entirely because of teachers deciding that this is important and doing it in a grassroots way at, and this is really one of the best stories I think in America today. We were living in this weird divided time. Our country is in a bit of a funk. Uh, I don't think there's as many very Americans who think that America is sort of, you know, all it could be, you're doing super great, but what we're doing in America's classrooms with computer science is incredibly great, and it's not just helping America. It's really helping changing the world. And that's something I think every American could be very proud of.

Speaker 6:          53:00          Thank you for joining us. Really appreciate everything you've done.