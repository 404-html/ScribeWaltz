1
00:00:06,500 --> 00:00:10,760
Introduced a manual Schanzer Emmanuel is
a creator and Co director of bootstrap

2
00:00:10,761 --> 00:00:14,150
when the largest form our k through 12
computer science initiatives in the US.

3
00:00:14,510 --> 00:00:17,360
He spent several years as a
program manager and developer
before becoming a high

4
00:00:17,361 --> 00:00:18,920
school teacher at the Middle
School academic coach.

5
00:00:19,160 --> 00:00:22,370
And it has long been involved in
connecting educators and technology,

6
00:00:22,640 --> 00:00:24,410
building partnerships with
depression organizations,

7
00:00:24,411 --> 00:00:27,740
universities and companies from across
Silicon Valley to bring a rigorous high

8
00:00:27,741 --> 00:00:31,130
quality cs education to all students,
particularly underrepresented groups.

9
00:00:31,340 --> 00:00:34,430
He holds degrees in computer science and
curriculum development and his research

10
00:00:34,730 --> 00:00:36,800
focus involves using
programming to teach Algebra.

11
00:00:37,600 --> 00:00:42,460
Cool. All right, well thank you. Well,
hi everybody. Thank you. Thank you.

12
00:00:42,461 --> 00:00:47,020
I haven't even started. I want to thank
all of you for being here today and uh,

13
00:00:47,021 --> 00:00:48,250
also as I mentioned before,

14
00:00:48,251 --> 00:00:51,720
I really appreciate you taking a moment
away from the Comey testimony to uh,

15
00:00:52,030 --> 00:00:55,510
to join us here. Um, so it's
great to be back at Google,

16
00:00:55,540 --> 00:00:56,410
so thank you for having me.

17
00:00:56,411 --> 00:00:59,500
I especially want to extend a thanks to
Andrew for the invitation for setting

18
00:00:59,501 --> 00:01:04,501
this up and I'm going to spend the next
35 or so minutes talking to you about

19
00:01:05,350 --> 00:01:08,590
computer science education
formulated as an engineering problem.

20
00:01:09,070 --> 00:01:12,670
So as Andrew mentioned, my name is
Emmanuel. I work with a team. Uh,

21
00:01:12,700 --> 00:01:14,660
their names are up here
on the slides for him.

22
00:01:14,661 --> 00:01:19,661
Krishnamurthy Kathy Fisler and I'm a young
Smith and a bootstrapper right now is

23
00:01:19,870 --> 00:01:23,350
one of the largest formal in school
programming courses in the country.

24
00:01:23,380 --> 00:01:25,750
We reach about 20,000
students every single year.

25
00:01:25,990 --> 00:01:28,810
Most of these students are taught by
teachers with little or no computing

26
00:01:28,811 --> 00:01:32,620
experience. Um, 43% of our
students are girls and young women,

27
00:01:32,621 --> 00:01:37,220
46% self identify as African American
or Latino. So if you're, you know,

28
00:01:37,240 --> 00:01:40,090
counting these numbers, these are pretty
good in the CS education business.

29
00:01:40,570 --> 00:01:44,440
A lot of these classes often struggle
to recruit underrepresented groups. Um,

30
00:01:44,500 --> 00:01:47,200
I'm going to tell you a little
bit about how we did what we did,

31
00:01:47,320 --> 00:01:51,700
where we're going, and uh, hopefully pass
on some of those lessons to you guys,

32
00:01:51,701 --> 00:01:54,860
especially since you were engineers.
And I think this is a problem, uh,

33
00:01:55,180 --> 00:01:59,650
that you guys have a unique way of
looking at. I'm not an engineer's broadly.

34
00:01:59,680 --> 00:02:04,540
Also sales geos here as well, I guess Geo
engineers, but other Googlers overall.

35
00:02:04,990 --> 00:02:08,100
So let's start with a question.
Um,

36
00:02:08,290 --> 00:02:11,270
somebody walks into your
office and says, you know, I,

37
00:02:11,280 --> 00:02:14,950
I want to teach computer science. You
guys are the expert. You work at Google.

38
00:02:14,951 --> 00:02:19,440
So what language should I use? So I'm
just curious, take a second. I want to,

39
00:02:19,510 --> 00:02:22,630
I want to hear like a
couple of suggestions. Like
three, three, three folks.

40
00:02:22,631 --> 00:02:24,550
What would you recommend to
someone who's asking you this?

41
00:02:26,640 --> 00:02:27,473
Right.

42
00:02:27,670 --> 00:02:31,390
Excellent. Scratch. What
else? Python. Great.

43
00:02:32,880 --> 00:02:35,010
One more recommended list

44
00:02:35,820 --> 00:02:40,680
he recommends list. Great. Okay.
There's always one. All right,

45
00:02:40,681 --> 00:02:43,290
sounds good. And this in fact
is exactly the way it goes.

46
00:02:43,291 --> 00:02:46,520
So here's an example of an
actual Facebook thread. Um,

47
00:02:46,530 --> 00:02:48,390
someone asks was on post and says,
Hey,

48
00:02:48,391 --> 00:02:50,340
I'm looking for a device
on teaching some coding.

49
00:02:50,580 --> 00:02:54,860
What do people think I should use? And
the responses are all things like scratch.

50
00:02:54,861 --> 00:02:58,380
Indeed was the first one, someone
else's recommending some logo. Uh,

51
00:02:58,410 --> 00:03:01,990
someone else is looking
at, uh, let's see. Uh,

52
00:03:02,020 --> 00:03:04,720
they're talking about maybe c
plus plus maybe Java or python.

53
00:03:04,721 --> 00:03:09,160
So the answers are all immediately here
are some languages, Harrison tools. Um,

54
00:03:09,820 --> 00:03:11,500
letting ask you a slightly
different question.

55
00:03:12,460 --> 00:03:15,790
Someone walks into your office and
says, Hey, I want to make software.

56
00:03:16,420 --> 00:03:21,280
You guys are Googlers, what language
should I use? So what do you tell them?

57
00:03:26,380 --> 00:03:27,260
What type of software?

58
00:03:27,520 --> 00:03:29,830
So you would push back, you'd say,
well, what kind of software do you want?

59
00:03:30,330 --> 00:03:34,200
It's an android APP.
You have to use Java.

60
00:03:34,300 --> 00:03:36,310
It's a iPhone APP.

61
00:03:37,140 --> 00:03:41,280
Yo see objective c or swift or something.

62
00:03:41,520 --> 00:03:45,060
Yeah. So you're saying that maybe
before you answer with the language,

63
00:03:45,120 --> 00:03:48,390
you would ask a little bit more about
what this person is trying to make. Right?

64
00:03:48,391 --> 00:03:50,880
Even though they came to you asking
for a language, you're saying, well,

65
00:03:51,060 --> 00:03:52,410
back up a second,
what do you want to do?

66
00:03:53,220 --> 00:03:57,120
And I think that's sort of telling
that when someone asks an engineer,

67
00:03:57,210 --> 00:04:01,230
what language should I use? The engineer
says back up, what are you trying to do?

68
00:04:02,240 --> 00:04:04,560
But when it comes to education,
if a teacher says,

69
00:04:04,561 --> 00:04:07,890
what should I use were instantly
quick to jump in and say,

70
00:04:08,160 --> 00:04:11,850
you should use c sharp, you should
use scratch. Things like that. Why?

71
00:04:12,900 --> 00:04:15,180
I mean,
as engineers,

72
00:04:15,360 --> 00:04:18,390
the first thing we should be doing is
looking at what are the constraints of the

73
00:04:18,391 --> 00:04:18,990
problem.

74
00:04:18,990 --> 00:04:22,950
So here are some educational constraints
that we should be asking before we

75
00:04:22,951 --> 00:04:27,180
answer that teacher's question.
How old are the students? Right?

76
00:04:27,210 --> 00:04:30,960
Maybe they're 30 maybe they're five. That
might change our answers a little bit.

77
00:04:31,340 --> 00:04:33,060
Have they had prior programming exposure?

78
00:04:33,061 --> 00:04:36,180
Is it their first program in class or do
they have master's degrees in computer

79
00:04:36,181 --> 00:04:37,014
science?

80
00:04:37,440 --> 00:04:41,160
Is it a required class where you're going
to have every kid there or is it self

81
00:04:41,161 --> 00:04:46,020
selected kids? How long is it
right? Is this to run it on all day,

82
00:04:46,021 --> 00:04:48,970
summer camp, eight hours a day,
every day? Or is it like, you know,

83
00:04:49,110 --> 00:04:53,490
half an hour coding club Monday mornings?
Is it even a class?

84
00:04:53,580 --> 00:04:56,820
Maybe it's a drop in coding club
over at the local science museum.

85
00:04:56,821 --> 00:04:58,110
And some kids are there every day.

86
00:04:58,200 --> 00:05:00,150
Some kids shop once and
you never see him again.

87
00:05:01,020 --> 00:05:05,010
Now I think if I had given you guys
more time to think about this question,

88
00:05:05,011 --> 00:05:07,470
you would have come back with some of
these constraints you would have asked

89
00:05:07,471 --> 00:05:08,304
about them,

90
00:05:08,460 --> 00:05:11,220
but there are some other constraints
that you might not have thought of.

91
00:05:11,490 --> 00:05:15,150
So if you're interested in
getting computer science
into an educational context,

92
00:05:15,450 --> 00:05:18,540
you should also ask yourselves,
how many kids are there? Right?

93
00:05:18,541 --> 00:05:21,900
Is it one teacher teaching a giant lecture
hall or is it just a small group of

94
00:05:21,901 --> 00:05:24,060
kids? Um, similarly,

95
00:05:24,090 --> 00:05:28,110
is there Internet access in the
school or an educational setting?

96
00:05:28,440 --> 00:05:31,680
Is the teacher new to programming maybe
the teacher has never coded before?

97
00:05:32,130 --> 00:05:36,600
Can the students type that
isn't a critical question
that might immediately lead

98
00:05:36,601 --> 00:05:39,360
you to say, well, you know, scratches a
great place to start if they can't type.

99
00:05:40,650 --> 00:05:43,050
Are there students with
different ability levels, right?

100
00:05:43,051 --> 00:05:45,510
Are they visually impaired?
Do they have sensory motor impairments?

101
00:05:45,511 --> 00:05:47,910
If you're talking about schools,
the answer is yes.

102
00:05:47,911 --> 00:05:49,920
And you have to ask what
those impairments are,

103
00:05:49,921 --> 00:05:52,860
what the different ability levels are,
because those will change your answer.

104
00:05:53,970 --> 00:05:56,340
Do they have regular
computer access at home?

105
00:05:56,670 --> 00:05:59,540
Because if you're a programming class
and you're relying on kids completing

106
00:05:59,541 --> 00:06:03,020
programming assignments for
homework, this matters. And in fact,

107
00:06:03,260 --> 00:06:07,010
do they even have regular computer
access at school, right? I mean,

108
00:06:07,130 --> 00:06:09,800
if a teacher says, I want to teach
computer science, we often think, oh,

109
00:06:09,801 --> 00:06:12,710
you must have a computer live.
Kids must have computers every day.

110
00:06:12,890 --> 00:06:16,040
Often what it really means is there's
like a laptop cart that comes around on

111
00:06:16,041 --> 00:06:16,874
Friday.

112
00:06:17,360 --> 00:06:22,040
So these are the constraints that we
need to ask about before we even barge in

113
00:06:22,041 --> 00:06:26,870
and say, well, here's how computer science
education should work. And you know, as,

114
00:06:27,350 --> 00:06:31,130
as computer scientists were often
over fixate on the tool, right?

115
00:06:31,131 --> 00:06:33,440
We jumped into the language,
we jump into the software,

116
00:06:33,590 --> 00:06:35,810
which is why I think when you
look at the last 40 years,

117
00:06:36,200 --> 00:06:38,630
the history of cs education
has a history of tools.

118
00:06:38,750 --> 00:06:41,600
Here's the new tool that's going to
change the way programming has taught

119
00:06:41,601 --> 00:06:43,160
forever.
And then 10 years later,

120
00:06:43,190 --> 00:06:46,220
here's the new new tool that's going to
change the way programming has taught

121
00:06:46,221 --> 00:06:48,560
forever. And this endless
cycle never gets us anywhere.

122
00:06:49,250 --> 00:06:54,140
So let's look at this as engineers
and say, let's define the problem.

123
00:06:54,170 --> 00:06:56,180
What are our constraints
and what are our metrics?

124
00:06:56,600 --> 00:06:57,830
We've talked about our constraints.

125
00:06:57,950 --> 00:07:00,290
I'm going to posit that there are
three metrics we should consider.

126
00:07:00,910 --> 00:07:03,980
So first is equity, right? Without equity,

127
00:07:03,981 --> 00:07:07,100
we could get computer science into every
school and then the only kids who show

128
00:07:07,101 --> 00:07:08,450
up for the class or rich white boys,

129
00:07:08,480 --> 00:07:11,300
and I think none of us would be thrilled
with that. So equity is number one.

130
00:07:12,170 --> 00:07:13,550
We also want scale,
right?

131
00:07:13,551 --> 00:07:16,820
We need this to be reachable by
millions and millions of kids.

132
00:07:17,000 --> 00:07:20,570
And you've got things like hour of code
that reach millions upon millions of

133
00:07:20,571 --> 00:07:21,950
kids,
all kinds of kids.

134
00:07:22,160 --> 00:07:26,330
But even code.org even Hadi Partovi
himself would say hour of code is not

135
00:07:26,360 --> 00:07:28,580
rigorous education.
It's merely exposure.

136
00:07:28,730 --> 00:07:31,400
What we want for our
third criteria is rigor.

137
00:07:32,480 --> 00:07:34,220
If we hadn't gotten all three of these,

138
00:07:34,400 --> 00:07:36,500
I would propose that we're
never fully successful,

139
00:07:36,501 --> 00:07:39,440
we're never where we need to be.
So with these goals in mind,

140
00:07:39,710 --> 00:07:43,400
let's look at the solution space cause
there's sort of four strategies that

141
00:07:43,401 --> 00:07:46,160
people tend to use when
it comes to cs education.

142
00:07:46,790 --> 00:07:49,100
So the first is let's
make it a required course.

143
00:07:49,280 --> 00:07:53,750
Every child in America must take computer
science before they graduate. Okay.

144
00:07:54,620 --> 00:07:57,890
Um, there's a riff on this,
which is, no, no, no, no.

145
00:07:57,950 --> 00:08:01,790
There should be a computer science course
in every school, but it's optional.

146
00:08:01,791 --> 00:08:06,020
It's an elective that kids can choose.
Option three, forget all of that.

147
00:08:06,021 --> 00:08:11,021
We're going after school an option
for maybe instead we try to integrate

148
00:08:11,301 --> 00:08:15,950
computing into some existing mainstream
classes. So let's look at these four.

149
00:08:16,130 --> 00:08:19,760
And I just want to say that, you know,
all four of these strategies have merit.

150
00:08:19,880 --> 00:08:21,380
So as I go through this,
you know,

151
00:08:21,440 --> 00:08:24,110
some have strengths and others
have weaknesses and that's fine.

152
00:08:24,440 --> 00:08:27,620
I think there's room in this space
floor for a plurality of approaches.

153
00:08:28,310 --> 00:08:30,740
So let's start with the
required course, right? Let's,

154
00:08:30,920 --> 00:08:32,870
let's talk about that strategy.
Well,

155
00:08:32,900 --> 00:08:37,010
the problem with required courses is
that require this strategy doesn't scale.

156
00:08:37,940 --> 00:08:41,360
If we really wanted to get computer
science to be taught to every child in

157
00:08:41,361 --> 00:08:44,090
America, and we need to
do four things. First,

158
00:08:44,270 --> 00:08:48,200
we would need to have something called
cs teacher certification in every single

159
00:08:48,201 --> 00:08:50,420
state so that a teacher
could become a CS teacher.

160
00:08:50,540 --> 00:08:53,480
And right now less than half of the
states have such a certification.

161
00:08:53,780 --> 00:08:57,030
So that means a policy effort that's
going to take a lot of years and a lot of

162
00:08:57,030 --> 00:08:58,860
dollars to create.
And then once that's done,

163
00:08:59,160 --> 00:09:04,140
we need to recruit and train at least
20,000 full time dedicated cs teachers.

164
00:09:04,410 --> 00:09:06,690
And that's even more years
and even more dollars.

165
00:09:06,960 --> 00:09:11,340
And then let's just assume that none of
those teachers decide to piece out and

166
00:09:11,341 --> 00:09:13,860
go work for a technology company because
now they can make a whole lot more

167
00:09:13,861 --> 00:09:16,050
money. Let's just assume they
all stay in the classroom, right?

168
00:09:16,620 --> 00:09:17,880
We still have to pay their salaries,

169
00:09:18,660 --> 00:09:22,050
which means at least a billion dollars
a year added to the national education

170
00:09:22,051 --> 00:09:24,570
budget in every single year in perpetuity.

171
00:09:24,780 --> 00:09:26,250
That's not going to happen anytime soon.

172
00:09:27,690 --> 00:09:31,110
But suppose somebody with deep
pockets opens up and says,

173
00:09:31,350 --> 00:09:33,840
I'm going to pay for all of
it. It's totally okay. Well,

174
00:09:34,380 --> 00:09:35,460
beyond paying their salary,

175
00:09:35,461 --> 00:09:39,960
there's also the laws of time and space
and there's a finite number of hours in

176
00:09:39,961 --> 00:09:41,880
the school day and rooms
in the school building.

177
00:09:41,881 --> 00:09:45,780
So where are these cs class is going to
fit, right? It's essentially a nonstarter.

178
00:09:45,781 --> 00:09:50,070
So there's a lot of benefits here, but
right off the bat would give up on scale,

179
00:09:50,430 --> 00:09:53,340
right? That's not happening
with the strategy. Even worse,

180
00:09:53,341 --> 00:09:56,280
if it's a required class that
kids need to complete to graduate,

181
00:09:56,800 --> 00:09:59,550
that means you have wildly different
ability levels in that classroom.

182
00:09:59,790 --> 00:10:01,500
And because it's a graduation requirement,

183
00:10:01,680 --> 00:10:05,070
there's a perverse incentive on the part
of the teacher to get rid of the rigor,

184
00:10:05,160 --> 00:10:07,230
right? To make sure that
every single kid can pass it.

185
00:10:07,231 --> 00:10:10,080
Because we don't want kids dropping out
of high school because they didn't pass

186
00:10:10,081 --> 00:10:12,900
their cs class.
So we may lose some of the rigor as well.

187
00:10:16,770 --> 00:10:19,410
Well,
I mean it often does,

188
00:10:24,690 --> 00:10:27,280
and that's why it's shaded, right?
So some teachers will hold the line,

189
00:10:27,281 --> 00:10:29,940
some teachers will say, no, I'm
going rigorous the whole way.

190
00:10:36,360 --> 00:10:39,500
And that's why it's half on there. Right?
I think some teachers will take that.

191
00:10:39,540 --> 00:10:40,740
We'll take the approach
that you would take.

192
00:10:40,770 --> 00:10:42,480
There are other teachers that
are going to say, you know what?

193
00:10:42,900 --> 00:10:45,710
I wasn't even a CS major. The
fact that I don't know, you know,

194
00:10:45,810 --> 00:10:48,080
this computer science class,
I don't want any kid to fail up,

195
00:10:48,270 --> 00:10:49,770
so we're just going to
do something that's Ah,

196
00:10:49,790 --> 00:10:53,100
that's fun and sort of easy to pass.
And that's just, that's merely a risk.

197
00:10:53,101 --> 00:10:54,750
It's not an a definite outcome.

198
00:10:55,830 --> 00:10:58,560
So let's take a look
at strategy number two.

199
00:10:58,650 --> 00:11:01,560
What if computer science was
simply an elective, right?

200
00:11:01,620 --> 00:11:03,360
That solves some of these problems.
Well,

201
00:11:03,361 --> 00:11:06,090
the problem with elective courses
is that they're not equitable.

202
00:11:06,780 --> 00:11:11,280
And I'll tell you why. So every school
has a set of graduation requirements.

203
00:11:11,281 --> 00:11:15,000
So here's a hypothetical grid of courses
that a student might take in different

204
00:11:15,001 --> 00:11:16,980
subject areas years one through four,

205
00:11:17,280 --> 00:11:19,770
and you can clearly see there's
room for computer science there.

206
00:11:20,670 --> 00:11:25,530
What happens if a kid fails a required
course, for example, Algebra one,

207
00:11:26,460 --> 00:11:28,680
well then they have to retake
it their sophomore year.

208
00:11:28,681 --> 00:11:32,670
So we've just moved this pathway down
a notch, but they're also doubling up.

209
00:11:32,790 --> 00:11:35,820
The school will typically assign
them to a second math class,

210
00:11:35,821 --> 00:11:39,600
like a remedial math class to make damn
sure that that kid passes their Algebra

211
00:11:39,601 --> 00:11:43,170
class this time. And of course they're
missing their fourth year of math.

212
00:11:43,171 --> 00:11:47,130
So what happens? They get another year
added somewhere else in a different track,

213
00:11:47,220 --> 00:11:49,650
maybe financial math, applied
math, something like that,

214
00:11:50,130 --> 00:11:51,420
to give them the credits that they need.

215
00:11:52,230 --> 00:11:55,780
And then over on the column you'll
notice that virtually every science has

216
00:11:55,781 --> 00:11:58,750
Algebra as a prerequisite, right?
Without Algebraic functions,

217
00:11:58,751 --> 00:12:01,240
you're not modeling
projectile motion and physics,

218
00:12:01,241 --> 00:12:02,860
you're not balancing chemical equations.

219
00:12:03,040 --> 00:12:05,770
So often there's a delay introduced
a bubble in the pipeline,

220
00:12:06,460 --> 00:12:10,750
and that's if they fell class once.
What if a kid fails to classes, right?

221
00:12:10,960 --> 00:12:14,140
You had this nice grid structure
that allows for all these courses,

222
00:12:14,141 --> 00:12:16,090
but now there's this cascade of errors.

223
00:12:16,210 --> 00:12:19,570
That means that these students don't
have room in the schedule to take the

224
00:12:19,571 --> 00:12:23,230
electives. So for students who
fail these classes, they're,

225
00:12:23,260 --> 00:12:24,880
they're exed out of these options.

226
00:12:25,000 --> 00:12:27,520
And when you look at the students that
typically struggle in the mainstream

227
00:12:27,521 --> 00:12:31,930
classes, often they split along
class lines, poverty, lines, ses.

228
00:12:32,140 --> 00:12:34,450
And because of some structures
that we have in America,

229
00:12:34,451 --> 00:12:36,280
those are also divided among racial lines.

230
00:12:36,760 --> 00:12:38,920
So these elective courses
are great to have,

231
00:12:39,100 --> 00:12:41,950
but it's no surprise that when you look
at the courses that are being offered

232
00:12:41,951 --> 00:12:42,940
right now as electives,

233
00:12:43,150 --> 00:12:46,150
often there's a particular profile
of student who winds up being in the

234
00:12:46,151 --> 00:12:49,660
classroom. So going back to
our scorecard here, you know,

235
00:12:49,690 --> 00:12:51,100
we lose equity off the bat.

236
00:12:51,220 --> 00:12:55,150
And I think that there is often
something of a risk in losing rigor.

237
00:12:55,151 --> 00:12:55,984
And I'll tell you why,

238
00:12:56,620 --> 00:13:00,430
because for a school that's just offering
a single computer science elective,

239
00:13:00,550 --> 00:13:04,150
it's not cost effective for them to
hire like a full blown computer science

240
00:13:04,151 --> 00:13:07,630
teacher. So what are they gonna
do? Who's gonna teach that class?

241
00:13:10,400 --> 00:13:12,910
So maybe a math teacher, maybe
a history teacher, right?

242
00:13:13,000 --> 00:13:15,370
They'll ask another teacher
to take over that class,

243
00:13:15,520 --> 00:13:19,300
which means we lose the ability to ensure
that they have the necessary training

244
00:13:19,301 --> 00:13:23,440
and depth of content to ensure rigor.
So again, rigorous sort of a risk here.

245
00:13:25,050 --> 00:13:27,250
So let's take a look at strategy three.
What if we did?

246
00:13:27,251 --> 00:13:30,550
What if we just bypass the schools all
together and did computer science as an

247
00:13:30,551 --> 00:13:34,570
afterschool program? Well, this is a
strategy that I can tell you a lot about.

248
00:13:34,870 --> 00:13:39,340
So bootstrap began as an afterschool
program and several years back,

249
00:13:39,370 --> 00:13:40,360
early in our growth,

250
00:13:40,480 --> 00:13:43,840
we were actually one of the largest
afterschool programming curricula in the

251
00:13:43,841 --> 00:13:44,674
country.

252
00:13:44,800 --> 00:13:48,480
And in fact we had tons of engineers from
Google who taught the class and after

253
00:13:48,481 --> 00:13:53,170
school programs. And when we looked at the
impact we were having, we shut it down.

254
00:13:54,400 --> 00:13:57,280
That's a battle scar. And I'm going
to tell you my reasons for doing so.

255
00:13:57,970 --> 00:14:02,290
See the problem with afterschool computer
science is that by definition it has

256
00:14:02,291 --> 00:14:06,760
to compete with afterschool
football, basketball, theater,

257
00:14:06,850 --> 00:14:10,360
sculpture, having a job taking
care of your little brother,

258
00:14:10,660 --> 00:14:14,230
which means the only kids who show up
for afterschool cs are the kids with the

259
00:14:14,231 --> 00:14:15,790
means and inclination to do so.

260
00:14:15,791 --> 00:14:18,100
They already see themselves
as interested in coding.

261
00:14:18,610 --> 00:14:21,400
So equity goes out the window very,
very quickly.

262
00:14:21,460 --> 00:14:23,710
Once you scale beyond a certain group,
you lose equity.

263
00:14:24,340 --> 00:14:27,610
But there's something else which
is that after a long day of school,

264
00:14:27,640 --> 00:14:30,100
kids are exhausted justifiably so,

265
00:14:30,280 --> 00:14:34,440
which means it's extremely hard to
teach a rigorous afterschool programming

266
00:14:34,450 --> 00:14:36,970
class. Now this is not to knock
after school coding clubs.

267
00:14:36,971 --> 00:14:39,430
I think they're fantastic.
I think they add a lot of value.

268
00:14:40,030 --> 00:14:43,330
But I think often the critique that
you hear is this after school thing.

269
00:14:43,331 --> 00:14:45,040
It's really great kids,
they're getting engaged,

270
00:14:45,610 --> 00:14:49,210
but I wouldn't say they're learning
rigorous computer science. Um,

271
00:14:49,240 --> 00:14:51,680
so easy to scale, but you risk
losing some other stuff as well.

272
00:14:53,780 --> 00:14:57,950
So what sort of ruled out the
first three strategies as,

273
00:14:57,951 --> 00:15:00,860
as having some benefits but not
necessarily getting us to the whole,

274
00:15:00,920 --> 00:15:02,720
to all three of our metrics for success.

275
00:15:02,990 --> 00:15:05,360
So I want to pause for a second
and give you an indication

276
00:15:08,810 --> 00:15:12,920
the idea that everyone should learn
computer science does not mean everyone

277
00:15:12,921 --> 00:15:15,950
should take computer science classes.
I think this is,

278
00:15:15,951 --> 00:15:18,800
this is a tenuous connection
that we need to sever.

279
00:15:19,610 --> 00:15:22,190
So I want to talk about
the fourth strategy,

280
00:15:22,580 --> 00:15:26,570
which is what does it look
like to integrate computing
into a mainstream course?

281
00:15:27,680 --> 00:15:30,230
And if you were to pick a course,
any course,

282
00:15:30,800 --> 00:15:33,530
I think you'd want to pick
Algebra and I'll tell you why.

283
00:15:34,310 --> 00:15:38,750
So first Algebra is the gateway to
all stem. As I mentioned before,

284
00:15:38,780 --> 00:15:41,900
you fail Algebra one and you just
give up on math right there. Yeah,

285
00:15:41,930 --> 00:15:44,240
you're screwed for the m part of stem,
right?

286
00:15:44,241 --> 00:15:45,590
You're not going to
become a mathematician,

287
00:15:46,130 --> 00:15:48,740
but you're also not going to come
a physicist without functions.

288
00:15:48,741 --> 00:15:50,750
You're not going to become
a chemist or biologist.

289
00:15:50,900 --> 00:15:53,600
Even if you want to go into economics,
financial literacy,

290
00:15:53,690 --> 00:15:55,160
you need to know Algebraic functions.

291
00:15:55,161 --> 00:15:57,590
If you want to model things
like compound interest.

292
00:15:57,860 --> 00:16:02,180
So a kid who flames out of Algebra one
has essentially made a career decision

293
00:16:02,840 --> 00:16:05,420
where they're, they're
exed out from stem. Um,

294
00:16:05,421 --> 00:16:08,630
in fact this impact is so significant
that a 2004 study looked at the

295
00:16:08,631 --> 00:16:12,350
correlation between grades kids get in
high school and their lifetime earnings.

296
00:16:12,351 --> 00:16:16,430
And what they found was that the greatest
child gets an Algebra one is the most

297
00:16:16,431 --> 00:16:19,970
strongly correlated of any subject with
the amount of money that child will make

298
00:16:20,090 --> 00:16:21,470
for the rest of his or her life.

299
00:16:23,370 --> 00:16:23,690
Okay.

300
00:16:23,690 --> 00:16:24,523
And finally,

301
00:16:24,950 --> 00:16:28,910
we live in an era of high stakes testing
and standardized test and Algebra one

302
00:16:28,940 --> 00:16:32,180
is a requirement in every single
school in the United States,

303
00:16:32,450 --> 00:16:36,140
which means that the superintendent
of New York City public schools isn't

304
00:16:36,141 --> 00:16:39,020
staying awake at night having,
you know, shivering saying,

305
00:16:39,021 --> 00:16:40,400
why aren't my kid learning to code?

306
00:16:41,480 --> 00:16:44,420
What they're really worried about is
are my kids going to be able to pass the

307
00:16:44,421 --> 00:16:48,050
Algebra exams? And this is
happening nationwide, right.

308
00:16:48,110 --> 00:16:51,200
Typically when you hear people compare
how we're doing to other countries,

309
00:16:51,260 --> 00:16:55,010
the thing that that scares us the most is
other countries are beating us in math.

310
00:16:55,250 --> 00:16:57,980
And guess which part of the math
test people freak out about the most?

311
00:16:59,400 --> 00:17:04,220
The algebra. It's a word problems. I mean

312
00:17:06,420 --> 00:17:09,900
it's not only is it not necessarily
required everywhere, but typically when,

313
00:17:09,950 --> 00:17:12,500
when you think about Americans
who are scared of math,

314
00:17:12,501 --> 00:17:15,860
it's always the train leaving Chicago
and the train leaving, leaving New York,

315
00:17:15,861 --> 00:17:19,380
right? It's this like nightmare word
problem that we all we all giggle about,

316
00:17:19,390 --> 00:17:23,510
right? Because it's true. We have like
national PTSD when it comes to Algebra.

317
00:17:23,870 --> 00:17:25,580
So this is a class that's in need of help.

318
00:17:26,450 --> 00:17:30,740
So what if we tried to teach computer
science through the Algebra class?

319
00:17:30,741 --> 00:17:31,760
What if we integrated?

320
00:17:32,240 --> 00:17:36,920
So I'll make a strong claim here that
the integrative strategy is scalable,

321
00:17:36,950 --> 00:17:38,270
equitable,
and rigorous.

322
00:17:38,271 --> 00:17:41,720
Here's why it's scalable because
every child takes Algebra, right?

323
00:17:41,721 --> 00:17:43,670
You're immediately reaching
every child in the country.

324
00:17:43,940 --> 00:17:47,660
You're leveraging the huge
network of existing teachers,

325
00:17:47,720 --> 00:17:50,760
courses and professional organizations
that are already out there.

326
00:17:50,761 --> 00:17:53,820
So we can grab that scale and run
with it to teach computer science.

327
00:17:54,570 --> 00:17:56,490
It's also equitable.
You know why?

328
00:17:58,410 --> 00:18:00,180
Because everyone takes Algebra,

329
00:18:00,570 --> 00:18:04,620
which means right off the bat you're
removing the negative stereotypes that are

330
00:18:04,621 --> 00:18:08,310
accidentally reinforced by things like
electives and afterschool clubs where

331
00:18:08,311 --> 00:18:10,740
when other kids would look at who's
taking those courses, they say, oh,

332
00:18:10,741 --> 00:18:13,950
that that student doesn't look like me,
but if you were in the Algebra class,

333
00:18:14,130 --> 00:18:15,360
we get rid of that right off the bat.

334
00:18:15,480 --> 00:18:19,530
We're all in it together and
it's also fairly rigorous, right?

335
00:18:19,531 --> 00:18:23,100
The content in Algebra is well suited
to rigorous instruction and evaluation.

336
00:18:23,370 --> 00:18:27,330
Algebra teachers confront
issues of abstraction and
funnel notation all the time.

337
00:18:27,540 --> 00:18:30,990
There are some great corollaries here
that can we can put to use to teaching

338
00:18:30,991 --> 00:18:34,920
computer science. So you're probably
sitting here saying, oh my God,

339
00:18:35,400 --> 00:18:38,070
Emmanuel is telling me that, that
this is basically a free lunch, right?

340
00:18:38,071 --> 00:18:42,990
We get all of those metrics for free.
It's fantastic. Do you believe me? No,

341
00:18:43,020 --> 00:18:47,670
because there's no such thing as a free
lunch. So here's what we do, right?

342
00:18:47,700 --> 00:18:51,900
We've essentially traded one set of
challenge and constraints for a different

343
00:18:51,901 --> 00:18:53,190
set of challenging constraints.

344
00:18:53,400 --> 00:18:57,300
So rather than trying to like jam
computer science into a resource starved

345
00:18:57,330 --> 00:19:01,500
educational context, now we have a
different constraint problem to solve.

346
00:19:01,770 --> 00:19:04,680
If we want it to fly,
we have to have transfer,

347
00:19:04,740 --> 00:19:08,250
which means the computer science kids
are learning in the math class had damn

348
00:19:08,251 --> 00:19:11,370
well better result in them learning
math better than they did before.

349
00:19:11,610 --> 00:19:14,190
Otherwise the math teacher's going to just
going to revolt. They're going to say,

350
00:19:14,191 --> 00:19:16,320
I don't care how cool this
is or how useful it is.

351
00:19:16,530 --> 00:19:19,920
My job is to teach math and if I'm
giving up time from my math class,

352
00:19:20,280 --> 00:19:23,820
it better result in improved
math outcomes. Right?

353
00:19:23,821 --> 00:19:27,000
So in cognitive science literature,
this is a phenomenon called transfer.

354
00:19:27,240 --> 00:19:28,680
Transfer is pretty simple.

355
00:19:28,770 --> 00:19:33,770
A skill learned in one context can be
used successfully in a different context.

356
00:19:34,260 --> 00:19:39,060
That's our goal and it turns out
that transfer happens all the time,

357
00:19:39,270 --> 00:19:41,370
but almost never in the way you expect.

358
00:19:41,400 --> 00:19:45,930
If you want to actually guide kids to
transfer, it's much harder than you think.

359
00:19:46,860 --> 00:19:50,730
So how do we guide kids from transferring
skills and computing into Algebra?

360
00:19:50,731 --> 00:19:54,660
Well, we know that there are
three new constraints. Number one,

361
00:19:55,050 --> 00:19:56,970
you have to have explicit instruction.

362
00:19:57,210 --> 00:20:01,650
Having a kid perform task a and then
later having them perform task B,

363
00:20:02,370 --> 00:20:04,050
a and B might seem similar to you,

364
00:20:04,080 --> 00:20:06,660
but you have no guarantee that student
is going to make the connection.

365
00:20:06,661 --> 00:20:10,110
And often without having a teacher
in the room to explicitly tie the two

366
00:20:10,111 --> 00:20:12,780
together, it ain't going to
happen. But that's okay. Right?

367
00:20:12,781 --> 00:20:17,250
We're dealing with math teachers so
we can check that one off. Number two,

368
00:20:18,120 --> 00:20:22,200
the tasks that you're using in domain
a and B have to have deep structural

369
00:20:22,201 --> 00:20:24,810
similarities.
How deep am I talking about?

370
00:20:25,110 --> 00:20:28,550
I'll give you an example from a
2009 case study. They looked at a,

371
00:20:28,580 --> 00:20:33,580
a physics teacher who was talking about
gravity and acceleration and had his

372
00:20:34,531 --> 00:20:39,531
students do tons and tons of problems
where a ball was dropped off of a tower or

373
00:20:40,321 --> 00:20:43,410
off of, um, I don't, out of an
airplane, things like that. And they,

374
00:20:43,430 --> 00:20:46,740
they studied how fast the ball was moving
after a given time where it was after

375
00:20:46,741 --> 00:20:49,810
a given time, all sorts of stuff.
And then they gave the kids a quiz.

376
00:20:50,800 --> 00:20:55,800
The quiz had balls being dropped down
holes and the students complained,

377
00:20:57,010 --> 00:21:01,120
you know why
you didn't show us any whole problems.

378
00:21:02,650 --> 00:21:03,990
So trend like the,

379
00:21:04,000 --> 00:21:08,560
the level of structural similarities
needs to be insanely high in order to

380
00:21:08,561 --> 00:21:09,880
really facilitate transfer.

381
00:21:10,870 --> 00:21:14,410
And finally you need to have a
process for performing tasks, right?

382
00:21:14,411 --> 00:21:18,010
You can't just give kids a problem in
domain a and then assume that they will

383
00:21:18,011 --> 00:21:21,550
magically understand how to transfer
that to solving that problem in domain be

384
00:21:21,910 --> 00:21:22,330
right.

385
00:21:22,330 --> 00:21:25,810
A classic formulation of what I just said
is we often think that we're teaching

386
00:21:25,811 --> 00:21:29,950
kids problem solving simply because we
give them problems to solve and that's

387
00:21:29,951 --> 00:21:33,670
not true. So we've got to have an explicit
task. So these are our new criteria.

388
00:21:33,671 --> 00:21:34,570
We've already got one.

389
00:21:34,780 --> 00:21:37,840
Let's talk about how we get number two
deep structural similarities between

390
00:21:37,841 --> 00:21:40,390
computer programming and Algebra.
Well,

391
00:21:41,320 --> 00:21:46,320
there's a problem because most of the
coding that we do in K12 doesn't actually

392
00:21:47,201 --> 00:21:49,780
have functions. And functions are
kind of important for Algebra.

393
00:21:50,020 --> 00:21:52,300
So a lot of teachers will use
that function machines, right?

394
00:21:52,301 --> 00:21:54,430
There's inputs and outputs.
There's a vertical line test,

395
00:21:54,700 --> 00:21:57,430
except often you have functions
that you know, return,

396
00:21:57,431 --> 00:22:01,090
void or functions that you give
them the same input 10 times,

397
00:22:01,091 --> 00:22:02,190
you get 10 different outputs.

398
00:22:02,220 --> 00:22:05,380
This is perfectly common in
many programming languages. Um,

399
00:22:05,830 --> 00:22:07,960
there's no computer output,
right? Here's a block from a,

400
00:22:07,961 --> 00:22:11,140
a language you might be familiar with.
What's the output of that function?

401
00:22:11,170 --> 00:22:13,180
There's nothing computed
that's showing up.

402
00:22:13,360 --> 00:22:16,310
So for a teacher who's trying to make
connections between the functions on a

403
00:22:16,311 --> 00:22:18,910
computer and the functions and Algebra,
this doesn't fly.

404
00:22:20,830 --> 00:22:23,410
Coding also doesn't have
variables for the most part.

405
00:22:24,070 --> 00:22:29,020
Here's a classic example from python x
equals 10 and now x equals x plus two.

406
00:22:30,280 --> 00:22:34,210
When you run this program,
what's the final value of x class?

407
00:22:36,190 --> 00:22:40,060
Fantastic. Actually, no, that's not
right at all. I'm a math teacher.

408
00:22:40,090 --> 00:22:43,480
This is nonsense.
And you can probably guess why.

409
00:22:44,470 --> 00:22:48,070
And there's actually two
problems here. One is, will.

410
00:22:48,280 --> 00:22:52,450
Can you guess what one of the problems is?
Yeah.

411
00:22:52,480 --> 00:22:54,430
We're overloading the equals sign,
right?

412
00:22:54,431 --> 00:22:58,000
We're treating something that has a
clear definition in mathematics to mean

413
00:22:58,360 --> 00:23:02,800
assignment, right? Assignment is not
equality. So that's a syntactic problem,

414
00:23:03,430 --> 00:23:05,260
but there's something
much deeper at work here,

415
00:23:05,261 --> 00:23:09,700
which is the semantic problem because
assignment does not exist in math.

416
00:23:10,510 --> 00:23:14,200
And for those of us who know
that sometimes state can
be a little bit hairy when

417
00:23:14,201 --> 00:23:15,460
you're writing code,
right?

418
00:23:15,461 --> 00:23:20,080
State is a known challenging thing for
young programmers to get a handle on and

419
00:23:20,081 --> 00:23:21,520
that's hard in a programming course.

420
00:23:21,700 --> 00:23:25,660
Now we're going to ask a math teachers
to teach that and at the same time

421
00:23:25,750 --> 00:23:28,960
sufficiently differentiated from the
equality concepts that they're learning in

422
00:23:28,961 --> 00:23:29,680
the math book.

423
00:23:29,680 --> 00:23:34,060
So this is a very tall order and it gets
worse because coding also doesn't have

424
00:23:34,061 --> 00:23:38,110
numbers and you kind of need numbers to
do math. What do I mean by that? Well,

425
00:23:38,111 --> 00:23:42,490
of course you guys know what one over
two is, right? What's one of your two

426
00:23:44,710 --> 00:23:46,730
zero,
right?

427
00:23:47,090 --> 00:23:51,240
Because in Java that's what you
get and you might say, oh, manual,

428
00:23:51,260 --> 00:23:53,570
you're just being, you know,
you're just being silly.

429
00:23:53,780 --> 00:23:56,630
A teacher needs to make sure that they're
teaching kids to declare things as a

430
00:23:56,631 --> 00:24:00,380
float, not Annette. Maybe that's
true, except in a math class.

431
00:24:00,381 --> 00:24:02,300
That's not part of the standards.

432
00:24:02,301 --> 00:24:05,570
And so now we're asking math teachers
to teach kids about these different

433
00:24:05,660 --> 00:24:07,880
partial representations of numbers,
which again,

434
00:24:08,030 --> 00:24:11,540
takes valuable time away from actually
teaching math. And that's a problem.

435
00:24:11,990 --> 00:24:15,140
But of course these
partial representations, no
matter which one you pick,

436
00:24:15,320 --> 00:24:16,940
you're going to get
burned one way or another.

437
00:24:17,570 --> 00:24:21,170
A math teacher will often teach
kids this important property.

438
00:24:21,530 --> 00:24:25,100
If I have three numbers a, B, and c,
these two expressions are equivalent.

439
00:24:25,280 --> 00:24:26,113
Y'All agree?

440
00:24:27,770 --> 00:24:30,560
What if a plus B is too big,

441
00:24:33,190 --> 00:24:37,230
right? Maybe a minus c buys us some
room before we have an overflow.

442
00:24:37,500 --> 00:24:38,640
So the bottom one competes,

443
00:24:38,641 --> 00:24:41,460
but the first one gives us
an error or maybe vice versa.

444
00:24:41,461 --> 00:24:42,870
The bottom one is an underflow error.

445
00:24:43,590 --> 00:24:47,970
So this statement that
these two expressions are
equivalent is now wrong in a

446
00:24:47,971 --> 00:24:49,260
math class.
It's wrong

447
00:24:50,850 --> 00:24:53,730
and it gets even worse because let's
say we use those floats, for example,

448
00:24:53,910 --> 00:24:55,650
we'll float introduce error,
right?

449
00:24:55,950 --> 00:24:59,510
Which means that these two
expressions are no longer equivalent.

450
00:24:59,530 --> 00:25:04,530
Either we've just broken associativity
and distributively in a math class and

451
00:25:06,301 --> 00:25:10,080
we're going to ask a math teacher
to teach it to. Even if we could.

452
00:25:10,290 --> 00:25:14,550
These are known obstacles for transfer,
so if your goal is teaching Algebra,

453
00:25:14,551 --> 00:25:18,870
this is deeply problematic. So what do
we do in bootstrap? Well, we decided,

454
00:25:18,871 --> 00:25:21,480
you know what? Functional programming
is a pretty decent way to do this.

455
00:25:21,480 --> 00:25:23,760
It enforces much more algebraic behavior.

456
00:25:24,000 --> 00:25:26,910
We chose a language that has a
strong numeric tower implementation,

457
00:25:26,911 --> 00:25:30,240
so numbers behave as close as it's
reasonably possible to the numbers that

458
00:25:30,241 --> 00:25:31,074
behave in the book.

459
00:25:31,320 --> 00:25:34,890
So we get a lot of the deep structural
similarities and then we actually do

460
00:25:34,891 --> 00:25:37,620
programming using word problems
taken from a math book.

461
00:25:38,220 --> 00:25:39,630
So we get some of that for free.

462
00:25:40,680 --> 00:25:44,580
But what I want to get back to is this
idea that the takeaway should not be

463
00:25:44,610 --> 00:25:47,250
functional programming is awesome,
right?

464
00:25:47,490 --> 00:25:50,610
Functional programming is
necessary if your goal is Algebra,

465
00:25:50,611 --> 00:25:51,870
but it is not sufficient.

466
00:25:51,960 --> 00:25:54,870
You also need a curriculum that uses
functional programming because the

467
00:25:54,871 --> 00:25:58,560
curriculum is critical if you want to
teach the process for performing those

468
00:25:58,561 --> 00:26:03,420
tasks. So I'm going to explain this
using an extremely scientific graph.

469
00:26:03,570 --> 00:26:07,530
So pay close attention. This is
very, very scientific. Um, uh,

470
00:26:07,531 --> 00:26:12,120
we can graph a student's frustration
level as a function of the number of lines

471
00:26:12,121 --> 00:26:16,680
of code that they've written. Um, and
typically it looks kind of like this.

472
00:26:17,190 --> 00:26:19,620
So you give kids a programming
challenge and you say, all right,

473
00:26:19,621 --> 00:26:24,330
kids solve it because they fire up the
editor and they're, they're starting here,

474
00:26:24,331 --> 00:26:26,010
they're going,
I don't know where to begin.

475
00:26:26,820 --> 00:26:29,810
That first line of code is sometimes
the hardest line for a kid to write.

476
00:26:29,860 --> 00:26:33,450
Sometimes even for an adult.
This is essentially called
the blank page syndrome.

477
00:26:33,540 --> 00:26:34,800
They're like,
w where do I begin?

478
00:26:35,490 --> 00:26:38,730
But eventually maybe with some prodding
from the instructor or maybe on their

479
00:26:38,731 --> 00:26:41,580
own, they start writing some code.
They're starting to get things going.

480
00:26:41,581 --> 00:26:46,530
Their frustration level goes down
and students are kind of like three d

481
00:26:46,531 --> 00:26:49,080
printers, right? They work
by additive manufacturing.

482
00:26:49,410 --> 00:26:53,160
So every time they encounter above or
every time they encounter a new feature

483
00:26:53,280 --> 00:26:57,180
with their solution, add more lines of
code, just more and more lines of code.

484
00:26:57,510 --> 00:27:00,510
And gradually the complexity goes
up and they hit a bug. And the,

485
00:27:00,570 --> 00:27:01,530
the way around the bug is,

486
00:27:01,680 --> 00:27:04,470
I'll just check for that case and I'll
add more lines of code and so on and so

487
00:27:04,471 --> 00:27:05,100
forth.

488
00:27:05,100 --> 00:27:08,790
But eventually this path
becomes unsustainable and
it gets harder and harder to

489
00:27:08,791 --> 00:27:11,490
fix those bugs. And eventually the
kid raises their hand and says,

490
00:27:11,730 --> 00:27:12,990
my program doesn't work.
I'm stuck.

491
00:27:14,220 --> 00:27:16,890
This is a common pattern in
computer science education.

492
00:27:16,891 --> 00:27:19,950
And those of us in the room who may have
done some teaching of computer science,

493
00:27:19,951 --> 00:27:21,720
may have seen some of this play out.

494
00:27:22,620 --> 00:27:26,400
Now how do you deal with that?
Well,

495
00:27:26,430 --> 00:27:28,570
let's look at any other discipline,
right?

496
00:27:29,520 --> 00:27:33,390
Every discipline works in a completely
different way from this idea. They have,

497
00:27:33,750 --> 00:27:34,860
uh,
like architects.

498
00:27:34,950 --> 00:27:38,460
Architects don't start by pouring concrete
and then just adding stuff until you

499
00:27:38,461 --> 00:27:43,440
get a building, right? They have three
d models. They have blueprints. Um,

500
00:27:43,920 --> 00:27:44,970
let's say you're building a,

501
00:27:45,030 --> 00:27:47,220
you're building a device and if you
are building the first mouse, right,

502
00:27:47,221 --> 00:27:50,610
you don't start by ordering
a manufacturing prototype
and then adding to it

503
00:27:50,611 --> 00:27:53,760
until it works, you probably think it
through with some circuit diagrams,

504
00:27:53,761 --> 00:27:55,760
maybe some other kind of model.
Um,

505
00:27:56,640 --> 00:28:01,560
the point is we don't just jump to the
solution and start hacking at it until it

506
00:28:01,561 --> 00:28:02,370
works.

507
00:28:02,370 --> 00:28:07,370
Typically what we do is we follow some
sort of multistage path to a solution,

508
00:28:08,400 --> 00:28:10,470
right? We start with one
thing and then we build on it.

509
00:28:10,560 --> 00:28:14,790
And that one thing is not the same
representation as the finished form.

510
00:28:14,970 --> 00:28:17,850
An architect might start with a blueprint,
not concrete.

511
00:28:18,360 --> 00:28:21,390
So we have these multiple representations
that we pass through on the way to a

512
00:28:21,391 --> 00:28:26,160
solution and each representation
represents a different perspective on the

513
00:28:26,161 --> 00:28:26,671
solution.

514
00:28:26,671 --> 00:28:30,720
So one representation might be great for
answering one category of questions and

515
00:28:30,721 --> 00:28:32,880
a different representation look
better for another category.

516
00:28:35,130 --> 00:28:39,060
This multidimensional view is also
present in software engineering. Right?

517
00:28:39,090 --> 00:28:43,190
Often there are specs, often
there are test cases. Often
there are long, you know,

518
00:28:43,300 --> 00:28:46,260
uh, uh, user interaction
specs that are written up.

519
00:28:46,440 --> 00:28:50,400
There are lots of things that go through
before you just instantly start coding.

520
00:28:51,810 --> 00:28:55,920
And it turns out that there's a
multidimensional view that every teacher,

521
00:28:55,950 --> 00:28:58,980
every math teacher cares about too,
which is functions,

522
00:28:59,880 --> 00:29:03,870
functions have multiple representations.
I can think of it as a symbolic form.

523
00:29:03,960 --> 00:29:05,460
I can think of it as a line on a graph.

524
00:29:05,461 --> 00:29:08,010
I can think of it as a mapping
between domain, I'm sorry,

525
00:29:08,060 --> 00:29:11,370
a table of inputs and outputs and
a mapping between domain and range.

526
00:29:11,490 --> 00:29:15,660
So every Algebra teacher out there
already understands this idea of multiple

527
00:29:15,661 --> 00:29:18,720
representations, multiple
stages, and multiple viewpoints.

528
00:29:19,290 --> 00:29:21,060
So what does this look like
in a programming class?

529
00:29:21,330 --> 00:29:25,110
So this is an actual worksheet from the
bootstrap curriculum that math teachers

530
00:29:25,111 --> 00:29:29,490
use. Um, it's got a fairly simple word
problem. This one is aimed at programming.

531
00:29:29,790 --> 00:29:32,490
So, uh, in the process
of making a video game,

532
00:29:32,520 --> 00:29:34,080
so every bootstrap kid builds a game.

533
00:29:34,350 --> 00:29:37,260
They need to write a function that
controls the movement of their target.

534
00:29:37,920 --> 00:29:40,770
So we have our word problem,
write a function update target,

535
00:29:40,860 --> 00:29:44,020
which takes in the targets x coordinate
and produces the next x coordinate,

536
00:29:44,200 --> 00:29:45,490
which is 50 pixels to the right.

537
00:29:47,110 --> 00:29:51,310
Step one contract and purpose statement.
We ask students to come up with a name,

538
00:29:51,520 --> 00:29:55,550
the domain and the range of that function
and to write a purpose statement,

539
00:29:55,560 --> 00:29:58,300
an English language summary
of what that function does,

540
00:29:59,720 --> 00:30:01,660
and then we ask them
to write some examples,

541
00:30:02,290 --> 00:30:07,290
update target given 10 the work it
should do is 10 plus 50 same thing for 20

542
00:30:08,800 --> 00:30:12,760
then we ask students to identify the
pattern, what's changing, what's the rule,

543
00:30:12,940 --> 00:30:15,400
and from there they can derive
sort of the finished form.

544
00:30:17,230 --> 00:30:20,200
Now as software engineers, this
looks somewhat familiar to us, right?

545
00:30:20,201 --> 00:30:24,430
That first stage kind of looks like
having them read a type specification and

546
00:30:24,431 --> 00:30:25,570
maybe a comment as well.

547
00:30:25,750 --> 00:30:30,520
That second part looks an awful lot like
writing test cases and then of course

548
00:30:30,521 --> 00:30:33,190
the final representation is
then you go and write the code.

549
00:30:33,370 --> 00:30:38,350
So students are doing all three.
A math teacher would totally disagree.

550
00:30:38,530 --> 00:30:41,530
A math teacher would say, no,
no, no, no, no, no. That first
step, I know what that is.

551
00:30:41,950 --> 00:30:44,530
It's domain and range.
It's thinking of a function.

552
00:30:44,680 --> 00:30:47,890
A function machine is mapping between
these two sets. And that second one,

553
00:30:47,920 --> 00:30:50,690
that's input output tables,
right? That's that little, uh,

554
00:30:50,910 --> 00:30:55,300
the tea table mapping between discrete
input and output pairs. And finally,

555
00:30:55,450 --> 00:30:56,470
I don't know what that code thing is,

556
00:30:56,471 --> 00:30:58,420
but this is clearly the
symbolic form or the function.

557
00:30:59,110 --> 00:31:03,370
So these representations
dovetail beautifully in the
context of a math class.

558
00:31:03,880 --> 00:31:05,890
So we've got multiple
representations of code,

559
00:31:06,070 --> 00:31:09,910
multiple representations of functions.
And with this as a scaffold,

560
00:31:10,060 --> 00:31:14,140
we're able to manage this frustration
because at every stage students know

561
00:31:14,141 --> 00:31:15,460
what's expected.
At first,

562
00:31:15,520 --> 00:31:18,160
the very first thing I do is write
the contract and purpose statement.

563
00:31:18,490 --> 00:31:21,700
And each one of these gives you a
different perspective on the problem,

564
00:31:21,701 --> 00:31:25,540
a different viewpoint, which allows
you to build into the next stage.

565
00:31:27,190 --> 00:31:28,870
So scaffolds are useful.

566
00:31:28,930 --> 00:31:33,930
This is the explicit task that t that
student teachers teach students how to do

567
00:31:35,620 --> 00:31:38,530
when they're programming the computer
that they can then transfer over to the

568
00:31:38,531 --> 00:31:41,830
domain of math. When I'm working on a
word problem, I'll use the same strategy.

569
00:31:43,030 --> 00:31:44,530
So when you look at things this way,

570
00:31:45,430 --> 00:31:49,030
we sort of have the dependency graph if
we want to satisfy these constraints.

571
00:31:49,750 --> 00:31:51,220
So there are three things that work here.

572
00:31:51,480 --> 00:31:53,470
You've got to know what programming
language you're teaching.

573
00:31:53,530 --> 00:31:56,440
If you want to teach computer science,
what language am I teaching?

574
00:31:56,920 --> 00:32:00,400
You also need to have a curriculum.
How am I going to teach it, right?

575
00:32:00,401 --> 00:32:02,470
What active activities are
kids going to go through?

576
00:32:02,890 --> 00:32:05,170
And then you need a pedagogy.
What will it look like?

577
00:32:05,171 --> 00:32:08,350
What is the explicit task
that students are learning?

578
00:32:09,550 --> 00:32:13,360
And often we just pick one off the shelf
and say, we're teaching scratch. Great.

579
00:32:13,390 --> 00:32:15,580
Now let's build a curriculum.
We're teaching python. Great.

580
00:32:15,610 --> 00:32:16,660
Let's figure out a pedagogy.

581
00:32:17,350 --> 00:32:19,480
But can you guess what the
dependency graph looks like here?

582
00:32:23,160 --> 00:32:23,790
Wow.

583
00:32:23,790 --> 00:32:25,830
Pedagogy first.
Anyone disagree?

584
00:32:28,670 --> 00:32:31,010
If we're to draw arrows here,
where do they go?

585
00:32:31,390 --> 00:32:33,460
I mean, it seems like you're
choosing language first.

586
00:32:33,630 --> 00:32:34,630
You're going to choose scratch

587
00:32:35,350 --> 00:32:37,650
if it right.
If someone says I'm going with scratched,

588
00:32:37,651 --> 00:32:38,620
they would choose language first.

589
00:32:38,621 --> 00:32:41,360
But let's say that you were starting
from a clean sheet of paper.

590
00:32:41,780 --> 00:32:43,700
We want to change CS education.

591
00:32:43,701 --> 00:32:46,670
We want to set up a class or an
after school club or whatever.

592
00:32:47,300 --> 00:32:49,460
What does the dependency
graph look like here?

593
00:32:49,461 --> 00:32:54,360
Is there a dominator or they codependent?
What do you think?

594
00:32:56,130 --> 00:32:59,190
Maybe language last? Well, you can
approach it from any perspective,

595
00:32:59,340 --> 00:33:02,340
but all three of them have
dependencies on each other.

596
00:33:03,360 --> 00:33:05,340
The moment you make one
choice in this graph,

597
00:33:05,341 --> 00:33:08,520
you instantly prune the tree
for what you can do elsewhere.

598
00:33:09,690 --> 00:33:14,070
So here's what we did to build a
curriculum that could be integrated into a

599
00:33:14,071 --> 00:33:15,480
mainstream Algebra class.

600
00:33:15,840 --> 00:33:19,980
So I heard a volunteer say maybe we
should start with a language, so sure,

601
00:33:19,981 --> 00:33:24,360
I'll start there. We knew it needed
to have easy unit tests, right?

602
00:33:24,361 --> 00:33:28,200
It needed to be really trivially easy for
kids to create that input output table.

603
00:33:28,410 --> 00:33:30,690
So that meant for us vertical line test,

604
00:33:30,691 --> 00:33:33,570
we really wanted to functional language
so that we wouldn't have to manage state.

605
00:33:34,410 --> 00:33:37,770
We also wanted the first class images
because images are engaging and fun.

606
00:33:37,771 --> 00:33:41,160
And it's really nice if kids can just
write some code and see the output right

607
00:33:41,161 --> 00:33:44,760
away as a computed output
from the function rather
than worrying about setting

608
00:33:44,761 --> 00:33:48,240
up a buffer somewhere and then
retrieving it. But most importantly,

609
00:33:48,330 --> 00:33:49,800
we wanted mathematical semantics.

610
00:33:49,801 --> 00:33:52,800
We wanted to have that deep
structural similarity between tasks.

611
00:33:56,470 --> 00:34:00,020
The main reason kids are
scared of math class,

612
00:34:01,370 --> 00:34:04,520
they were scared of the
previous math class in the
previous manifest before that.

613
00:34:04,810 --> 00:34:09,350
But what the kids think math
is his arithmetic. And as
soon as they see numbers,

614
00:34:09,410 --> 00:34:13,580
their palms start sweating.
So when I've taught this kind of thing,

615
00:34:13,940 --> 00:34:15,320
um,
uh,

616
00:34:15,560 --> 00:34:19,070
we started with images on the first day
of class and we'd get to numbers about

617
00:34:19,100 --> 00:34:20,060
week three or four.

618
00:34:21,010 --> 00:34:23,140
Yeah.
So making images easily accessible,

619
00:34:23,141 --> 00:34:26,800
lowering that barrier for some kids
can be a huge motivational boost.

620
00:34:26,801 --> 00:34:30,970
So these were the criteria we wanted
that led us to choose the language we

621
00:34:31,020 --> 00:34:33,160
wanted. And I just want to point
out, we started with the criteria,

622
00:34:33,161 --> 00:34:35,800
not the language.
We started with those three things.

623
00:34:35,801 --> 00:34:37,270
And from there we picked our language.

624
00:34:37,271 --> 00:34:40,060
We didn't decide we were in love with
less than we wanted less per example,

625
00:34:40,840 --> 00:34:44,500
but for our pedagogy we used
structured problem solving, right?

626
00:34:44,501 --> 00:34:48,640
Because we want it to get that explicit
task and that problem solving strategy

627
00:34:48,641 --> 00:34:50,320
had to be multi representational.

628
00:34:50,590 --> 00:34:53,920
It had to use worked examples because
that's the pedagogy that math teachers are

629
00:34:53,921 --> 00:34:57,790
familiar with and we actually borrowed
it from a phenomenal program that's been

630
00:34:57,791 --> 00:35:01,300
running for more than 20 years at the
university level called program by design.

631
00:35:01,570 --> 00:35:04,090
So it's an effective pedagogy
that's been proven successful.

632
00:35:04,210 --> 00:35:08,110
We ported it to middle and high school
math and then finally you need a

633
00:35:08,111 --> 00:35:09,580
curriculum and by the way,

634
00:35:09,581 --> 00:35:11,740
for those of you that are interested
in teaching computer science,

635
00:35:11,741 --> 00:35:13,540
maybe at a local school
or at a summer program,

636
00:35:13,720 --> 00:35:17,500
a curriculum is not a list of
activities that is not a curriculum.

637
00:35:17,980 --> 00:35:21,960
A curriculum involves lesson plans,
homework assignments, exit slips,

638
00:35:21,961 --> 00:35:23,020
a warm up activities.

639
00:35:23,200 --> 00:35:26,980
It's aligned to national and state
standards so that a teacher knows where

640
00:35:26,981 --> 00:35:30,610
things fit. If you're expecting that
teacher to go and build this on their own,

641
00:35:30,611 --> 00:35:33,550
looking at a list of activities,
it's not going to fly because guess what?

642
00:35:33,580 --> 00:35:34,690
Teachers are really busy

643
00:35:36,400 --> 00:35:39,870
and the curriculum developed has a
narrative final project that ties together

644
00:35:39,900 --> 00:35:41,070
everything students have learned.

645
00:35:41,580 --> 00:35:46,580
Every student in bootstrap builds a video
game of their own invention and so at

646
00:35:46,711 --> 00:35:50,270
the end of the class, kids can do
a video game launch party, right?

647
00:35:50,280 --> 00:35:53,100
It's sort of like a science fair for
the math department where they show off

648
00:35:53,101 --> 00:35:55,020
what they built in their math class.

649
00:35:55,260 --> 00:35:58,080
We believe that Algebra is the moment
where math becomes creative, right?

650
00:35:58,081 --> 00:35:59,550
You're literally making
your own functions.

651
00:35:59,551 --> 00:36:01,860
You're building your own
mathematical tools. Well,

652
00:36:01,950 --> 00:36:05,100
let's make a video game out of it and
so you'll notice that what kids are

653
00:36:05,101 --> 00:36:08,340
presenting here is not showing off
their cool graphics for their games.

654
00:36:08,341 --> 00:36:11,910
Although they do show that we
actually have kids do code reviews,

655
00:36:13,530 --> 00:36:14,970
parents, friends, teachers,

656
00:36:14,971 --> 00:36:17,910
and sometimes visiting engineers
ask students questions,

657
00:36:18,000 --> 00:36:19,440
why did you do it this way?

658
00:36:19,560 --> 00:36:22,200
What would you have to change to
add this feature or that feature?

659
00:36:22,500 --> 00:36:26,580
And students are required to look at
which representation makes the most sense.

660
00:36:26,700 --> 00:36:30,360
To answer that question, is it
my unit tests? Is it my, my, uh,

661
00:36:30,390 --> 00:36:32,730
type specification or am I
going straight to the code?

662
00:36:33,210 --> 00:36:36,120
So this is something that we're doing
at the middle and high school level

663
00:36:36,180 --> 00:36:39,030
because we're building on something
that math teachers already have them do.

664
00:36:39,270 --> 00:36:42,060
Kids are used to going up to the
front of the room and explaining their

665
00:36:42,061 --> 00:36:42,894
solutions.

666
00:36:44,000 --> 00:36:44,833
So

667
00:36:45,330 --> 00:36:46,950
that's what we do at bootstrap.

668
00:36:47,070 --> 00:36:50,420
That's the strategy that
we've taken and you know,

669
00:36:50,550 --> 00:36:53,670
we believe deeply in
equity scale and rigor,

670
00:36:53,671 --> 00:36:55,320
and we can do this not just to Algebra,

671
00:36:56,070 --> 00:36:58,560
but also through additional
curricular offerings.

672
00:36:58,800 --> 00:37:01,980
So we've partnered with the American
Association of Physics Teachers to build a

673
00:37:01,981 --> 00:37:05,460
bootstrap physics module that does the
same thing for a physics class that we've

674
00:37:05,461 --> 00:37:06,570
already done for Algebra.

675
00:37:07,020 --> 00:37:10,230
And we're also working on a data science
module that can be integrated into a

676
00:37:10,231 --> 00:37:11,580
high school statistics class.

677
00:37:11,790 --> 00:37:16,110
Or there are plenty of other classes
that use spreadsheets, right?

678
00:37:16,290 --> 00:37:19,710
Business classes, civics classes, right.

679
00:37:19,711 --> 00:37:21,600
There are students who might want an ask.

680
00:37:22,110 --> 00:37:25,770
I think stop and Frisk is racist or
I think it's not. And guess what?

681
00:37:25,800 --> 00:37:29,280
That database is publicly available.
And in the data science curriculum,

682
00:37:29,370 --> 00:37:33,150
teachers can have students answer that
question themselves by viewing programs

683
00:37:33,151 --> 00:37:34,860
as questions they ask of data.

684
00:37:35,430 --> 00:37:38,220
And by aligning it to the standards
that teachers already have to teach,

685
00:37:38,430 --> 00:37:40,410
we can embed this in a mainstream class.

686
00:37:41,430 --> 00:37:44,400
Our vision is that a school should
be able to give kids at least three,

687
00:37:44,401 --> 00:37:47,910
if not more, entryways into computing
throughout their high school career,

688
00:37:48,090 --> 00:37:51,310
all without having to find room in
the budget for a new teacher or woman.

689
00:37:51,330 --> 00:37:56,040
The schedule for a new course
if you want to get involved,

690
00:37:56,041 --> 00:37:59,830
if there's tons of things that uh,
there's tons of places to help out.

691
00:38:00,040 --> 00:38:02,800
We built compilers, we create
programming language, we live on the web.

692
00:38:02,920 --> 00:38:05,710
All of our stack is built
on Google technologies.

693
00:38:05,830 --> 00:38:07,750
So if you're interested in helping out,
but you're like,

694
00:38:07,840 --> 00:38:09,610
I kind of want to focus
on the engineering side,

695
00:38:09,820 --> 00:38:13,120
there's a ton of engineering help we
could use. If you want to be an advocate,

696
00:38:13,121 --> 00:38:14,680
talk to your local school or district.

697
00:38:14,710 --> 00:38:18,460
Ask them why their math teacher isn't
using computer science when they could

698
00:38:19,210 --> 00:38:22,270
spread the word at the office
and of course if you'd like
to contribute, you can.

699
00:38:22,360 --> 00:38:23,200
Our website is here.

700
00:38:24,980 --> 00:38:26,000
I want to end on this note.

701
00:38:27,490 --> 00:38:32,110
I think Google more than any other
company in the world right now understands

702
00:38:32,111 --> 00:38:36,190
the importance of disciplined.
Sometimes engineering.

703
00:38:36,910 --> 00:38:40,210
I mean you guys have thousands
of engineers working on
data integrity, right?

704
00:38:40,211 --> 00:38:43,000
Just to make sure that one file doesn't
get corrupted when it's duplicated

705
00:38:43,240 --> 00:38:47,800
across the network. Users don't often
see the magic that's going on there,

706
00:38:48,100 --> 00:38:51,400
but Google understands that that kind
of stuff is critical for building a

707
00:38:51,401 --> 00:38:55,720
scalable infrastructure.
So often in the tech sector,

708
00:38:56,260 --> 00:38:59,980
when we approach education,
we stop thinking about it
as an engineering problem.

709
00:39:00,520 --> 00:39:03,340
We'll just dive into what we were taught,
what we think is cool,

710
00:39:03,341 --> 00:39:06,670
what we think kids will enjoy.
We lose the engineering side of things.

711
00:39:08,140 --> 00:39:10,990
This baffles us at bootstrap.
We've never understood why.

712
00:39:12,130 --> 00:39:14,830
And here to tell you that computer
science education is one of the most

713
00:39:15,070 --> 00:39:17,470
sophisticated engineering
problems in existence.

714
00:39:17,650 --> 00:39:20,470
It's waiting for someone to
step in and do some of the deep,

715
00:39:20,560 --> 00:39:25,560
possibly unsexy engineer and work
to create a solution at bootstrap.

716
00:39:26,170 --> 00:39:29,620
We've built one of the largest and most
diverse cs education programs in the

717
00:39:29,621 --> 00:39:33,820
nation and we did it at a fraction of
the cost and with a team of four human

718
00:39:33,821 --> 00:39:34,654
beings.

719
00:39:34,750 --> 00:39:37,950
And we did it because we look at the
problem like engineers working at startups

720
00:39:37,951 --> 00:39:41,980
scale and imagine what a
company like Google could do.

721
00:39:43,030 --> 00:39:47,320
So I want to leave it there. I'm happy
to answer any questions you have.

722
00:39:47,560 --> 00:39:50,530
This is an engineering problem that
is built for a company like Google.

723
00:39:58,690 --> 00:40:01,060
Absolutely, yes. So the question
was do we test the kids?

724
00:40:01,061 --> 00:40:04,990
And I'm so glad you asked. That is
literally my secret. Last slide. Whoops,

725
00:40:06,460 --> 00:40:07,293
load.

726
00:40:11,600 --> 00:40:14,150
This should be mirroring. Can you
guys see my screen here? Okay, great.

727
00:40:14,151 --> 00:40:15,650
So the answer is yes.

728
00:40:15,680 --> 00:40:20,510
You better believe we test the kids and
in fact the tests that we use for our

729
00:40:20,511 --> 00:40:25,040
initial study all involve questions drawn
from national and state standardized

730
00:40:25,041 --> 00:40:27,020
tests. Not because we're in
love with standardized tasks,

731
00:40:27,050 --> 00:40:29,690
but because we understand that decision
makers want to see that kind of stuff.

732
00:40:30,140 --> 00:40:31,960
And what we've seen is the testicle,

733
00:40:31,961 --> 00:40:36,961
he significant evidence of very large
gains on three tasks that we've looked at

734
00:40:37,251 --> 00:40:39,290
so far. Function, composition,

735
00:40:39,680 --> 00:40:43,220
solving word problems and matching
between representations of functions.

736
00:40:45,850 --> 00:40:49,860
Okay, so this is, this is pre and post
the kids who got this great collaboration.

737
00:40:49,870 --> 00:40:52,930
The kids, you got a standard
Algebra credit lower table.

738
00:40:52,931 --> 00:40:56,110
Is that the upper table is pretty imposed,
is that correct?

739
00:40:56,550 --> 00:41:00,810
No, the lower table is a demographic
distribution. So this table,

740
00:41:00,840 --> 00:41:03,810
so this table right here
is showing gains pre, post,

741
00:41:03,870 --> 00:41:05,100
not looking at a control group.

742
00:41:05,490 --> 00:41:09,990
I will say that this is the
first curriculum ever to
have demonstrated evidence

743
00:41:09,991 --> 00:41:12,540
of transfer.
We're gathering additional data.

744
00:41:12,541 --> 00:41:15,200
We're building a much larger data
set that includes control groups.

745
00:41:15,201 --> 00:41:17,010
So we'll be able to
compare apples and oranges.

746
00:41:17,340 --> 00:41:20,610
But historically this belief that learning
to code will help you in math class

747
00:41:20,640 --> 00:41:21,720
has not been true.

748
00:41:22,710 --> 00:41:26,100
The simple fact that this table exists
was something we're extremely proud of.

749
00:41:26,670 --> 00:41:27,540
We've been able to make that happen.

750
00:41:29,170 --> 00:41:30,003
Great question.
Yeah.

751
00:41:34,220 --> 00:41:36,770
Staff for years afterwards
when they go to college,

752
00:41:36,790 --> 00:41:38,000
when they actually get it for a job.

753
00:41:38,300 --> 00:41:42,830
Unfortunately, maintaining data
on minors is extremely complex.

754
00:41:43,070 --> 00:41:46,640
I mean, I'm with you. I, I wish I could
stand here and say we've tracked these,

755
00:41:46,670 --> 00:41:50,340
these thousands of kids and we know
what happens to them. We don't, um,

756
00:41:50,390 --> 00:41:54,500
what I can say is the schools that have
adopted, bootstrap continue to use it. Um,

757
00:41:55,100 --> 00:41:59,030
and I mean it's, it's not hard data.
It's proxy and anecdotes at this point,

758
00:41:59,031 --> 00:41:59,864
so I can't answer that.

759
00:42:00,120 --> 00:42:03,190
Yeah. Yeah. Can you talk a
little bit about your choice of,

760
00:42:04,270 --> 00:42:07,870
here's a lot of conversation about
what the AP who doing muses. Dictation.

761
00:42:08,470 --> 00:42:12,360
I graduated from high school
pretty recently and a lot
I talk about shifting the

762
00:42:12,370 --> 00:42:15,980
bathroom. Teaching pocket. You program
with your job did use your pipeline.

763
00:42:18,020 --> 00:42:19,700
If you teach it through an autogrow class,

764
00:42:19,760 --> 00:42:21,850
it makes sense that you use some things.

765
00:42:21,851 --> 00:42:25,520
I'm with less list or something
to make it useful to Algebra.

766
00:42:25,870 --> 00:42:29,360
But is it still useful outside of
that class in an engineering context?

767
00:42:30,050 --> 00:42:33,020
So I heard sort of two questions in there.

768
00:42:33,021 --> 00:42:35,960
So one of them you were saying it's
sort of how did we choose our language,

769
00:42:36,080 --> 00:42:38,150
right? What, what factors go
into it? And the second is,

770
00:42:38,330 --> 00:42:40,730
is functional programming
useful outside of a math class?

771
00:42:41,100 --> 00:42:43,970
No sugar itself,
but the way that you teach it,

772
00:42:44,320 --> 00:42:47,970
does it make sense to students that
would be useful outside of the context of

773
00:42:48,000 --> 00:42:48,830
that?

774
00:42:48,830 --> 00:42:50,180
Absolutely. Right. In fact,

775
00:42:50,240 --> 00:42:53,900
the program by design curriculum that I
mentioned is used in universities around

776
00:42:53,901 --> 00:42:54,734
the world.

777
00:42:54,770 --> 00:42:58,490
They actually use the same language that
we're using and we borrowed the same

778
00:42:58,520 --> 00:43:01,450
design recipe.
So a student in,

779
00:43:01,451 --> 00:43:05,270
in Boston can go over to northeastern
university and they will see, oh my God,

780
00:43:05,330 --> 00:43:10,070
the freshmen cs majors are doing the
same work that we do. Um, and in fact,

781
00:43:10,490 --> 00:43:12,660
I don't know if you want to, if you
want to mention this because there's,

782
00:43:12,680 --> 00:43:14,150
this is a parallel in New York as well.

783
00:43:16,170 --> 00:43:17,460
Well,
I'm no longer enter Delphi.

784
00:43:17,470 --> 00:43:21,360
So how long are you using this approach
in their, in their CF zero class.

785
00:43:23,210 --> 00:43:25,900
But it was for, for a number of
years while I was being here.

786
00:43:26,050 --> 00:43:30,600
That's a Delphi University.
So that mid level, uh,

787
00:43:30,930 --> 00:43:35,930
liberal arts school where I was on the
CS faculty and we had a CF zero class

788
00:43:37,411 --> 00:43:39,960
programming for poets
programming for non majors.

789
00:43:40,320 --> 00:43:44,550
And we did it this way and we had a fair
number of students who had such a good

790
00:43:44,551 --> 00:43:47,120
time that they became cs managers.
Um,

791
00:43:47,670 --> 00:43:50,490
and they seem to learn, uh, learned a lot.

792
00:43:50,800 --> 00:43:51,071
So,

793
00:43:51,071 --> 00:43:54,100
so there are parallels directly into a
number of universities around the world.

794
00:43:54,101 --> 00:43:56,620
But more, more importantly than that, yes.

795
00:43:56,621 --> 00:43:58,660
Functional programming isn't a
whole bunch of companies as well.

796
00:43:58,661 --> 00:44:01,840
It's used in plenty of
industrial contacts. So the
language itself transfers.

797
00:44:02,280 --> 00:44:06,820
But yeah, especially big data. That's
right. But more significantly this,

798
00:44:06,910 --> 00:44:09,250
this approach that we're using,
the structure, problem solving,

799
00:44:09,490 --> 00:44:11,410
writing a type specification.
And you know,

800
00:44:11,411 --> 00:44:14,740
thinking through your unit tests
deeply before you dive into the code,

801
00:44:15,070 --> 00:44:18,130
that's a high level skill that's relevant
no matter what language you're using,

802
00:44:18,131 --> 00:44:22,060
right? I mean, I, I went to the bathroom
before giving this talk and you know,

803
00:44:22,061 --> 00:44:26,110
I think Google is famous for your testing
on the toilet pages. Um, you know,

804
00:44:26,680 --> 00:44:29,710
this is something that that is
transferable across languages, right?

805
00:44:29,711 --> 00:44:34,050
This is where you get to explicit a
process that transfers everywhere.

806
00:44:34,520 --> 00:44:38,580
Um, as far as how do we choose our
language or like why, you know,

807
00:44:39,150 --> 00:44:41,790
I think this debate about should we
use python or should we use Java?

808
00:44:42,070 --> 00:44:44,430
It needs to be about what
is our learning goal?

809
00:44:45,870 --> 00:44:49,620
Computer Science teachers are the only
teachers I can think of of any discipline

810
00:44:49,740 --> 00:44:53,550
that when you ask them, what do
you teach there answer is the tool.

811
00:44:54,810 --> 00:44:58,740
Imagine if I asked a math teacher, what
do you teach? They might say Algebra,

812
00:44:58,741 --> 00:45:03,090
geometry, Calculus, right? They're
not going to say calculator.

813
00:45:04,070 --> 00:45:07,440
If I ask a chemistry teacher, what
do you teach? Maybe Orgo, right?

814
00:45:07,441 --> 00:45:09,330
Maybe some physical chemistry.
You,

815
00:45:09,470 --> 00:45:12,600
you'd think they were crazy if they
answered and said, I teach bunsen burner.

816
00:45:13,530 --> 00:45:16,200
But when you ask your average cs teacher,
what do you teach?

817
00:45:16,230 --> 00:45:18,900
There answer is Python Scratch Java.

818
00:45:19,510 --> 00:45:21,930
It's the only discipline where they self
identify but the tool and that's the

819
00:45:21,931 --> 00:45:22,764
problem.

820
00:45:22,800 --> 00:45:26,490
We cannot folk overfocus on the tool
because there's this dependency graph that

821
00:45:26,491 --> 00:45:31,270
requires that we think a little
more broadly. Other questions?

822
00:45:31,271 --> 00:45:32,104
Yeah.
Yeah.

823
00:45:32,490 --> 00:45:35,420
Initially you had said you were
an afterschool program then

824
00:45:37,610 --> 00:45:42,610
maybe the changes were that we were
really large and then you shop.

825
00:45:43,140 --> 00:45:43,973
I want to

826
00:45:45,300 --> 00:45:48,690
expand on what happened and why.

827
00:45:49,070 --> 00:45:50,810
Yeah, sure. So we uh,

828
00:45:50,840 --> 00:45:53,690
we actually partnered with a
terrific afterschool program
called citizen schools.

829
00:45:53,691 --> 00:45:54,740
They are national in scope.

830
00:45:54,741 --> 00:45:57,200
They're very active in New York and I
know Google has done some work with them

831
00:45:57,201 --> 00:46:00,320
in the past on third great
shooters back then. In fact,

832
00:46:00,321 --> 00:46:01,940
I was a citizen schools
employee at one point.

833
00:46:02,630 --> 00:46:05,750
Here's what we noticed when we were
doing an afterschool programming club.

834
00:46:06,440 --> 00:46:10,370
So first we needed volunteers,
so we had to recruit tons of engineers,

835
00:46:10,371 --> 00:46:15,230
which is not easy. Second engineers are
busy people and sometimes life happens,

836
00:46:15,231 --> 00:46:17,180
right? You have a ship
deadline, the build is broken.

837
00:46:17,181 --> 00:46:21,290
So one engineer has to piece out and
can't make it that day. So what do you do?

838
00:46:21,920 --> 00:46:23,660
You have redundancy.
You recruit three,

839
00:46:23,661 --> 00:46:26,510
four or five engineers to make
sure that at least one or two,

840
00:46:26,511 --> 00:46:28,220
one of them can be there every single day.

841
00:46:28,910 --> 00:46:33,410
So we have to recruit five engineers
just to teach this afterschool program,

842
00:46:33,411 --> 00:46:38,270
which is typically how many kids?
Maybe 20 maybe 30 if that.

843
00:46:38,890 --> 00:46:41,570
I've got it. It's like, yeah. So,

844
00:46:41,780 --> 00:46:45,410
so we're spending all of our time
recruiting engineers who need a lot of

845
00:46:45,411 --> 00:46:48,260
training to teach, right? You
guys are experts at the content,

846
00:46:48,290 --> 00:46:49,520
but teaching is hard too.

847
00:46:49,940 --> 00:46:54,140
So we're investing a ton and trending
engineer's five engineers to eight kids,

848
00:46:54,800 --> 00:46:57,020
and now those engineers,
once you've trained to them,

849
00:46:57,590 --> 00:47:01,070
they come back every semester of forever.
Right? They just keep teaching. No, what?

850
00:47:01,550 --> 00:47:03,800
Yeah. Right. So then they get
busy. They leave the project.

851
00:47:04,310 --> 00:47:09,050
So you have to recruit enormous numbers
of volunteers who you lose almost

852
00:47:09,051 --> 00:47:12,470
instantly just to reach 20 kids.
If you're lucky,

853
00:47:13,100 --> 00:47:17,630
a single public school math teacher is
going to reach 80 to 100 kids in a single

854
00:47:17,630 --> 00:47:20,330
year. And if they like what they're
doing, if they believe in the program,

855
00:47:20,660 --> 00:47:25,550
they'll do it forever until they die or
retire, whichever one comes first. Right?

856
00:47:25,551 --> 00:47:27,920
So if you're thinking
about scale as a priority,

857
00:47:28,550 --> 00:47:31,210
afterschool is amazingly flexible.
There's a lot to recommend it,

858
00:47:31,270 --> 00:47:32,620
but scale is not one of them.

859
00:47:35,600 --> 00:47:38,880
Yeah.
Was one

860
00:47:41,740 --> 00:47:43,910
you're showing like the math word in here.
Like what about

861
00:47:46,160 --> 00:47:46,993
separate metric?

862
00:47:49,730 --> 00:47:53,000
So I mean, essentially we use
summit of assessment, I'm sorry,

863
00:47:53,001 --> 00:47:54,500
formative assessment
throughout the curriculum.

864
00:47:54,620 --> 00:47:59,360
So once we spend about two lessons
teaching this explicit task,

865
00:47:59,361 --> 00:48:00,800
this multi representational task,

866
00:48:01,520 --> 00:48:04,910
the moment that's over every single
thing in the curriculum is a word problem

867
00:48:05,210 --> 00:48:08,780
where kids are given a problem to a
problem statement or problem to solve and

868
00:48:09,410 --> 00:48:12,830
got. And so we're able to assess
as they go through the program,

869
00:48:13,290 --> 00:48:17,750
are they able to complete it? Where are
they stuck? Um, to be really upfront,

870
00:48:17,990 --> 00:48:22,670
the level of programming we teach in our
Algebra module is fairly small, right?

871
00:48:22,671 --> 00:48:25,370
We're not doing object oriented
programming. We're not doing, you know,

872
00:48:25,371 --> 00:48:27,190
recursion for example.
Um,

873
00:48:27,680 --> 00:48:31,490
but we have an extraordinarily high
percentage of students who finished the

874
00:48:31,491 --> 00:48:31,911
program,

875
00:48:31,911 --> 00:48:36,890
build a video game on their own and we
use that as a proxy for their learning to

876
00:48:36,891 --> 00:48:37,724
program.

877
00:48:37,850 --> 00:48:41,210
There are some learning studies that were
in the process of doing the reason we

878
00:48:41,211 --> 00:48:41,480
haven't,

879
00:48:41,480 --> 00:48:45,080
we didn't start with those are because
for us we felt that showing math outcomes

880
00:48:45,081 --> 00:48:47,080
was the most immediate concern.
Um,

881
00:48:47,450 --> 00:48:51,200
but we're gathering data and we're looking
to report on the CS learning outcomes.

882
00:48:54,280 --> 00:48:58,240
I was a teacher
before.

883
00:48:58,241 --> 00:48:59,770
If you've touched it shows
it's something that I should,

884
00:48:59,780 --> 00:49:02,720
I'm just curious like what do you think
are the biggest factors that we just

885
00:49:02,721 --> 00:49:04,650
schools adopting or not adopting?
Bootstrapper

886
00:49:07,380 --> 00:49:09,930
my school's willingness to train factors.

887
00:49:10,480 --> 00:49:11,950
So, right. I mean, right now our,

888
00:49:12,100 --> 00:49:15,310
our capacity problem is we do not have
enough staff to train teachers fast

889
00:49:15,311 --> 00:49:17,810
enough. There are far more teachers
who are looking for training,

890
00:49:17,811 --> 00:49:21,670
then we can train in a
year. Um, but as far as the
bottleneck at the school, right.

891
00:49:21,671 --> 00:49:24,880
What makes a school
successful? Um, I mean,

892
00:49:24,881 --> 00:49:28,480
I think a significant part of that is the
administration needs to believe in the

893
00:49:28,481 --> 00:49:31,540
program because if a math
teacher comes to our training,

894
00:49:31,541 --> 00:49:34,300
gets excited and then it goes back to the
classroom and start saying, all right,

895
00:49:34,301 --> 00:49:37,960
we're going to do this. And the
principal looks in the door and says,

896
00:49:38,440 --> 00:49:41,800
why are kids making video games?
Right? Why are they even on a computer?

897
00:49:42,400 --> 00:49:43,570
That principle,
you know,

898
00:49:43,660 --> 00:49:47,740
justifiably might be hesitant about
somebody messing with their math scores.

899
00:49:48,040 --> 00:49:50,350
And so often we hear from
teachers who are saying,

900
00:49:50,920 --> 00:49:52,330
I really want to teach the program.

901
00:49:52,390 --> 00:49:54,250
I wasn't able to get the
administrative buy in.

902
00:49:54,610 --> 00:49:59,440
So there's a messaging issue for us.
There is something of a bottleneck around,

903
00:49:59,560 --> 00:49:59,801
look,

904
00:49:59,801 --> 00:50:04,801
some schools do not have even enough
computers for a once a week laptop card

905
00:50:05,980 --> 00:50:07,330
that's starting to disappear,
right?

906
00:50:07,331 --> 00:50:10,400
Were the hardware problem is
starting to get solved. Um,

907
00:50:11,350 --> 00:50:12,860
but I think the,
the,

908
00:50:12,910 --> 00:50:16,750
the third most common issue
is a sense of teacher support.

909
00:50:17,470 --> 00:50:20,950
So this is an area in particular where
Google can be enormously instrumental,

910
00:50:21,100 --> 00:50:21,340
right?
It's,

911
00:50:21,340 --> 00:50:24,760
there's tons of teachers using bootstrap
in New York City public schools right

912
00:50:24,761 --> 00:50:25,594
now.

913
00:50:25,720 --> 00:50:30,710
I would say a percentage of them are
thinking to themselves, all right,

914
00:50:30,711 --> 00:50:31,520
I'm doing it.

915
00:50:31,520 --> 00:50:34,550
It sure would be cool if I could have
an engineer just come and visit my class

916
00:50:34,551 --> 00:50:38,480
like once or twice just to like have
my back and to talk to my kids. Right.

917
00:50:38,481 --> 00:50:38,991
That boost,

918
00:50:38,991 --> 00:50:43,991
that sense of there could be someone I
could call upon that would be tremendous.

919
00:50:44,690 --> 00:50:46,130
Even if that teacher never calls on you,

920
00:50:46,280 --> 00:50:49,820
just knowing that they could can be the
difference between them teaching it or

921
00:50:49,821 --> 00:50:53,180
not teaching it. Um, so I think that's,
those are the top three bottlenecks

922
00:50:56,910 --> 00:50:59,430
I think people, I hope people would, yeah.

923
00:50:59,970 --> 00:51:00,803
Google search month.

924
00:51:01,040 --> 00:51:03,770
There you go. Oh, is it perfect? Yes sir.

925
00:51:03,950 --> 00:51:08,140
I did teach for America and I
taught one or hostile years. Um,

926
00:51:08,141 --> 00:51:13,030
so just like try to put myself in the
shoes and I do like kind of touched on it.

927
00:51:13,031 --> 00:51:13,400
Just stand,

928
00:51:13,400 --> 00:51:18,400
don't like teacher buy in
is very intriguing because
I can see at least like the

929
00:51:19,151 --> 00:51:21,520
teachers in my school,
ones that had been there for 30 years,

930
00:51:21,580 --> 00:51:24,400
every year there's some new way to
teach math and they're like, listen,

931
00:51:24,401 --> 00:51:26,410
I've got to town by now
and it kind of discarded.

932
00:51:28,000 --> 00:51:31,560
But like on a bigger scale and your
district kind of federal where,

933
00:51:31,570 --> 00:51:32,700
where are we on?

934
00:51:32,740 --> 00:51:36,400
Because eventually you feel like we
get to the point where it is curriculum

935
00:51:36,401 --> 00:51:40,780
wouldn't be required or like it's so
ingrained in our society that we need to

936
00:51:40,781 --> 00:51:44,500
have it on kind of a bigger level.
Like where are we?

937
00:51:45,530 --> 00:51:49,980
We're, we're not even at the
starting line. Um, so, so
in terms of teacher buy in,

938
00:51:50,610 --> 00:51:53,730
that's something that we excel at.
I'm on a former math teacher.

939
00:51:53,731 --> 00:51:55,950
So in our trainings we, our
math teacher, the math teacher,

940
00:51:55,951 --> 00:51:58,900
we focused heavily on the math.
Typically we don't mention the con,

941
00:51:58,950 --> 00:52:01,010
the computer science learning
outcomes because we're,

942
00:52:01,011 --> 00:52:05,400
we're there talk math and the veteran
teachers buy in at a deeper level than the

943
00:52:05,401 --> 00:52:09,120
young bucks because the young teachers
are like, finally computers. Cool.

944
00:52:09,480 --> 00:52:11,220
They're not necessarily thinking
about the math connection.

945
00:52:11,700 --> 00:52:13,200
The veteran teachers see it.
So we've,

946
00:52:13,210 --> 00:52:16,260
we've been fairly successful there and
it took 10 years for us to get to that

947
00:52:16,261 --> 00:52:20,400
point. So it's not an easy thing to do.
Um, but as far as the federal level goes,

948
00:52:21,600 --> 00:52:24,570
it's a hard engineering problem.
Right?

949
00:52:24,660 --> 00:52:29,610
Scale comes not from getting to 10
million kids in your first year.

950
00:52:29,970 --> 00:52:32,880
It comes from building
up a pool of teachers.

951
00:52:33,000 --> 00:52:35,070
Maybe you only train a
thousand teachers a year,

952
00:52:35,160 --> 00:52:38,280
but every teacher you train keeps
doing it until they die or retire.

953
00:52:39,000 --> 00:52:42,180
Right now the trend in scale is how
do get to 10 million kids in year one.

954
00:52:42,930 --> 00:52:47,280
And if that's the threshold, guess what?
Youtube videos we'll do youtube videos,

955
00:52:47,281 --> 00:52:50,160
the teach program math through programming
like that. It's quick, it's easy,

956
00:52:50,161 --> 00:52:50,994
it's cheap,

957
00:52:51,360 --> 00:52:55,350
you don't get the rigor and you don't
get teacher buy in for that either. Um,

958
00:52:55,410 --> 00:52:56,243
I think,

959
00:52:56,580 --> 00:53:00,900
I think a lot of governors have made
some really terrific proclamations about

960
00:53:00,901 --> 00:53:04,350
getting everyone to code and then it
falls to the superintendents and their

961
00:53:04,351 --> 00:53:09,090
states to figure out how to make that
happen. And what winds up happening is,

962
00:53:09,810 --> 00:53:13,080
well, we used to have this
class on PowerPoint and excel.

963
00:53:13,350 --> 00:53:17,280
That's kind of like a program in class.
Let's have that count to see us.

964
00:53:17,310 --> 00:53:21,750
So sometimes we're repurposing an
existing class and calling it cs or we're

965
00:53:21,751 --> 00:53:25,680
doing hour of code one hour a year,
kid does it.

966
00:53:26,370 --> 00:53:30,690
We taught computer science check.
Um, and we'll take the, you know,

967
00:53:30,691 --> 00:53:33,450
the elective route,
which has its benefits,

968
00:53:33,451 --> 00:53:36,810
but it also has some drawbacks I think
in order for there to actually be a

969
00:53:36,811 --> 00:53:38,130
policy movement on this,

970
00:53:38,200 --> 00:53:41,970
it's someone needs to tackle
the engineering problem
and get buy in and say this

971
00:53:41,971 --> 00:53:45,750
is, we're going to build
something scalable but it's
not going to happen in one

972
00:53:45,751 --> 00:53:46,584
year.

973
00:53:47,190 --> 00:53:51,900
And unfortunately that that sales pitches
is hard to make when someone else says

974
00:53:51,901 --> 00:53:54,990
I can do it in a year and I can do it
for cheap. All I need is a video crew.

975
00:53:57,660 --> 00:53:58,493
Yeah.

976
00:53:59,180 --> 00:54:03,240
So what you just said about,
uh,

977
00:54:03,260 --> 00:54:06,340
the issues that you have,
proper citizen school.

978
00:54:08,330 --> 00:54:11,100
I pretty much agree with that

979
00:54:12,650 --> 00:54:15,890
about the issues about how

980
00:54:17,710 --> 00:54:21,380
cars, a lot of it, a lot
of expensive resources

981
00:54:23,500 --> 00:54:28,490
takes a long time to build
off all of this stuff. Um,

982
00:54:29,090 --> 00:54:31,160
so what would be,

983
00:54:32,060 --> 00:54:37,060
would you have advice for people that are
interested in doing this type of stuff

984
00:54:38,840 --> 00:54:43,460
and actually would like to dedicate
some time over the long term?

985
00:54:43,790 --> 00:54:47,570
Like how do we approach this
type of problem? Like what

986
00:54:49,360 --> 00:54:53,690
for people that aren't going to go
in like start or join your bootstrap

987
00:54:55,070 --> 00:54:56,800
well,
what are your constraints?

988
00:54:57,970 --> 00:54:59,690
Are you thinking like career
change or are you thinking

989
00:54:59,820 --> 00:55:04,270
you like what would be the type of thing
that you can do for a couple hours a

990
00:55:04,271 --> 00:55:08,800
week and so useful and meaningful impact?

991
00:55:08,930 --> 00:55:10,750
So I think, I think this, you know,

992
00:55:10,850 --> 00:55:14,360
that kind of thing is where you
can be complimentary to an Oregon,

993
00:55:14,361 --> 00:55:17,660
to an afterschool organization
like citizen schools, like
afterschool, all stars,

994
00:55:17,990 --> 00:55:20,810
right?
Maybe you personally decide,

995
00:55:20,960 --> 00:55:24,020
I'm going to invest in
teaching an afterschool
program in class through one of

996
00:55:24,021 --> 00:55:24,854
these programs,

997
00:55:25,250 --> 00:55:29,510
but I'm going to be responsible for
recruiting and maintaining a rotating

998
00:55:29,511 --> 00:55:32,840
community of volunteers,
right, of coworkers.

999
00:55:33,170 --> 00:55:36,350
And I'm going to make sure that they get
trained and since maybe you've done it

1000
00:55:36,351 --> 00:55:38,510
two or three times,
maybe you can be the one to train them.

1001
00:55:39,740 --> 00:55:44,570
If you keep that pathway sustainable,
you can start to have a bigger impact.

1002
00:55:45,140 --> 00:55:45,973
Um,

1003
00:55:46,880 --> 00:55:50,540
option to connect with an
organization like bootstrap and say,

1004
00:55:50,570 --> 00:55:53,270
I want to be available for
any teacher who has questions.

1005
00:55:53,720 --> 00:55:56,900
I would love to just be able to work
with those teachers even though I've only

1006
00:55:56,901 --> 00:56:00,590
got a couple of hours a week. Um, I think,

1007
00:56:01,780 --> 00:56:02,030
you know,

1008
00:56:02,030 --> 00:56:06,260
there are summer camps that they don't
necessarily hit the equity angle all that

1009
00:56:06,261 --> 00:56:10,640
well, but you can do so much when you
have kids for eight hours a day for three,

1010
00:56:10,641 --> 00:56:11,570
four, five weeks. I mean,

1011
00:56:11,571 --> 00:56:14,750
you can do a lot there without having
to give up an entire, you know,

1012
00:56:14,751 --> 00:56:15,584
part time year.

1013
00:56:17,800 --> 00:56:19,610
That's interesting.
Thank you.

1014
00:56:22,210 --> 00:56:24,530
Yeah. All right. Well, I know
our time is up and everyone,

1015
00:56:24,531 --> 00:56:26,590
everyone's really curious to hear
about the testimony that came out.

1016
00:56:26,591 --> 00:56:30,160
So I'll leave you guys to it.
But, uh, thank you so much
for having me. Thank you,

1017
00:56:30,161 --> 00:56:33,190
Google, for all of the technology
that we have built our platform on,

1018
00:56:33,191 --> 00:56:35,980
so we really appreciate it and
thanks especially to my host, Andrew,

1019
00:56:35,981 --> 00:56:36,730
for setting this up.

